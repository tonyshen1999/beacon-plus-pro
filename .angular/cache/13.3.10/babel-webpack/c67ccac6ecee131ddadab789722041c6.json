{"ast":null,"code":"/**\r\n * DevExtreme (esm/exporter/excel/excel.pattern_fill_helper.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isDefined } from \"../../core/utils/type\";\nimport tagHelper from \"./excel.tag_helper\";\nimport colorHelper from \"./excel.color_helper\";\nvar patternFillHelper = {\n  tryCreateTag: function tryCreateTag(sourceObj) {\n    var result = null;\n\n    if (isDefined(sourceObj)) {\n      result = {\n        patternType: sourceObj.patternType,\n        backgroundColor: colorHelper.tryCreateTag(sourceObj.backgroundColor),\n        foregroundColor: colorHelper.tryCreateTag(sourceObj.foregroundColor)\n      };\n\n      if (patternFillHelper.isEmpty(result)) {\n        result = null;\n      }\n    }\n\n    return result;\n  },\n  copy: function copy(source) {\n    var result = null;\n\n    if (isDefined(source)) {\n      result = {};\n\n      if (void 0 !== source.patternType) {\n        result.patternType = source.patternType;\n      }\n\n      if (void 0 !== source.backgroundColor) {\n        result.backgroundColor = colorHelper.copy(source.backgroundColor);\n      }\n\n      if (void 0 !== source.foregroundColor) {\n        result.foregroundColor = colorHelper.copy(source.foregroundColor);\n      }\n    }\n\n    return result;\n  },\n  areEqual: function areEqual(leftTag, rightTag) {\n    return patternFillHelper.isEmpty(leftTag) && patternFillHelper.isEmpty(rightTag) || isDefined(leftTag) && isDefined(rightTag) && leftTag.patternType === rightTag.patternType && colorHelper.areEqual(leftTag.backgroundColor, rightTag.backgroundColor) && colorHelper.areEqual(leftTag.foregroundColor, rightTag.foregroundColor);\n  },\n  isEmpty: function isEmpty(tag) {\n    return !isDefined(tag) || !isDefined(tag.patternType);\n  },\n  toXml: function toXml(tag) {\n    var content = [isDefined(tag.foregroundColor) ? colorHelper.toXml(\"fgColor\", tag.foregroundColor) : \"\", isDefined(tag.backgroundColor) ? colorHelper.toXml(\"bgColor\", tag.backgroundColor) : \"\"].join(\"\");\n    return tagHelper.toXml(\"patternFill\", {\n      patternType: tag.patternType\n    }, content);\n  }\n};\nexport default patternFillHelper;","map":null,"metadata":{},"sourceType":"module"}