{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/renovation/ui/pager/page_size/large.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"pageSize\", \"pageSizeChange\", \"pageSizes\"];\nimport { createFragment, createComponentVNode } from \"inferno\";\nimport { Fragment } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { LightButton } from \"../common/light_button\";\nimport { InternalPagerProps } from \"../common/pager_props\";\nimport { PAGER_SELECTED_PAGE_SIZE_CLASS, PAGER_PAGE_SIZE_CLASS } from \"../common/consts\";\nexport var viewFunction = function viewFunction(_ref) {\n  var pageSizesText = _ref.pageSizesText;\n  return createFragment(pageSizesText.map(function (_ref2) {\n    var className = _ref2.className,\n        click = _ref2.click,\n        label = _ref2.label,\n        text = _ref2.text;\n    return createComponentVNode(2, LightButton, {\n      className: className,\n      label: label,\n      onClick: click,\n      children: text\n    }, text);\n  }), 0);\n};\nexport var PageSizeLargeProps = {};\nvar PageSizeLargePropsType = {\n  get pageSize() {\n    return InternalPagerProps.pageSize;\n  }\n\n};\nexport var PageSizeLarge = /*#__PURE__*/(function () {\n  var PageSizeLarge = /*#__PURE__*/function (_BaseInfernoComponent) {\n    _inherits(PageSizeLarge, _BaseInfernoComponent);\n\n    var _super = _createSuper(PageSizeLarge);\n\n    function PageSizeLarge(props) {\n      var _this;\n\n      _classCallCheck(this, PageSizeLarge);\n\n      _this = _super.call(this, props);\n      _this.state = {};\n      _this.__getterCache = {};\n      _this.onPageSizeChange = _this.onPageSizeChange.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    _createClass(PageSizeLarge, [{\n      key: \"pageSizesText\",\n      get: function get() {\n        var _this2 = this;\n\n        if (void 0 !== this.__getterCache.pageSizesText) {\n          return this.__getterCache.pageSizesText;\n        }\n\n        return this.__getterCache.pageSizesText = function () {\n          var _this2$props = _this2.props,\n              pageSize = _this2$props.pageSize,\n              pageSizes = _this2$props.pageSizes;\n          return pageSizes.map(function (_ref3) {\n            var text = _ref3.text,\n                processedPageSize = _ref3.value;\n            var selected = processedPageSize === pageSize;\n            var className = selected ? PAGER_SELECTED_PAGE_SIZE_CLASS : PAGER_PAGE_SIZE_CLASS;\n            return {\n              className: className,\n              click: _this2.onPageSizeChange(processedPageSize),\n              label: \"Display \".concat(processedPageSize, \" items on page\"),\n              text: text\n            };\n          });\n        }();\n      }\n    }, {\n      key: \"onPageSizeChange\",\n      value: function onPageSizeChange(processedPageSize) {\n        var _this3 = this;\n\n        return function () {\n          _this3.props.pageSizeChange(processedPageSize);\n\n          return _this3.props.pageSize;\n        };\n      }\n    }, {\n      key: \"restAttributes\",\n      get: function get() {\n        var _this$props = this.props,\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n        return restProps;\n      }\n    }, {\n      key: \"componentWillUpdate\",\n      value: function componentWillUpdate(nextProps, nextState, context) {\n        if (this.props.pageSize !== nextProps.pageSize || this.props.pageSizes !== nextProps.pageSizes || this.props.pageSizeChange !== nextProps.pageSizeChange) {\n          this.__getterCache.pageSizesText = void 0;\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this.props;\n        return viewFunction({\n          props: _extends({}, props),\n          pageSizesText: this.pageSizesText,\n          restAttributes: this.restAttributes\n        });\n      }\n    }]);\n\n    return PageSizeLarge;\n  }(BaseInfernoComponent);\n\n  PageSizeLarge.defaultProps = PageSizeLargePropsType;\n  return PageSizeLarge;\n})();","map":null,"metadata":{},"sourceType":"module"}