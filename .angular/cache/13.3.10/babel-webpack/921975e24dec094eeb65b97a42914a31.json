{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/utils/subscribe_to_event.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport eventsEngine from \"../../events/core/events_engine\";\nimport * as clickEvent from \"../../events/click\";\nimport { addNamespace } from \"../../events/utils/index\";\nimport scrollEvents from \"../../events/gesture/emitter.gesture.scroll\";\nimport pointerEvents from \"../../events/pointer\";\nexport function subscribeToEvent(eventName) {\n  return function (element, handler, eventData, namespace) {\n    var event = namespace ? addNamespace(eventName, namespace) : eventName;\n\n    if (handler) {\n      eventsEngine.on(element, event, eventData, handler);\n      return function () {\n        eventsEngine.off(element, event, handler);\n      };\n    }\n\n    return;\n  };\n}\nexport var subscribeToClickEvent = subscribeToEvent(clickEvent.name);\nexport var subscribeToScrollEvent = subscribeToEvent(scrollEvents.scroll);\nexport var subscribeToScrollInitEvent = subscribeToEvent(scrollEvents.init);\nexport var subscribeToDXScrollStartEvent = subscribeToEvent(scrollEvents.start);\nexport var subscribeToDXScrollMoveEvent = subscribeToEvent(scrollEvents.move);\nexport var subscribeToDXScrollEndEvent = subscribeToEvent(scrollEvents.end);\nexport var subscribeToDXScrollStopEvent = subscribeToEvent(scrollEvents.stop);\nexport var subscribeToDXScrollCancelEvent = subscribeToEvent(scrollEvents.cancel);\nexport var subscribeToDXPointerDownEvent = subscribeToEvent(pointerEvents.down);\nexport var subscribeToDXPointerUpEvent = subscribeToEvent(pointerEvents.up);\nexport var subscribeToMouseEnterEvent = subscribeToEvent(\"mouseenter\");\nexport var subscribeToMouseLeaveEvent = subscribeToEvent(\"mouseleave\");\nexport var subscribeToKeyDownEvent = subscribeToEvent(\"keydown\");\nexport var subscribeToDxActiveEvent = subscribeToEvent(\"dxactive\");\nexport var subscribeToDxInactiveEvent = subscribeToEvent(\"dxinactive\");\nexport var subscribeToDxHoverStartEvent = subscribeToEvent(\"dxhoverstart\");\nexport var subscribeToDxHoverEndEvent = subscribeToEvent(\"dxhoverend\");\nexport var subscribeToDxFocusInEvent = subscribeToEvent(\"focusin\");\nexport var subscribeToDxFocusOutEvent = subscribeToEvent(\"focusout\");","map":null,"metadata":{},"sourceType":"module"}