{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/renovation/ui/scheduler/appointment/appointment.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"appointmentTemplate\", \"index\", \"viewModel\"];\nimport { createVNode, createComponentVNode, normalizeProps } from \"inferno\";\nimport { BaseInfernoComponent, normalizeStyles } from \"@devextreme/runtime/inferno\";\nimport { getAppointmentStyles } from \"./utils\";\nimport { AppointmentContent } from \"./content\";\nimport { combineClasses } from \"../../../utils/combine_classes\";\nexport var viewFunction = function viewFunction(_ref) {\n  var classes = _ref.classes,\n      data = _ref.data,\n      dateText = _ref.dateText,\n      index = _ref.index,\n      isReduced = _ref.isReduced,\n      _ref$props = _ref.props,\n      appointmentTemplate = _ref$props.appointmentTemplate,\n      isRecurrent = _ref$props.viewModel.info.isRecurrent,\n      styles = _ref.styles,\n      text = _ref.text;\n  var AppointmentTemplate = appointmentTemplate;\n  return createVNode(1, \"div\", classes, [!!appointmentTemplate && AppointmentTemplate({\n    data: data,\n    index: index\n  }), !appointmentTemplate && createComponentVNode(2, AppointmentContent, {\n    text: text,\n    dateText: dateText,\n    isRecurrent: isRecurrent,\n    isReduced: isReduced\n  })], 0, {\n    style: normalizeStyles(styles),\n    title: text,\n    role: \"button\"\n  });\n};\nexport var AppointmentProps = {\n  index: 0\n};\n\nvar getTemplate = function getTemplate(TemplateProp) {\n  return TemplateProp && (TemplateProp.defaultProps ? function (props) {\n    return normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props)));\n  } : TemplateProp);\n};\n\nexport var Appointment = /*#__PURE__*/(function () {\n  var Appointment = /*#__PURE__*/function (_BaseInfernoComponent) {\n    _inherits(Appointment, _BaseInfernoComponent);\n\n    var _super = _createSuper(Appointment);\n\n    function Appointment(props) {\n      var _this;\n\n      _classCallCheck(this, Appointment);\n\n      _this = _super.call(this, props);\n      _this.state = {};\n      return _this;\n    }\n\n    _createClass(Appointment, [{\n      key: \"text\",\n      get: function get() {\n        return this.props.viewModel.appointment.text;\n      }\n    }, {\n      key: \"dateText\",\n      get: function get() {\n        return this.props.viewModel.info.dateText;\n      }\n    }, {\n      key: \"styles\",\n      get: function get() {\n        return getAppointmentStyles(this.props.viewModel);\n      }\n    }, {\n      key: \"data\",\n      get: function get() {\n        return {\n          appointmentData: this.props.viewModel.info.appointment,\n          targetedAppointmentData: this.props.viewModel.appointment\n        };\n      }\n    }, {\n      key: \"index\",\n      get: function get() {\n        return this.props.index;\n      }\n    }, {\n      key: \"isReduced\",\n      get: function get() {\n        var appointmentReduced = this.props.viewModel.info.appointmentReduced;\n        return !!appointmentReduced;\n      }\n    }, {\n      key: \"classes\",\n      get: function get() {\n        var _this$props$viewModel = this.props.viewModel.info,\n            allDay = _this$props$viewModel.allDay,\n            appointmentReduced = _this$props$viewModel.appointmentReduced,\n            direction = _this$props$viewModel.direction,\n            isRecurrent = _this$props$viewModel.isRecurrent;\n        var isVerticalDirection = \"vertical\" === direction;\n        return combineClasses({\n          \"dx-scheduler-appointment\": true,\n          \"dx-scheduler-appointment-horizontal\": !isVerticalDirection,\n          \"dx-scheduler-appointment-vertical\": isVerticalDirection,\n          \"dx-scheduler-appointment-recurrence\": isRecurrent,\n          \"dx-scheduler-all-day-appointment\": allDay,\n          \"dx-scheduler-appointment-reduced\": this.isReduced,\n          \"dx-scheduler-appointment-head\": \"head\" === appointmentReduced,\n          \"dx-scheduler-appointment-body\": \"body\" === appointmentReduced,\n          \"dx-scheduler-appointment-tail\": \"tail\" === appointmentReduced\n        });\n      }\n    }, {\n      key: \"restAttributes\",\n      get: function get() {\n        var _this$props = this.props,\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n        return restProps;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this.props;\n        return viewFunction({\n          props: _extends({}, props, {\n            appointmentTemplate: getTemplate(props.appointmentTemplate)\n          }),\n          text: this.text,\n          dateText: this.dateText,\n          styles: this.styles,\n          data: this.data,\n          index: this.index,\n          isReduced: this.isReduced,\n          classes: this.classes,\n          restAttributes: this.restAttributes\n        });\n      }\n    }]);\n\n    return Appointment;\n  }(BaseInfernoComponent);\n\n  Appointment.defaultProps = AppointmentProps;\n  return Appointment;\n})();","map":null,"metadata":{},"sourceType":"module"}