{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/radio_group/radio_button.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport devices from \"../../core/devices\";\nimport { extend } from \"../../core/utils/extend\";\nimport registerComponent from \"../../core/component_registrator\";\nimport Editor from \"../editor/editor\";\nimport { addNamespace } from \"../../events/utils/index\";\nimport { name as clickEventName } from \"../../events/click\";\nvar RADIO_BUTTON_CLASS = \"dx-radiobutton\";\nvar RADIO_BUTTON_ICON_CLASS = \"dx-radiobutton-icon\";\nvar RADIO_BUTTON_ICON_DOT_CLASS = \"dx-radiobutton-icon-dot\";\nvar RADIO_BUTTON_CHECKED_CLASS = \"dx-radiobutton-checked\";\nvar RADIO_BUTTON_ICON_CHECKED_CLASS = \"dx-radiobutton-icon-checked\";\nvar RadioButton = Editor.inherit({\n  _supportedKeys: function _supportedKeys() {\n    return extend(this.callBase(), {\n      space: function space(e) {\n        e.preventDefault();\n\n        this._clickAction({\n          event: e\n        });\n      }\n    });\n  },\n  _getDefaultOptions: function _getDefaultOptions() {\n    return extend(this.callBase(), {\n      hoverStateEnabled: true,\n      activeStateEnabled: true,\n      value: false\n    });\n  },\n  _canValueBeChangedByClick: function _canValueBeChangedByClick() {\n    return true;\n  },\n  _defaultOptionsRules: function _defaultOptionsRules() {\n    return this.callBase().concat([{\n      device: function device() {\n        return \"desktop\" === devices.real().deviceType && !devices.isSimulator();\n      },\n      options: {\n        focusStateEnabled: true\n      }\n    }]);\n  },\n  _init: function _init() {\n    this.callBase();\n    this.$element().addClass(RADIO_BUTTON_CLASS);\n  },\n  _initMarkup: function _initMarkup() {\n    this.callBase();\n\n    this._renderIcon();\n\n    this._renderCheckedState(this.option(\"value\"));\n\n    this._renderClick();\n\n    this.setAria(\"role\", \"radio\");\n  },\n  _renderIcon: function _renderIcon() {\n    this._$icon = $(\"<div>\").addClass(RADIO_BUTTON_ICON_CLASS);\n    $(\"<div>\").addClass(RADIO_BUTTON_ICON_DOT_CLASS).appendTo(this._$icon);\n    this.$element().append(this._$icon);\n  },\n  _renderCheckedState: function _renderCheckedState(checked) {\n    this.$element().toggleClass(RADIO_BUTTON_CHECKED_CLASS, checked).find(\".\" + RADIO_BUTTON_ICON_CLASS).toggleClass(RADIO_BUTTON_ICON_CHECKED_CLASS, checked);\n    this.setAria(\"checked\", checked);\n  },\n  _renderClick: function _renderClick() {\n    var eventName = addNamespace(clickEventName, this.NAME);\n    this._clickAction = this._createAction(function (args) {\n      this._clickHandler(args.event);\n    }.bind(this));\n    eventsEngine.off(this.$element(), eventName);\n    eventsEngine.on(this.$element(), eventName, function (e) {\n      this._clickAction({\n        event: e\n      });\n    }.bind(this));\n  },\n  _clickHandler: function _clickHandler(e) {\n    this._saveValueChangeEvent(e);\n\n    this.option(\"value\", true);\n  },\n  _optionChanged: function _optionChanged(args) {\n    switch (args.name) {\n      case \"value\":\n        this._renderCheckedState(args.value);\n\n        this.callBase(args);\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  }\n});\nregisterComponent(\"dxRadioButton\", RadioButton);\nexport default RadioButton;","map":null,"metadata":{},"sourceType":"module"}