{"ast":null,"code":"/**\r\n * DevExtreme (esm/exporter/file_saver.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../core/renderer\";\nimport domAdapter from \"../core/dom_adapter\";\nimport { getWindow, getNavigator } from \"../core/utils/window\";\nimport eventsEngine from \"../events/core/events_engine\";\nimport errors from \"../ui/widget/ui.errors\";\nimport { isDefined, isFunction } from \"../core/utils/type\";\nimport { logger } from \"../core/utils/console\";\nvar window = getWindow();\nvar navigator = getNavigator();\nvar FILE_EXTESIONS = {\n  EXCEL: \"xlsx\",\n  CSS: \"css\",\n  PNG: \"png\",\n  JPEG: \"jpeg\",\n  GIF: \"gif\",\n  SVG: \"svg\",\n  PDF: \"pdf\"\n};\nexport var MIME_TYPES = {\n  CSS: \"text/css\",\n  EXCEL: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n  PNG: \"image/png\",\n  JPEG: \"image/jpeg\",\n  GIF: \"image/gif\",\n  SVG: \"image/svg+xml\",\n  PDF: \"application/pdf\"\n};\nexport var fileSaver = {\n  _revokeObjectURLTimeout: 3e4,\n  _getDataUri: function _getDataUri(format, data) {\n    var mimeType = this._getMimeType(format);\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(data);\n  },\n  _getMimeType: function _getMimeType(format) {\n    return MIME_TYPES[format] || \"application/octet-stream\";\n  },\n  _linkDownloader: function _linkDownloader(fileName, href) {\n    var exportLinkElement = domAdapter.createElement(\"a\");\n    exportLinkElement.download = fileName;\n    exportLinkElement.href = href;\n    exportLinkElement.target = \"_blank\";\n    return exportLinkElement;\n  },\n  _formDownloader: function _formDownloader(proxyUrl, fileName, contentType, data) {\n    var formAttributes = {\n      method: \"post\",\n      action: proxyUrl,\n      enctype: \"multipart/form-data\"\n    };\n    var exportForm = $(\"<form>\").css({\n      display: \"none\"\n    }).attr(formAttributes);\n\n    function setAttributes(element, attributes) {\n      for (var key in attributes) {\n        element.setAttribute(key, attributes[key]);\n      }\n\n      return element;\n    }\n\n    exportForm.append(setAttributes(domAdapter.createElement(\"input\"), {\n      type: \"hidden\",\n      name: \"fileName\",\n      value: fileName\n    }));\n    exportForm.append(setAttributes(domAdapter.createElement(\"input\"), {\n      type: \"hidden\",\n      name: \"contentType\",\n      value: contentType\n    }));\n    exportForm.append(setAttributes(domAdapter.createElement(\"input\"), {\n      type: \"hidden\",\n      name: \"data\",\n      value: data\n    }));\n    exportForm.appendTo(\"body\");\n    eventsEngine.trigger(exportForm, \"submit\");\n\n    if (eventsEngine.trigger(exportForm, \"submit\")) {\n      exportForm.remove();\n    }\n  },\n  _saveByProxy: function _saveByProxy(proxyUrl, fileName, format, data) {\n    var contentType = this._getMimeType(format);\n\n    return this._formDownloader(proxyUrl, fileName, contentType, data);\n  },\n  _winJSBlobSave: function _winJSBlobSave(blob, fileName, format) {\n    var savePicker = new Windows.Storage.Pickers.FileSavePicker();\n    savePicker.suggestedStartLocation = Windows.Storage.Pickers.PickerLocationId.documentsLibrary;\n    var fileExtension = FILE_EXTESIONS[format];\n\n    if (fileExtension) {\n      var mimeType = this._getMimeType(format);\n\n      savePicker.fileTypeChoices.insert(mimeType, [\".\" + fileExtension]);\n    }\n\n    savePicker.suggestedFileName = fileName;\n    savePicker.pickSaveFileAsync().then(function (file) {\n      if (file) {\n        file.openAsync(Windows.Storage.FileAccessMode.readWrite).then(function (outputStream) {\n          var inputStream = blob.msDetachStream();\n          Windows.Storage.Streams.RandomAccessStream.copyAsync(inputStream, outputStream).then(function () {\n            outputStream.flushAsync().done(function () {\n              inputStream.close();\n              outputStream.close();\n            });\n          });\n        });\n      }\n    });\n  },\n  _click: function _click(link) {\n    try {\n      link.dispatchEvent(new MouseEvent(\"click\", {\n        cancelable: true\n      }));\n    } catch (e) {\n      var event = domAdapter.getDocument().createEvent(\"MouseEvents\");\n      event.initMouseEvent(\"click\", true, true, window, 0, 0, 0, 80, 20, false, false, false, false, 0, null);\n      link.dispatchEvent(event);\n    }\n  },\n  _saveBlobAs: function _saveBlobAs(fileName, format, data) {\n    var _this = this;\n\n    this._blobSaved = false;\n\n    if (isDefined(navigator.msSaveOrOpenBlob)) {\n      navigator.msSaveOrOpenBlob(data, fileName);\n      this._blobSaved = true;\n    } else if (isDefined(window.WinJS)) {\n      this._winJSBlobSave(data, fileName, format);\n\n      this._blobSaved = true;\n    } else {\n      var URL = window.URL || window.webkitURL || window.mozURL || window.msURL || window.oURL;\n\n      if (isDefined(URL)) {\n        var objectURL = URL.createObjectURL(data);\n\n        var downloadLink = this._linkDownloader(fileName, objectURL);\n\n        setTimeout(function () {\n          URL.revokeObjectURL(objectURL);\n          _this._objectUrlRevoked = true;\n        }, this._revokeObjectURLTimeout);\n\n        this._click(downloadLink);\n      } else {\n        logger.warn(\"window.URL || window.webkitURL || window.mozURL || window.msURL || window.oURL is not defined\");\n      }\n    }\n  },\n  saveAs: function saveAs(fileName, format, data, proxyURL, forceProxy) {\n    var fileExtension = FILE_EXTESIONS[format];\n\n    if (fileExtension) {\n      fileName += \".\" + fileExtension;\n    }\n\n    if (isDefined(proxyURL)) {\n      errors.log(\"W0001\", \"Export\", \"proxyURL\", \"19.2\", \"This option is no longer required\");\n    }\n\n    if (forceProxy) {\n      this._saveByProxy(proxyURL, fileName, format, data);\n    } else if (isFunction(window.Blob)) {\n      this._saveBlobAs(fileName, format, data);\n    } else if (isDefined(proxyURL) && !isDefined(navigator.userAgent.match(/iPad/i))) {\n      this._saveByProxy(proxyURL, fileName, format, data);\n    } else {\n      if (!isDefined(navigator.userAgent.match(/iPad/i))) {\n        errors.log(\"E1034\");\n      }\n\n      var downloadLink = this._linkDownloader(fileName, this._getDataUri(format, data));\n\n      this._click(downloadLink);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}