{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/list/ui.list.edit.decorator.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getWidth } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { noop } from \"../../core/utils/common\";\nimport Class from \"../../core/class\";\nimport { start as swipeEventStart, swipe as swipeEventSwipe, end as swipeEventEnd } from \"../../events/swipe\";\nimport { addNamespace } from \"../../events/utils/index\";\nvar LIST_EDIT_DECORATOR = \"dxListEditDecorator\";\nvar SWIPE_START_EVENT_NAME = addNamespace(swipeEventStart, LIST_EDIT_DECORATOR);\nvar SWIPE_UPDATE_EVENT_NAME = addNamespace(swipeEventSwipe, LIST_EDIT_DECORATOR);\nvar SWIPE_END_EVENT_NAME = addNamespace(swipeEventEnd, LIST_EDIT_DECORATOR);\nvar EditDecorator = Class.inherit({\n  ctor: function ctor(list) {\n    this._list = list;\n\n    this._init();\n  },\n  _init: noop,\n  _shouldHandleSwipe: false,\n  _attachSwipeEvent: function _attachSwipeEvent(config) {\n    var swipeConfig = {\n      itemSizeFunc: function () {\n        if (this._clearSwipeCache) {\n          this._itemWidthCache = getWidth(this._list.$element());\n          this._clearSwipeCache = false;\n        }\n\n        return this._itemWidthCache;\n      }.bind(this)\n    };\n    eventsEngine.on(config.$itemElement, SWIPE_START_EVENT_NAME, swipeConfig, this._itemSwipeStartHandler.bind(this));\n    eventsEngine.on(config.$itemElement, SWIPE_UPDATE_EVENT_NAME, this._itemSwipeUpdateHandler.bind(this));\n    eventsEngine.on(config.$itemElement, SWIPE_END_EVENT_NAME, this._itemSwipeEndHandler.bind(this));\n  },\n  _itemSwipeStartHandler: function _itemSwipeStartHandler(e) {\n    var $itemElement = $(e.currentTarget);\n\n    if ($itemElement.is(\".dx-state-disabled, .dx-state-disabled *\")) {\n      e.cancel = true;\n      return;\n    }\n\n    clearTimeout(this._list._inkRippleTimer);\n\n    this._swipeStartHandler($itemElement, e);\n  },\n  _itemSwipeUpdateHandler: function _itemSwipeUpdateHandler(e) {\n    var $itemElement = $(e.currentTarget);\n\n    this._swipeUpdateHandler($itemElement, e);\n  },\n  _itemSwipeEndHandler: function _itemSwipeEndHandler(e) {\n    var $itemElement = $(e.currentTarget);\n\n    this._swipeEndHandler($itemElement, e);\n\n    this._clearSwipeCache = true;\n  },\n  beforeBag: noop,\n  afterBag: noop,\n  _commonOptions: function _commonOptions() {\n    return {\n      activeStateEnabled: this._list.option(\"activeStateEnabled\"),\n      hoverStateEnabled: this._list.option(\"hoverStateEnabled\"),\n      focusStateEnabled: this._list.option(\"focusStateEnabled\")\n    };\n  },\n  modifyElement: function modifyElement(config) {\n    if (this._shouldHandleSwipe) {\n      this._attachSwipeEvent(config);\n\n      this._clearSwipeCache = true;\n    }\n  },\n  afterRender: noop,\n  handleClick: noop,\n  handleKeyboardEvents: noop,\n  handleEnterPressing: noop,\n  handleContextMenu: noop,\n  _swipeStartHandler: noop,\n  _swipeUpdateHandler: noop,\n  _swipeEndHandler: noop,\n  visibilityChange: noop,\n  getExcludedSelectors: noop,\n  dispose: noop\n});\nexport default EditDecorator;","map":null,"metadata":{},"sourceType":"module"}