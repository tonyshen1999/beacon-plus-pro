{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/dateAdapter.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport dateUtils from \"../../core/utils/date\";\nvar toMs = dateUtils.dateToMilliseconds;\n\nvar DateAdapterCore = /*#__PURE__*/function () {\n  function DateAdapterCore(source) {\n    _classCallCheck(this, DateAdapterCore);\n\n    this._source = new Date(source.getTime ? source.getTime() : source);\n  }\n\n  _createClass(DateAdapterCore, [{\n    key: \"source\",\n    get: function get() {\n      return this._source;\n    }\n  }, {\n    key: \"result\",\n    value: function result() {\n      return this._source;\n    }\n  }, {\n    key: \"getTimezoneOffset\",\n    value: function getTimezoneOffset() {\n      var format = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0;\n\n      var value = this._source.getTimezoneOffset();\n\n      if (\"minute\" === format) {\n        return value * toMs(\"minute\");\n      }\n\n      return value;\n    }\n  }, {\n    key: \"getTime\",\n    value: function getTime() {\n      return this._source.getTime();\n    }\n  }, {\n    key: \"setTime\",\n    value: function setTime(value) {\n      this._source.setTime(value);\n\n      return this;\n    }\n  }, {\n    key: \"addTime\",\n    value: function addTime(value) {\n      this._source.setTime(this._source.getTime() + value);\n\n      return this;\n    }\n  }, {\n    key: \"setMinutes\",\n    value: function setMinutes(value) {\n      this._source.setMinutes(value);\n\n      return this;\n    }\n  }, {\n    key: \"addMinutes\",\n    value: function addMinutes(value) {\n      this._source.setMinutes(this._source.getMinutes() + value);\n\n      return this;\n    }\n  }, {\n    key: \"subtractMinutes\",\n    value: function subtractMinutes(value) {\n      this._source.setMinutes(this._source.getMinutes() - value);\n\n      return this;\n    }\n  }]);\n\n  return DateAdapterCore;\n}();\n\nvar DateAdapter = function DateAdapter(date) {\n  return new DateAdapterCore(date);\n};\n\nexport default DateAdapter;","map":null,"metadata":{},"sourceType":"module"}