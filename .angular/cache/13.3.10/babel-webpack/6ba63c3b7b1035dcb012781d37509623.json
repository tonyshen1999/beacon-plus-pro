{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/appointments/rendering_strategies/appointmentsPositioning_strategy_adaptive.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport AppointmentPositioningStrategy from \"./appointmentsPositioning_strategy_base\";\nvar COLLECTOR_ADAPTIVE_SIZE = 28;\nvar COLLECTOR_ADAPTIVE_BOTTOM_OFFSET = 40;\nvar ADAPTIVE_APPOINTMENT_DEFAULT_OFFSET = 35;\nvar ADAPTIVE_APPOINTMENT_DEFAULT_WIDTH = 30;\n\nvar AdaptivePositioningStrategy = /*#__PURE__*/function (_AppointmentPositioni) {\n  _inherits(AdaptivePositioningStrategy, _AppointmentPositioni);\n\n  var _super = _createSuper(AdaptivePositioningStrategy);\n\n  function AdaptivePositioningStrategy() {\n    _classCallCheck(this, AdaptivePositioningStrategy);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AdaptivePositioningStrategy, [{\n    key: \"getDropDownAppointmentWidth\",\n    value: function getDropDownAppointmentWidth(intervalCount, isAllDay) {\n      return this.getDropDownButtonAdaptiveSize();\n    }\n  }, {\n    key: \"getDropDownButtonAdaptiveSize\",\n    value: function getDropDownButtonAdaptiveSize() {\n      return COLLECTOR_ADAPTIVE_SIZE;\n    }\n  }, {\n    key: \"getCollectorTopOffset\",\n    value: function getCollectorTopOffset(allDay) {\n      var renderingStrategy = this._renderingStrategy;\n\n      if (renderingStrategy.allDaySupported() && allDay) {\n        return (renderingStrategy.allDayHeight - renderingStrategy.getDropDownButtonAdaptiveSize()) / 2;\n      } else {\n        return this._renderingStrategy.cellHeight - COLLECTOR_ADAPTIVE_BOTTOM_OFFSET;\n      }\n    }\n  }, {\n    key: \"getCollectorLeftOffset\",\n    value: function getCollectorLeftOffset() {\n      var collectorWidth = this._renderingStrategy.getDropDownAppointmentWidth();\n\n      return (this._renderingStrategy.cellWidth - collectorWidth) / 2;\n    }\n  }, {\n    key: \"getAppointmentDefaultOffset\",\n    value: function getAppointmentDefaultOffset() {\n      return ADAPTIVE_APPOINTMENT_DEFAULT_OFFSET;\n    }\n  }, {\n    key: \"getDynamicAppointmentCountPerCell\",\n    value: function getDynamicAppointmentCountPerCell() {\n      var renderingStrategy = this._renderingStrategy;\n\n      if (renderingStrategy.allDaySupported()) {\n        return {\n          allDay: 0,\n          simple: this._calculateDynamicAppointmentCountPerCell() || this._getAppointmentMinCount()\n        };\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"getDropDownAppointmentHeight\",\n    value: function getDropDownAppointmentHeight() {\n      return COLLECTOR_ADAPTIVE_SIZE;\n    }\n  }, {\n    key: \"_getAppointmentMinCount\",\n    value: function _getAppointmentMinCount() {\n      return 0;\n    }\n  }, {\n    key: \"_getAppointmentDefaultWidth\",\n    value: function _getAppointmentDefaultWidth() {\n      var renderingStrategy = this._renderingStrategy;\n\n      if (renderingStrategy.allDaySupported()) {\n        return ADAPTIVE_APPOINTMENT_DEFAULT_WIDTH;\n      }\n\n      return _get(_getPrototypeOf(AdaptivePositioningStrategy.prototype), \"_getAppointmentDefaultWidth\", this).call(this);\n    }\n  }, {\n    key: \"_calculateDynamicAppointmentCountPerCell\",\n    value: function _calculateDynamicAppointmentCountPerCell() {\n      return Math.floor(this._renderingStrategy._getAppointmentMaxWidth() / this._renderingStrategy._getAppointmentDefaultWidth());\n    }\n  }]);\n\n  return AdaptivePositioningStrategy;\n}(AppointmentPositioningStrategy);\n\nexport default AdaptivePositioningStrategy;","map":null,"metadata":{},"sourceType":"module"}