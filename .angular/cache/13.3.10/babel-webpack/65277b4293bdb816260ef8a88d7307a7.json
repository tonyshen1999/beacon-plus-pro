{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.base.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport registerComponent from \"../../core/component_registrator\";\nimport { deferRender, noop } from \"../../core/utils/common\";\nimport { isFunction, isString } from \"../../core/utils/type\";\nimport { each } from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { logger } from \"../../core/utils/console\";\nimport browser from \"../../core/utils/browser\";\nimport Widget from \"../widget/ui.widget\";\nimport gridCore from \"./ui.data_grid.core\";\nimport { isMaterial } from \"../themes\";\nvar DATAGRID_ROW_SELECTOR = \".dx-row\";\nvar DATAGRID_DEPRECATED_TEMPLATE_WARNING = \"Specifying grid templates with the jQuery selector name is now deprecated. Use the DOM Node or the jQuery object that references this selector instead.\";\nimport \"./ui.data_grid.column_headers\";\nimport \"./ui.data_grid.columns_controller\";\nimport \"./ui.data_grid.data_controller\";\nimport \"./ui.data_grid.sorting\";\nimport \"./ui.data_grid.rows\";\nimport \"./ui.data_grid.context_menu\";\nimport \"./ui.data_grid.error_handling\";\nimport \"./ui.data_grid.grid_view\";\nimport \"./ui.data_grid.header_panel\";\ngridCore.registerModulesOrder([\"stateStoring\", \"columns\", \"selection\", \"editorFactory\", \"columnChooser\", \"grouping\", \"editing\", \"editingRowBased\", \"editingFormBased\", \"editingCellBased\", \"masterDetail\", \"validating\", \"adaptivity\", \"data\", \"virtualScrolling\", \"columnHeaders\", \"filterRow\", \"headerPanel\", \"headerFilter\", \"sorting\", \"search\", \"rows\", \"pager\", \"columnsResizingReordering\", \"contextMenu\", \"keyboardNavigation\", \"errorHandling\", \"summary\", \"columnFixing\", \"export\", \"gridView\"]);\nvar DataGrid = Widget.inherit({\n  _activeStateUnit: DATAGRID_ROW_SELECTOR,\n  _getDefaultOptions: function _getDefaultOptions() {\n    var result = this.callBase();\n    each(gridCore.modules, function () {\n      if (isFunction(this.defaultOptions)) {\n        extend(true, result, this.defaultOptions());\n      }\n    });\n    return result;\n  },\n  _setDeprecatedOptions: function _setDeprecatedOptions() {\n    this.callBase();\n    extend(this._deprecatedOptions, {\n      useKeyboard: {\n        since: \"19.2\",\n        alias: \"keyboardNavigation.enabled\"\n      },\n      rowTemplate: {\n        since: \"21.2\",\n        message: 'Use the \"dataRowTemplate\" option instead'\n      },\n      onToolbarPreparing: {\n        since: \"21.2\",\n        message: 'Use the \"toolbar\" option instead'\n      }\n    });\n  },\n  _defaultOptionsRules: function _defaultOptionsRules() {\n    return this.callBase().concat([{\n      device: {\n        platform: \"ios\"\n      },\n      options: {\n        showRowLines: true\n      }\n    }, {\n      device: function device() {\n        return isMaterial();\n      },\n      options: {\n        showRowLines: true,\n        showColumnLines: false,\n        headerFilter: {\n          height: 315\n        },\n        editing: {\n          useIcons: true\n        },\n        selection: {\n          showCheckBoxesMode: \"always\"\n        }\n      }\n    }, {\n      device: function device() {\n        return browser.webkit;\n      },\n      options: {\n        loadingTimeout: 30,\n        loadPanel: {\n          animation: {\n            show: {\n              easing: \"cubic-bezier(1, 0, 1, 0)\",\n              duration: 500,\n              from: {\n                opacity: 0\n              },\n              to: {\n                opacity: 1\n              }\n            }\n          }\n        }\n      }\n    }, {\n      device: function device(_device) {\n        return \"desktop\" !== _device.deviceType;\n      },\n      options: {\n        grouping: {\n          expandMode: \"rowClick\"\n        }\n      }\n    }]);\n  },\n  _init: function _init() {\n    this.callBase();\n    gridCore.processModules(this, gridCore);\n    gridCore.callModuleItemsMethod(this, \"init\");\n  },\n  _clean: noop,\n  _optionChanged: function _optionChanged(args) {\n    gridCore.callModuleItemsMethod(this, \"optionChanged\", [args]);\n\n    if (!args.handled) {\n      this.callBase(args);\n    }\n  },\n  _dimensionChanged: function _dimensionChanged() {\n    this.updateDimensions(true);\n  },\n  _visibilityChanged: function _visibilityChanged(visible) {\n    if (visible) {\n      this.updateDimensions();\n    }\n  },\n  _initMarkup: function _initMarkup() {\n    this.callBase.apply(this, arguments);\n    this.getView(\"gridView\").render(this.$element());\n  },\n  _renderContentImpl: function _renderContentImpl() {\n    this.getView(\"gridView\").update();\n  },\n  _renderContent: function _renderContent() {\n    var that = this;\n    deferRender(function () {\n      that._renderContentImpl();\n    });\n  },\n  _getTemplate: function _getTemplate(templateName) {\n    var template = templateName;\n\n    if (isString(template) && \"#\" === template[0]) {\n      template = $(templateName);\n      logger.warn(DATAGRID_DEPRECATED_TEMPLATE_WARNING);\n    }\n\n    return this.callBase(template);\n  },\n  _dispose: function _dispose() {\n    this.callBase();\n    gridCore.callModuleItemsMethod(this, \"dispose\");\n  },\n  isReady: function isReady() {\n    return this.getController(\"data\").isReady();\n  },\n  beginUpdate: function beginUpdate() {\n    this.callBase();\n    gridCore.callModuleItemsMethod(this, \"beginUpdate\");\n  },\n  endUpdate: function endUpdate() {\n    gridCore.callModuleItemsMethod(this, \"endUpdate\");\n    this.callBase();\n  },\n  getController: function getController(name) {\n    return this._controllers[name];\n  },\n  getView: function getView(name) {\n    return this._views[name];\n  },\n  focus: function focus(element) {\n    this.getController(\"keyboardNavigation\").focus(element);\n  }\n});\nDataGrid.registerModule = gridCore.registerModule.bind(gridCore);\nregisterComponent(\"dxDataGrid\", DataGrid);\nexport default DataGrid;","map":null,"metadata":{},"sourceType":"module"}