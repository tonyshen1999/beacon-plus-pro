{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/ui/diagram/ui.diagram.context_toolbox.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport Widget from \"../widget/ui.widget\";\nimport Popover from \"../popover\";\nimport { getDiagram } from \"./diagram.importer\";\nimport { hasWindow, getWindow } from \"../../core/utils/window\";\nvar DIAGRAM_CONTEXT_TOOLBOX_TARGET_CLASS = \"dx-diagram-context-toolbox-target\";\nvar DIAGRAM_CONTEXT_TOOLBOX_CLASS = \"dx-diagram-context-toolbox\";\nvar DIAGRAM_TOUCH_CONTEXT_TOOLBOX_CLASS = \"dx-diagram-touch-context-toolbox\";\nvar DIAGRAM_CONTEXT_TOOLBOX_CONTENT_CLASS = \"dx-diagram-context-toolbox-content\";\n\nvar DiagramContextToolbox = /*#__PURE__*/function (_Widget) {\n  _inherits(DiagramContextToolbox, _Widget);\n\n  var _super = _createSuper(DiagramContextToolbox);\n\n  function DiagramContextToolbox() {\n    _classCallCheck(this, DiagramContextToolbox);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DiagramContextToolbox, [{\n    key: \"_init\",\n    value: function _init() {\n      _get(_getPrototypeOf(DiagramContextToolbox.prototype), \"_init\", this).call(this);\n\n      this._onShownAction = this._createActionByOption(\"onShown\");\n      this._popoverPositionData = [{\n        my: {\n          x: \"center\",\n          y: \"top\"\n        },\n        at: {\n          x: \"center\",\n          y: \"bottom\"\n        },\n        offset: {\n          x: 0,\n          y: 5\n        }\n      }, {\n        my: {\n          x: \"right\",\n          y: \"center\"\n        },\n        at: {\n          x: \"left\",\n          y: \"center\"\n        },\n        offset: {\n          x: -5,\n          y: 0\n        }\n      }, {\n        my: {\n          x: \"center\",\n          y: \"bottom\"\n        },\n        at: {\n          x: \"center\",\n          y: \"top\"\n        },\n        offset: {\n          x: 0,\n          y: -5\n        }\n      }, {\n        my: {\n          x: \"left\",\n          y: \"center\"\n        },\n        at: {\n          x: \"right\",\n          y: \"center\"\n        },\n        offset: {\n          x: 5,\n          y: 0\n        }\n      }];\n    }\n  }, {\n    key: \"_initMarkup\",\n    value: function _initMarkup() {\n      _get(_getPrototypeOf(DiagramContextToolbox.prototype), \"_initMarkup\", this).call(this);\n\n      this._$popoverTargetElement = $(\"<div>\").addClass(DIAGRAM_CONTEXT_TOOLBOX_TARGET_CLASS).appendTo(this.$element());\n      var $popoverElement = $(\"<div>\").appendTo(this.$element());\n      var popoverClass = DIAGRAM_CONTEXT_TOOLBOX_CLASS;\n\n      if (this._isTouchMode()) {\n        popoverClass += \" \" + DIAGRAM_TOUCH_CONTEXT_TOOLBOX_CLASS;\n      }\n\n      this._popoverInstance = this._createComponent($popoverElement, Popover, {\n        closeOnOutsideClick: false,\n        container: this.$element()\n      });\n\n      this._popoverInstance.$element().addClass(popoverClass);\n    }\n  }, {\n    key: \"_isTouchMode\",\n    value: function _isTouchMode() {\n      var _getDiagram = getDiagram(),\n          Browser = _getDiagram.Browser;\n\n      if (Browser.TouchUI) {\n        return true;\n      }\n\n      if (!hasWindow()) {\n        return false;\n      }\n\n      var window = getWindow();\n      return window.navigator && window.navigator.maxTouchPoints > 0;\n    }\n  }, {\n    key: \"_show\",\n    value: function _show(x, y, side, category, callback) {\n      this._popoverInstance.hide();\n\n      var $content = $(\"<div>\").addClass(DIAGRAM_CONTEXT_TOOLBOX_CONTENT_CLASS);\n\n      if (void 0 !== this.option(\"toolboxWidth\")) {\n        $content.css(\"width\", this.option(\"toolboxWidth\"));\n      }\n\n      this._$popoverTargetElement.css({\n        left: x + this._popoverPositionData[side].offset.x,\n        top: y + this._popoverPositionData[side].offset.y\n      }).show();\n\n      var window = getWindow();\n\n      var targetDiv = this._$popoverTargetElement.get(0);\n\n      this._$popoverTargetElement.css({\n        left: targetDiv.offsetLeft - (targetDiv.getBoundingClientRect().left + window.scrollX - targetDiv.offsetLeft),\n        top: targetDiv.offsetTop - (targetDiv.getBoundingClientRect().top + window.scrollY - targetDiv.offsetTop)\n      });\n\n      this._popoverInstance.option({\n        position: {\n          my: this._popoverPositionData[side].my,\n          at: this._popoverPositionData[side].at,\n          of: this._$popoverTargetElement\n        },\n        contentTemplate: $content,\n        onContentReady: function () {\n          var _this = this;\n\n          var $element = this.$element().find(\".\" + DIAGRAM_CONTEXT_TOOLBOX_CONTENT_CLASS);\n\n          this._onShownAction({\n            category: category,\n            callback: callback,\n            $element: $element,\n            hide: function hide() {\n              return _this._popoverInstance.hide();\n            }\n          });\n        }.bind(this)\n      });\n\n      this._popoverInstance.show();\n    }\n  }, {\n    key: \"_hide\",\n    value: function _hide() {\n      this._$popoverTargetElement.hide();\n\n      this._popoverInstance.hide();\n    }\n  }]);\n\n  return DiagramContextToolbox;\n}(Widget);\n\nexport default DiagramContextToolbox;","map":null,"metadata":{},"sourceType":"module"}