{"ast":null,"code":"var NUMBER_STYLES = ['animation-iteration-count', 'border-image-outset', 'border-image-slice', 'border-image-width', 'box-flex', 'box-flex-group', 'box-ordinal-group', 'column-count', 'fill-opacity', 'flex', 'flex-grow', 'flex-negative', 'flex-order', 'flex-positive', 'flex-shrink', 'flood-opacity', 'font-weight', 'grid-column', 'grid-row', 'line-clamp', 'line-height', 'opacity', 'order', 'orphans', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'tab-size', 'widows', 'z-index', 'zoom'];\nvar uppercasePattern = /[A-Z]/g;\n\nvar kebabCase = function kebabCase(str) {\n  return str.replace(uppercasePattern, '-$&').toLowerCase();\n};\n\nvar isNumeric = function isNumeric(value) {\n  if (typeof value === 'number') return true;\n  return !isNaN(Number(value));\n};\n\nvar getNumberStyleValue = function getNumberStyleValue(style, value) {\n  return NUMBER_STYLES.indexOf(style) > -1 ? value : \"\".concat(value, \"px\");\n};\n\nexport var normalizeStyles = function normalizeStyles(styles) {\n  if (!(styles instanceof Object)) return undefined;\n  return Object.keys(styles).reduce(function (result, key) {\n    var value = styles[key];\n    var kebabString = kebabCase(key);\n    result[kebabString] = isNumeric(value) ? getNumberStyleValue(kebabString, value) : value;\n    return result;\n  }, {});\n};","map":null,"metadata":{},"sourceType":"module"}