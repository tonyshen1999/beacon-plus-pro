{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/time_panel/cell.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"allDay\", \"ariaLabel\", \"children\", \"className\", \"contentTemplate\", \"contentTemplateProps\", \"endDate\", \"groupIndex\", \"groups\", \"index\", \"isFirstGroupCell\", \"isLastGroupCell\", \"startDate\", \"text\", \"timeCellTemplate\"];\nimport { createVNode, createComponentVNode, normalizeProps } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { CellBase as Cell, CellBaseProps } from \"../cell\";\nexport var viewFunction = function viewFunction(viewModel) {\n  return createComponentVNode(2, Cell, {\n    isFirstGroupCell: viewModel.props.isFirstGroupCell,\n    isLastGroupCell: viewModel.props.isLastGroupCell,\n    contentTemplate: viewModel.props.timeCellTemplate,\n    contentTemplateProps: viewModel.timeCellTemplateProps,\n    className: \"dx-scheduler-time-panel-cell dx-scheduler-cell-sizes-vertical \".concat(viewModel.props.className),\n    children: createVNode(1, \"div\", null, viewModel.props.text, 0)\n  });\n};\nexport var TimePanelCellProps = CellBaseProps;\n\nvar getTemplate = function getTemplate(TemplateProp) {\n  return TemplateProp && (TemplateProp.defaultProps ? function (props) {\n    return normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props)));\n  } : TemplateProp);\n};\n\nexport var TimePanelCell = /*#__PURE__*/(function () {\n  var TimePanelCell = /*#__PURE__*/function (_BaseInfernoComponent) {\n    _inherits(TimePanelCell, _BaseInfernoComponent);\n\n    var _super = _createSuper(TimePanelCell);\n\n    function TimePanelCell(props) {\n      var _this;\n\n      _classCallCheck(this, TimePanelCell);\n\n      _this = _super.call(this, props);\n      _this.state = {};\n      _this.__getterCache = {};\n      return _this;\n    }\n\n    _createClass(TimePanelCell, [{\n      key: \"timeCellTemplateProps\",\n      get: function get() {\n        var _this2 = this;\n\n        if (void 0 !== this.__getterCache.timeCellTemplateProps) {\n          return this.__getterCache.timeCellTemplateProps;\n        }\n\n        return this.__getterCache.timeCellTemplateProps = function () {\n          var _this2$props = _this2.props,\n              groupIndex = _this2$props.groupIndex,\n              groups = _this2$props.groups,\n              index = _this2$props.index,\n              startDate = _this2$props.startDate,\n              text = _this2$props.text;\n          return {\n            data: {\n              date: startDate,\n              groups: groups,\n              groupIndex: groupIndex,\n              text: text\n            },\n            index: index\n          };\n        }();\n      }\n    }, {\n      key: \"restAttributes\",\n      get: function get() {\n        var _this$props = this.props,\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n        return restProps;\n      }\n    }, {\n      key: \"componentWillUpdate\",\n      value: function componentWillUpdate(nextProps, nextState, context) {\n        if (this.props.groupIndex !== nextProps.groupIndex || this.props.groups !== nextProps.groups || this.props.index !== nextProps.index || this.props.startDate !== nextProps.startDate || this.props.text !== nextProps.text) {\n          this.__getterCache.timeCellTemplateProps = void 0;\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this.props;\n        return viewFunction({\n          props: _extends({}, props, {\n            timeCellTemplate: getTemplate(props.timeCellTemplate),\n            contentTemplate: getTemplate(props.contentTemplate)\n          }),\n          timeCellTemplateProps: this.timeCellTemplateProps,\n          restAttributes: this.restAttributes\n        });\n      }\n    }]);\n\n    return TimePanelCell;\n  }(BaseInfernoComponent);\n\n  TimePanelCell.defaultProps = TimePanelCellProps;\n  return TimePanelCell;\n})();","map":null,"metadata":{},"sourceType":"module"}