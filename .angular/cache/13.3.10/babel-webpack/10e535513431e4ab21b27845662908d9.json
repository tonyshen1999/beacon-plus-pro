{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var DashboardService = /*#__PURE__*/(function () {\n  var DashboardService = /*#__PURE__*/function () {\n    function DashboardService(http) {\n      _classCallCheck(this, DashboardService);\n\n      this.http = http;\n      this.baseurl = \"http://127.0.0.1:8000/\";\n      this.httpHeaders = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n    }\n\n    _createClass(DashboardService, [{\n      key: \"getVersionLog\",\n      value: function getVersionLog() {\n        var queryParams = {\n          \"scn_id\": sessionStorage.getItem(\"scnID\")\n        };\n        return this.http.get(this.baseurl + 'scn/', {\n          params: queryParams\n        });\n      } // Right now, create period only creates for one single period\n\n    }, {\n      key: \"createPeriod\",\n      value: function createPeriod(f) {\n        console.log(f);\n\n        if (f.period_start == f.period_end) {\n          console.log(f);\n          var period = {\n            period: f.period_start,\n            begin_date: new Date(f.begin_date),\n            end_date: new Date(f.end_date),\n            scn_id: sessionStorage.getItem(\"scnID\"),\n            scn_version: sessionStorage.getItem(\"scnVersion\")\n          };\n          return this.http.post(this.baseurl + 'pd/', period, {\n            headers: this.httpHeaders\n          });\n        }\n      }\n    }, {\n      key: \"newVersion\",\n      value: function newVersion() {\n        var queryParams = {\n          \"scn_id\": sessionStorage.getItem(\"scnID\")\n        };\n        return this.http.post(this.baseurl + 'scn/version/', queryParams, {\n          headers: this.httpHeaders\n        });\n      }\n    }]);\n\n    return DashboardService;\n  }();\n\n  DashboardService.ɵfac = function DashboardService_Factory(t) {\n    return new (t || DashboardService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  DashboardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DashboardService,\n    factory: DashboardService.ɵfac,\n    providedIn: 'root'\n  });\n  return DashboardService;\n})();","map":null,"metadata":{},"sourceType":"module"}