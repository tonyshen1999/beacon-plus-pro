{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport Chart from \"chart.js\";\nimport * as i0 from \"@angular/core\";\nexport var ChartsComponent = /*#__PURE__*/(function () {\n  var ChartsComponent = /*#__PURE__*/function () {\n    function ChartsComponent() {\n      _classCallCheck(this, ChartsComponent);\n    }\n\n    _createClass(ChartsComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var gradientChartOptionsConfigurationPurple = {\n          maintainAspectRatio: false,\n          legend: {\n            display: false\n          },\n          tooltips: {\n            backgroundColor: \"#f5f5f5\",\n            titleFontColor: \"#333\",\n            bodyFontColor: \"#666\",\n            bodySpacing: 4,\n            xPadding: 12,\n            mode: \"nearest\",\n            intersect: 0,\n            position: \"nearest\"\n          },\n          responsive: true,\n          scales: {\n            yAxes: [{\n              barPercentage: 1.6,\n              gridLines: {\n                drawBorder: false,\n                color: \"rgba(186,84,245,0.1)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                suggestedMin: 60,\n                suggestedMax: 125,\n                padding: 20,\n                fontColor: \"#9e9e9e\"\n              }\n            }],\n            xAxes: [{\n              barPercentage: 1.6,\n              gridLines: {\n                drawBorder: false,\n                color: \"rgba(186,84,245,0.1)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                padding: 20,\n                fontColor: \"#9e9e9e\"\n              }\n            }]\n          }\n        };\n        var gradientChartOptionsConfigurationBlue = {\n          maintainAspectRatio: false,\n          legend: {\n            display: false\n          },\n          tooltips: {\n            backgroundColor: \"#f5f5f5\",\n            titleFontColor: \"#333\",\n            bodyFontColor: \"#666\",\n            bodySpacing: 4,\n            xPadding: 12,\n            mode: \"nearest\",\n            intersect: 0,\n            position: \"nearest\"\n          },\n          responsive: true,\n          scales: {\n            yAxes: [{\n              barPercentage: 1.6,\n              gridLines: {\n                drawBorder: false,\n                color: \"rgba(29,140,248,0.0)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                suggestedMin: 60,\n                suggestedMax: 125,\n                padding: 20,\n                fontColor: \"#9e9e9e\"\n              }\n            }],\n            xAxes: [{\n              barPercentage: 1.6,\n              gridLines: {\n                drawBorder: false,\n                color: \"rgba(29,140,248,0.1)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                padding: 20,\n                fontColor: \"#9e9e9e\"\n              }\n            }]\n          }\n        };\n        var gradientBarChartConfiguration = {\n          maintainAspectRatio: false,\n          legend: {\n            display: false\n          },\n          tooltips: {\n            backgroundColor: \"#f5f5f5\",\n            titleFontColor: \"#333\",\n            bodyFontColor: \"#666\",\n            bodySpacing: 4,\n            xPadding: 12,\n            mode: \"nearest\",\n            intersect: 0,\n            position: \"nearest\"\n          },\n          responsive: true,\n          scales: {\n            yAxes: [{\n              gridLines: {\n                drawBorder: false,\n                color: \"rgba(253,93,147,0.1)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                suggestedMin: 60,\n                suggestedMax: 125,\n                padding: 20,\n                fontColor: \"#9e9e9e\"\n              }\n            }],\n            xAxes: [{\n              gridLines: {\n                drawBorder: false,\n                color: \"rgba(253,93,147,0.1)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                padding: 20,\n                fontColor: \"#9e9e9e\"\n              }\n            }]\n          }\n        };\n        var gradientBarChartConfigurationWithGrid = {\n          maintainAspectRatio: false,\n          legend: {\n            display: false\n          },\n          tooltips: {\n            backgroundColor: \"#f5f5f5\",\n            titleFontColor: \"#333\",\n            bodyFontColor: \"#666\",\n            bodySpacing: 4,\n            xPadding: 12,\n            mode: \"nearest\",\n            intersect: 0,\n            position: \"nearest\"\n          },\n          responsive: true,\n          scales: {\n            yAxes: [{\n              gridLines: {\n                drawBorder: false,\n                color: \"rgba(253,93,147,0.1)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                suggestedMin: 60,\n                suggestedMax: 125,\n                padding: 20,\n                fontColor: \"#9e9e9e\"\n              }\n            }],\n            xAxes: [{\n              gridLines: {\n                drawBorder: false,\n                color: \"rgba(253,93,147,0.1)\",\n                zeroLineColor: \"transparent\"\n              },\n              ticks: {\n                padding: 20,\n                fontColor: \"#9e9e9e\"\n              }\n            }]\n          }\n        };\n        this.canvas = document.getElementById(\"chartSimpleWithGradient\");\n        this.ctx = this.canvas.getContext(\"2d\");\n        var gradientStroke = this.ctx.createLinearGradient(0, 230, 0, 50);\n        gradientStroke.addColorStop(1, \"rgba(72,72,176,0.4)\");\n        gradientStroke.addColorStop(0.8, \"rgba(72,72,176,0.2)\");\n        gradientStroke.addColorStop(0, \"rgba(119,52,169,0)\"); //purple colors\n\n        var myChart = new Chart(this.ctx, {\n          type: \"line\",\n          responsive: true,\n          data: {\n            labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n            datasets: [{\n              label: \"Data\",\n              fill: true,\n              backgroundColor: gradientStroke,\n              borderColor: \"#ba54f5\",\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: \"#be55ed\",\n              pointBorderColor: \"rgba(255,255,255,0)\",\n              pointHoverBackgroundColor: \"#be55ed\",\n              //pointHoverBorderColor:'rgba(35,46,55,1)',\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data: [80, 100, 70, 80, 120, 80]\n            }]\n          },\n          options: gradientChartOptionsConfigurationPurple\n        });\n        this.canvas = document.getElementById(\"chartWithNumbersAndGrid\");\n        this.ctx = this.canvas.getContext(\"2d\");\n        var gradientStroke = this.ctx.createLinearGradient(0, 230, 0, 50);\n        gradientStroke.addColorStop(1, \"rgba(0,135,191,0.2)\");\n        gradientStroke.addColorStop(0.8, \"rgba(0,135,191,0.1)\");\n        gradientStroke.addColorStop(0, \"rgba(0,84,119,0)\"); //blue colors\n\n        var myChart = new Chart(this.ctx, {\n          type: \"line\",\n          responsive: true,\n          data: {\n            labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n            datasets: [{\n              label: \"Data\",\n              fill: true,\n              backgroundColor: gradientStroke,\n              borderColor: \"#2380f7\",\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              pointBackgroundColor: \"#2380f7\",\n              pointBorderColor: \"rgba(255,255,255,0)\",\n              pointHoverBackgroundColor: \"#2380f7\",\n              pointBorderWidth: 20,\n              pointHoverRadius: 4,\n              pointHoverBorderWidth: 15,\n              pointRadius: 4,\n              data: [80, 100, 70, 80, 120, 80]\n            }]\n          },\n          options: gradientChartOptionsConfigurationBlue\n        });\n        this.canvas = document.getElementById(\"BarChart\");\n        this.ctx = this.canvas.getContext(\"2d\");\n        var gradientStroke = this.ctx.createLinearGradient(0, 230, 0, 50);\n        gradientStroke.addColorStop(1, \"rgba(253,93,147,0.8)\");\n        gradientStroke.addColorStop(0, \"rgba(253,93,147,0)\"); //blue colors\n\n        var myChart = new Chart(this.ctx, {\n          type: \"bar\",\n          responsive: true,\n          data: {\n            labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n            datasets: [{\n              label: \"Data\",\n              fill: true,\n              backgroundColor: gradientStroke,\n              hoverBackgroundColor: gradientStroke,\n              borderColor: \"#ff5991\",\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              data: [80, 100, 70, 80, 120, 80]\n            }]\n          },\n          options: gradientBarChartConfigurationWithGrid\n        });\n        this.canvas = document.getElementById(\"MultipleBarsChart\");\n        this.ctx = this.canvas.getContext(\"2d\");\n        var myChart = new Chart(this.ctx, {\n          type: \"bar\",\n          responsive: true,\n          data: {\n            labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n            datasets: [{\n              label: \"Data\",\n              fill: true,\n              backgroundColor: \"#ff8a76\",\n              hoverBackgroundColor: \" #ff8a76\",\n              borderColor: \"#ff8a76\",\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              data: [80, 100, 70, 80, 120, 80]\n            }, {\n              label: \"Data\",\n              fill: true,\n              backgroundColor: \"#2782f0\",\n              hoverBackgroundColor: \" #2782f0\",\n              borderColor: \"#2782f0\",\n              borderWidth: 2,\n              borderDash: [],\n              borderDashOffset: 0.0,\n              data: [60, 110, 90, 70, 90, 100]\n            }]\n          },\n          options: gradientBarChartConfiguration\n        });\n        this.canvas = document.getElementById(\"PieChart\");\n        this.ctx = this.canvas.getContext(\"2d\");\n        var myChart = new Chart(this.ctx, {\n          type: \"pie\",\n          data: {\n            labels: [1, 2],\n            datasets: [{\n              label: \"Emails\",\n              pointRadius: 0,\n              pointHoverRadius: 0,\n              backgroundColor: [\"#00c09d\", \"#e2e2e2\"],\n              borderWidth: 0,\n              data: [60, 40]\n            }]\n          },\n          options: {\n            cutoutPercentage: 70,\n            legend: {\n              display: false\n            },\n            tooltips: {\n              backgroundColor: \"#f5f5f5\",\n              titleFontColor: \"#333\",\n              bodyFontColor: \"#666\",\n              bodySpacing: 4,\n              xPadding: 12,\n              mode: \"nearest\",\n              intersect: 0,\n              position: \"nearest\"\n            },\n            scales: {\n              yAxes: [{\n                display: 0,\n                ticks: {\n                  display: false\n                },\n                gridLines: {\n                  drawBorder: false,\n                  zeroLineColor: \"transparent\",\n                  color: \"rgba(255,255,255,0.05)\"\n                }\n              }],\n              xAxes: [{\n                display: 0,\n                barPercentage: 1.6,\n                gridLines: {\n                  drawBorder: false,\n                  color: \"rgba(255,255,255,0.1)\",\n                  zeroLineColor: \"transparent\"\n                },\n                ticks: {\n                  display: false\n                }\n              }]\n            }\n          }\n        });\n        this.canvas = document.getElementById(\"PieChartGradient\");\n        this.ctx = this.canvas.getContext(\"2d\");\n        var myChart = new Chart(this.ctx, {\n          type: \"pie\",\n          data: {\n            labels: [1, 2, 3],\n            datasets: [{\n              label: \"Emails\",\n              pointRadius: 0,\n              pointHoverRadius: 0,\n              backgroundColor: [\"#ff8779\", \"#2a84e9\", \"#e2e2e2\"],\n              borderWidth: 0,\n              data: [60, 40, 20]\n            }]\n          },\n          options: {\n            cutoutPercentage: 70,\n            legend: {\n              display: false\n            },\n            tooltips: {\n              backgroundColor: \"#f5f5f5\",\n              titleFontColor: \"#333\",\n              bodyFontColor: \"#666\",\n              bodySpacing: 4,\n              xPadding: 12,\n              mode: \"nearest\",\n              intersect: 0,\n              position: \"nearest\"\n            },\n            scales: {\n              yAxes: [{\n                display: 0,\n                ticks: {\n                  display: false\n                },\n                gridLines: {\n                  drawBorder: false,\n                  zeroLineColor: \"transparent\",\n                  color: \"rgba(255,255,255,0.05)\"\n                }\n              }],\n              xAxes: [{\n                display: 0,\n                barPercentage: 1.6,\n                gridLines: {\n                  drawBorder: false,\n                  color: \"rgba(255,255,255,0.1)\",\n                  zeroLineColor: \"transparent\"\n                },\n                ticks: {\n                  display: false\n                }\n              }]\n            }\n          }\n        });\n      }\n    }]);\n\n    return ChartsComponent;\n  }();\n\n  ChartsComponent.ɵfac = function ChartsComponent_Factory(t) {\n    return new (t || ChartsComponent)();\n  };\n\n  ChartsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChartsComponent,\n    selectors: [[\"app-charts\"]],\n    decls: 90,\n    vars: 0,\n    consts: [[1, \"content\"], [1, \"text-center\"], [1, \"category\", \"text-center\"], [\"href\", \"http://www.chartjs.org\", \"target\", \"_blank\"], [\"href\", \"http://www.chartjs.org/docs/latest/\", \"target\", \"_blank\"], [1, \"row\", \"mt-5\"], [1, \"col-md-5\", \"ml-auto\"], [1, \"card\", \"card-chart\"], [1, \"card-header\"], [1, \"card-category\"], [1, \"card-title\"], [1, \"tim-icons\", \"icon-chart-bar-32\", \"text-primary\"], [1, \"card-body\"], [1, \"chart-area\"], [\"id\", \"chartSimpleWithGradient\"], [1, \"col-md-5\", \"mr-auto\"], [1, \"tim-icons\", \"icon-send\", \"text-info\"], [\"id\", \"chartWithNumbersAndGrid\"], [1, \"row\"], [1, \"tim-icons\", \"icon-shape-star\", \"text-danger\"], [\"id\", \"BarChart\"], [1, \"tim-icons\", \"icon-time-alarm\", \"text-warning\"], [\"id\", \"MultipleBarsChart\"], [1, \"card\", \"card-chart\", \"card-chart-pie\"], [1, \"col-6\"], [\"id\", \"PieChart\"], [1, \"tim-icons\", \"icon-trophy\", \"text-success\"], [1, \"category\"], [\"id\", \"PieChartGradient\"], [1, \"tim-icons\", \"icon-tag\", \"text-warning\"]],\n    template: function ChartsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2, \"Charts.js\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\", 2);\n        i0.ɵɵtext(4, \" Simple yet flexible JavaScript charting for designers & developers. Made by our friends from \");\n        i0.ɵɵelementStart(5, \"a\", 3);\n        i0.ɵɵtext(6, \" Charts.js \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(7, \" . Please check \");\n        i0.ɵɵelementStart(8, \"a\", 4);\n        i0.ɵɵtext(9, \" the full documentation \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(10, \" . \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 5)(12, \"div\", 6)(13, \"div\", 7)(14, \"div\", 8)(15, \"h5\", 9);\n        i0.ɵɵtext(16, \"Simple With Gradient\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"h3\", 10);\n        i0.ɵɵelement(18, \"i\", 11);\n        i0.ɵɵtext(19, \" 10,000 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 12)(21, \"div\", 13);\n        i0.ɵɵelement(22, \"canvas\", 14);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(23, \"div\", 15)(24, \"div\", 7)(25, \"div\", 8)(26, \"h5\", 9);\n        i0.ɵɵtext(27, \"With Numbers and Grid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"h3\", 10);\n        i0.ɵɵelement(29, \"i\", 16);\n        i0.ɵɵtext(30, \" 750,000\\u20AC \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"div\", 12)(32, \"div\", 13);\n        i0.ɵɵelement(33, \"canvas\", 17);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(34, \"div\", 18)(35, \"div\", 6)(36, \"div\", 7)(37, \"div\", 8)(38, \"h5\", 9);\n        i0.ɵɵtext(39, \"Gradient Bar Chart\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"h3\", 10);\n        i0.ɵɵelement(41, \"i\", 19);\n        i0.ɵɵtext(42, \" 1,000,000\\xA3 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(43, \"div\", 12)(44, \"div\", 13);\n        i0.ɵɵelement(45, \"canvas\", 20);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(46, \"div\", 15)(47, \"div\", 7)(48, \"div\", 8)(49, \"h5\", 9);\n        i0.ɵɵtext(50, \"Multiple Bars Chart With Grid\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"h3\", 10);\n        i0.ɵɵelement(52, \"i\", 21);\n        i0.ɵɵtext(53, \" 130,000$ \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(54, \"div\", 12)(55, \"div\", 13);\n        i0.ɵɵelement(56, \"canvas\", 22);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(57, \"div\", 18)(58, \"div\", 6)(59, \"div\", 23)(60, \"div\", 8)(61, \"h5\", 9);\n        i0.ɵɵtext(62, \"Simple Pie Chart\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(63, \"div\", 12)(64, \"div\", 18)(65, \"div\", 24)(66, \"div\", 13);\n        i0.ɵɵelement(67, \"canvas\", 25);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(68, \"div\", 24)(69, \"h4\", 10);\n        i0.ɵɵelement(70, \"i\", 26);\n        i0.ɵɵtext(71, \" 10.000$ \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(72, \"p\", 27);\n        i0.ɵɵtext(73, \"A total of $54000\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(74, \"div\", 15)(75, \"div\", 23)(76, \"div\", 8)(77, \"h5\", 9);\n        i0.ɵɵtext(78, \"Multiple Pie Chart\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(79, \"div\", 12)(80, \"div\", 18)(81, \"div\", 24)(82, \"div\", 13);\n        i0.ɵɵelement(83, \"canvas\", 28);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(84, \"div\", 24)(85, \"h4\", 10);\n        i0.ɵɵelement(86, \"i\", 29);\n        i0.ɵɵtext(87, \" 130,000 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(88, \"p\", 27);\n        i0.ɵɵtext(89, \"Feedback from 20.000 users\");\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n    },\n    encapsulation: 2\n  });\n  return ChartsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}