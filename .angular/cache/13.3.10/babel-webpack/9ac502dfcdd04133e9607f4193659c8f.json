{"ast":null,"code":"/**\r\n * DevExtreme (esm/animation/presets/presets.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getWidth } from \"../../core/utils/size\";\nimport { Component } from \"../../core/component\";\nimport { each } from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport devices from \"../../core/devices\";\nimport fx from \"../fx\";\nvar directionPostfixes = {\n  forward: \" dx-forward\",\n  backward: \" dx-backward\",\n  none: \" dx-no-direction\",\n  undefined: \" dx-no-direction\"\n};\nvar optionPrefix = \"preset_\";\nvar AnimationPresetCollection = Component.inherit({\n  ctor: function ctor() {\n    this.callBase.apply(this, arguments);\n    this._registeredPresets = [];\n    this.resetToDefaults();\n  },\n  _getDefaultOptions: function _getDefaultOptions() {\n    return extend(this.callBase(), {\n      defaultAnimationDuration: 400,\n      defaultAnimationDelay: 0,\n      defaultStaggerAnimationDuration: 300,\n      defaultStaggerAnimationDelay: 40,\n      defaultStaggerAnimationStartDelay: 500\n    });\n  },\n  _defaultOptionsRules: function _defaultOptionsRules() {\n    return this.callBase().concat([{\n      device: function device(_device) {\n        return _device.phone;\n      },\n      options: {\n        defaultStaggerAnimationDuration: 350,\n        defaultStaggerAnimationDelay: 50,\n        defaultStaggerAnimationStartDelay: 0\n      }\n    }, {\n      device: function device() {\n        return devices.current().android || devices.real.android;\n      },\n      options: {\n        defaultAnimationDelay: 100\n      }\n    }]);\n  },\n  _getPresetOptionName: function _getPresetOptionName(animationName) {\n    return optionPrefix + animationName;\n  },\n  _createAndroidSlideAnimationConfig: function _createAndroidSlideAnimationConfig(throughOpacity, widthMultiplier) {\n    var that = this;\n\n    var createBaseConfig = function createBaseConfig(configModifier) {\n      return {\n        type: \"slide\",\n        delay: void 0 === configModifier.delay ? that.option(\"defaultAnimationDelay\") : configModifier.delay,\n        duration: void 0 === configModifier.duration ? that.option(\"defaultAnimationDuration\") : configModifier.duration\n      };\n    };\n\n    return {\n      enter: function enter($element, configModifier) {\n        var width = getWidth($element.parent()) * widthMultiplier;\n        var direction = configModifier.direction;\n        var config = createBaseConfig(configModifier);\n        config.to = {\n          left: 0,\n          opacity: 1\n        };\n\n        if (\"forward\" === direction) {\n          config.from = {\n            left: width,\n            opacity: throughOpacity\n          };\n        } else if (\"backward\" === direction) {\n          config.from = {\n            left: -width,\n            opacity: throughOpacity\n          };\n        } else {\n          config.from = {\n            left: 0,\n            opacity: 0\n          };\n        }\n\n        return fx.createAnimation($element, config);\n      },\n      leave: function leave($element, configModifier) {\n        var width = getWidth($element.parent()) * widthMultiplier;\n        var direction = configModifier.direction;\n        var config = createBaseConfig(configModifier);\n        config.from = {\n          left: 0,\n          opacity: 1\n        };\n\n        if (\"forward\" === direction) {\n          config.to = {\n            left: -width,\n            opacity: throughOpacity\n          };\n        } else if (\"backward\" === direction) {\n          config.to = {\n            left: width,\n            opacity: throughOpacity\n          };\n        } else {\n          config.to = {\n            left: 0,\n            opacity: 0\n          };\n        }\n\n        return fx.createAnimation($element, config);\n      }\n    };\n  },\n  _createOpenDoorConfig: function _createOpenDoorConfig() {\n    var that = this;\n\n    var createBaseConfig = function createBaseConfig(configModifier) {\n      return {\n        type: \"css\",\n        extraCssClasses: \"dx-opendoor-animation\",\n        delay: void 0 === configModifier.delay ? that.option(\"defaultAnimationDelay\") : configModifier.delay,\n        duration: void 0 === configModifier.duration ? that.option(\"defaultAnimationDuration\") : configModifier.duration\n      };\n    };\n\n    return {\n      enter: function enter($element, configModifier) {\n        var direction = configModifier.direction;\n        var config = createBaseConfig(configModifier);\n        config.delay = \"none\" === direction ? config.delay : config.duration;\n        config.from = \"dx-enter dx-opendoor-animation\" + directionPostfixes[direction];\n        config.to = \"dx-enter-active\";\n        return fx.createAnimation($element, config);\n      },\n      leave: function leave($element, configModifier) {\n        var direction = configModifier.direction;\n        var config = createBaseConfig(configModifier);\n        config.from = \"dx-leave dx-opendoor-animation\" + directionPostfixes[direction];\n        config.to = \"dx-leave-active\";\n        return fx.createAnimation($element, config);\n      }\n    };\n  },\n  _createWinPopConfig: function _createWinPopConfig() {\n    var that = this;\n    var baseConfig = {\n      type: \"css\",\n      extraCssClasses: \"dx-win-pop-animation\",\n      duration: that.option(\"defaultAnimationDuration\")\n    };\n    return {\n      enter: function enter($element, configModifier) {\n        var config = baseConfig;\n        var direction = configModifier.direction;\n        config.delay = \"none\" === direction ? that.option(\"defaultAnimationDelay\") : that.option(\"defaultAnimationDuration\") / 2;\n        config.from = \"dx-enter dx-win-pop-animation\" + directionPostfixes[direction];\n        config.to = \"dx-enter-active\";\n        return fx.createAnimation($element, config);\n      },\n      leave: function leave($element, configModifier) {\n        var config = baseConfig;\n        var direction = configModifier.direction;\n        config.delay = that.option(\"defaultAnimationDelay\");\n        config.from = \"dx-leave dx-win-pop-animation\" + directionPostfixes[direction];\n        config.to = \"dx-leave-active\";\n        return fx.createAnimation($element, config);\n      }\n    };\n  },\n  resetToDefaults: function resetToDefaults() {\n    this.clear();\n    this.registerDefaultPresets();\n    this.applyChanges();\n  },\n  clear: function clear(name) {\n    var that = this;\n    var newRegisteredPresets = [];\n    each(this._registeredPresets, function (index, preset) {\n      if (!name || name === preset.name) {\n        that.option(that._getPresetOptionName(preset.name), void 0);\n      } else {\n        newRegisteredPresets.push(preset);\n      }\n    });\n    this._registeredPresets = newRegisteredPresets;\n    this.applyChanges();\n  },\n  registerPreset: function registerPreset(name, config) {\n    this._registeredPresets.push({\n      name: name,\n      config: config\n    });\n  },\n  applyChanges: function applyChanges() {\n    var that = this;\n    var customRules = [];\n    each(this._registeredPresets, function (index, preset) {\n      var rule = {\n        device: preset.config.device,\n        options: {}\n      };\n      rule.options[that._getPresetOptionName(preset.name)] = preset.config.animation;\n      customRules.push(rule);\n    });\n\n    this._setOptionsByDevice(customRules);\n  },\n  getPreset: function getPreset(name) {\n    var result = name;\n\n    while (\"string\" === typeof result) {\n      result = this.option(this._getPresetOptionName(result));\n    }\n\n    return result;\n  },\n  registerDefaultPresets: function registerDefaultPresets() {\n    this.registerPreset(\"pop\", {\n      animation: {\n        extraCssClasses: \"dx-android-pop-animation\",\n        delay: this.option(\"defaultAnimationDelay\"),\n        duration: this.option(\"defaultAnimationDuration\")\n      }\n    });\n    this.registerPreset(\"openDoor\", {\n      animation: this._createOpenDoorConfig()\n    });\n    this.registerPreset(\"win-pop\", {\n      animation: this._createWinPopConfig()\n    });\n    this.registerPreset(\"fade\", {\n      animation: {\n        extraCssClasses: \"dx-fade-animation\",\n        delay: this.option(\"defaultAnimationDelay\"),\n        duration: this.option(\"defaultAnimationDuration\")\n      }\n    });\n    this.registerPreset(\"slide\", {\n      device: function device() {\n        return devices.current().android || devices.real.android;\n      },\n      animation: this._createAndroidSlideAnimationConfig(1, 1)\n    });\n    this.registerPreset(\"slide\", {\n      device: function device() {\n        return !devices.current().android && !devices.real.android;\n      },\n      animation: {\n        extraCssClasses: \"dx-slide-animation\",\n        delay: this.option(\"defaultAnimationDelay\"),\n        duration: this.option(\"defaultAnimationDuration\")\n      }\n    });\n    this.registerPreset(\"ios7-slide\", {\n      animation: {\n        extraCssClasses: \"dx-ios7-slide-animation\",\n        delay: this.option(\"defaultAnimationDelay\"),\n        duration: this.option(\"defaultAnimationDuration\")\n      }\n    });\n    this.registerPreset(\"overflow\", {\n      animation: {\n        extraCssClasses: \"dx-overflow-animation\",\n        delay: this.option(\"defaultAnimationDelay\"),\n        duration: this.option(\"defaultAnimationDuration\")\n      }\n    });\n    this.registerPreset(\"ios7-toolbar\", {\n      device: function device() {\n        return !devices.current().android && !devices.real.android;\n      },\n      animation: {\n        extraCssClasses: \"dx-ios7-toolbar-animation\",\n        delay: this.option(\"defaultAnimationDelay\"),\n        duration: this.option(\"defaultAnimationDuration\")\n      }\n    });\n    this.registerPreset(\"ios7-toolbar\", {\n      device: function device() {\n        return devices.current().android || devices.real.android;\n      },\n      animation: this._createAndroidSlideAnimationConfig(0, .4)\n    });\n    this.registerPreset(\"stagger-fade\", {\n      animation: {\n        extraCssClasses: \"dx-fade-animation\",\n        staggerDelay: this.option(\"defaultStaggerAnimationDelay\"),\n        duration: this.option(\"defaultStaggerAnimationDuration\"),\n        delay: this.option(\"defaultStaggerAnimationStartDelay\")\n      }\n    });\n    this.registerPreset(\"stagger-slide\", {\n      animation: {\n        extraCssClasses: \"dx-slide-animation\",\n        staggerDelay: this.option(\"defaultStaggerAnimationDelay\"),\n        duration: this.option(\"defaultStaggerAnimationDuration\"),\n        delay: this.option(\"defaultStaggerAnimationStartDelay\")\n      }\n    });\n    this.registerPreset(\"stagger-fade-slide\", {\n      animation: {\n        extraCssClasses: \"dx-fade-slide-animation\",\n        staggerDelay: this.option(\"defaultStaggerAnimationDelay\"),\n        duration: this.option(\"defaultStaggerAnimationDuration\"),\n        delay: this.option(\"defaultStaggerAnimationStartDelay\")\n      }\n    });\n    this.registerPreset(\"stagger-drop\", {\n      animation: {\n        extraCssClasses: \"dx-drop-animation\",\n        staggerDelay: this.option(\"defaultStaggerAnimationDelay\"),\n        duration: this.option(\"defaultStaggerAnimationDuration\"),\n        delay: this.option(\"defaultStaggerAnimationStartDelay\")\n      }\n    });\n    this.registerPreset(\"stagger-fade-drop\", {\n      animation: {\n        extraCssClasses: \"dx-fade-drop-animation\",\n        staggerDelay: this.option(\"defaultStaggerAnimationDelay\"),\n        duration: this.option(\"defaultStaggerAnimationDuration\"),\n        delay: this.option(\"defaultStaggerAnimationStartDelay\")\n      }\n    });\n    this.registerPreset(\"stagger-fade-rise\", {\n      animation: {\n        extraCssClasses: \"dx-fade-rise-animation\",\n        staggerDelay: this.option(\"defaultStaggerAnimationDelay\"),\n        duration: this.option(\"defaultStaggerAnimationDuration\"),\n        delay: this.option(\"defaultStaggerAnimationStartDelay\")\n      }\n    });\n    this.registerPreset(\"stagger-3d-drop\", {\n      animation: {\n        extraCssClasses: \"dx-3d-drop-animation\",\n        staggerDelay: this.option(\"defaultStaggerAnimationDelay\"),\n        duration: this.option(\"defaultStaggerAnimationDuration\"),\n        delay: this.option(\"defaultStaggerAnimationStartDelay\")\n      }\n    });\n    this.registerPreset(\"stagger-fade-zoom\", {\n      animation: {\n        extraCssClasses: \"dx-fade-zoom-animation\",\n        staggerDelay: this.option(\"defaultStaggerAnimationDelay\"),\n        duration: this.option(\"defaultStaggerAnimationDuration\"),\n        delay: this.option(\"defaultStaggerAnimationStartDelay\")\n      }\n    });\n  }\n});\nvar animationPresets = new AnimationPresetCollection();\nexport { animationPresets as presets, AnimationPresetCollection as PresetCollection };","map":null,"metadata":{},"sourceType":"module"}