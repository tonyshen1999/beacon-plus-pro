{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/ui/text_box/texteditor_button_collection/custom.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../../core/renderer\";\nimport TextEditorButton from \"./button\";\nimport Button from \"../../button\";\nimport { extend } from \"../../../core/utils/extend\";\nimport eventsEngine from \"../../../events/core/events_engine\";\nimport { start, end } from \"../../../events/hover\";\nimport { name as clickEventName } from \"../../../events/click\";\nvar CUSTOM_BUTTON_HOVERED_CLASS = \"dx-custom-button-hovered\";\n\nvar CustomButton = /*#__PURE__*/function (_TextEditorButton) {\n  _inherits(CustomButton, _TextEditorButton);\n\n  var _super = _createSuper(CustomButton);\n\n  function CustomButton() {\n    _classCallCheck(this, CustomButton);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CustomButton, [{\n    key: \"_attachEvents\",\n    value: function _attachEvents(instance, $element) {\n      var editor = this.editor;\n      eventsEngine.on($element, start, function () {\n        editor.$element().addClass(CUSTOM_BUTTON_HOVERED_CLASS);\n      });\n      eventsEngine.on($element, end, function () {\n        editor.$element().removeClass(CUSTOM_BUTTON_HOVERED_CLASS);\n      });\n      eventsEngine.on($element, clickEventName, function (e) {\n        e.stopPropagation();\n      });\n    }\n  }, {\n    key: \"_create\",\n    value: function _create() {\n      var editor = this.editor;\n      var $element = $(\"<div>\");\n\n      this._addToContainer($element);\n\n      var instance = editor._createComponent($element, Button, extend({}, this.options, {\n        ignoreParentReadOnly: true,\n        disabled: this._isDisabled(),\n        integrationOptions: this._prepareIntegrationOptions(editor)\n      }));\n\n      return {\n        $element: $element,\n        instance: instance\n      };\n    }\n  }, {\n    key: \"_prepareIntegrationOptions\",\n    value: function _prepareIntegrationOptions(editor) {\n      return extend({}, editor.option(\"integrationOptions\"), {\n        skipTemplates: [\"content\"]\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var isUpdated = _get(_getPrototypeOf(CustomButton.prototype), \"update\", this).call(this);\n\n      if (this.instance) {\n        this.instance.option(\"disabled\", this._isDisabled());\n      }\n\n      return isUpdated;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var editor = this.editor;\n      return editor.option(\"visible\");\n    }\n  }, {\n    key: \"_isDisabled\",\n    value: function _isDisabled() {\n      var isDefinedByUser = void 0 !== this.options.disabled;\n\n      if (isDefinedByUser) {\n        return this.instance ? this.instance.option(\"disabled\") : this.options.disabled;\n      } else {\n        return this.editor.option(\"readOnly\");\n      }\n    }\n  }]);\n\n  return CustomButton;\n}(TextEditorButton);\n\nexport { CustomButton as default };","map":null,"metadata":{},"sourceType":"module"}