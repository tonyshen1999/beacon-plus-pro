{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/renovation/component_wrapper/button.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport ValidationEngine from \"../../ui/validation_engine\";\nimport Component from \"./common/component\";\nimport { getImageSourceType } from \"../../core/utils/icon\";\n\nvar ButtonWrapper = /*#__PURE__*/function (_Component) {\n  _inherits(ButtonWrapper, _Component);\n\n  var _super = _createSuper(ButtonWrapper);\n\n  function ButtonWrapper() {\n    _classCallCheck(this, ButtonWrapper);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ButtonWrapper, [{\n    key: \"_validationGroupConfig\",\n    get: function get() {\n      return ValidationEngine.getGroupConfig(this._findGroup());\n    }\n  }, {\n    key: \"getDefaultTemplateNames\",\n    value: function getDefaultTemplateNames() {\n      return [\"content\"];\n    }\n  }, {\n    key: \"getSupportedKeyNames\",\n    value: function getSupportedKeyNames() {\n      return [\"space\", \"enter\"];\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps() {\n      var _this = this;\n\n      var props = _get(_getPrototypeOf(ButtonWrapper.prototype), \"getProps\", this).call(this);\n\n      props.onClick = function (_ref) {\n        var event = _ref.event;\n\n        _this._clickAction({\n          event: event,\n          validationGroup: _this._validationGroupConfig\n        });\n      };\n\n      var iconType = getImageSourceType(props.icon);\n\n      if (\"svg\" === iconType) {\n        props.iconTemplate = this._createTemplateComponent(function () {\n          return props.icon;\n        });\n      }\n\n      return props;\n    }\n  }, {\n    key: \"_templatesInfo\",\n    get: function get() {\n      return {\n        template: \"content\"\n      };\n    }\n  }, {\n    key: \"_toggleActiveState\",\n    value: function _toggleActiveState(_, value) {\n      var button = this.viewRef;\n      value ? button.activate() : button.deactivate();\n    }\n  }, {\n    key: \"_getSubmitAction\",\n    value: function _getSubmitAction() {\n      var _this2 = this;\n\n      var needValidate = true;\n      var validationStatus = \"valid\";\n      return this._createAction(function (_ref2) {\n        var event = _ref2.event,\n            submitInput = _ref2.submitInput;\n\n        if (needValidate) {\n          var validationGroup = _this2._validationGroupConfig;\n\n          if (void 0 !== validationGroup && \"\" !== validationGroup) {\n            var validationResult = validationGroup.validate();\n            validationStatus = validationResult.status;\n\n            if (\"pending\" === validationResult.status) {\n              needValidate = false;\n\n              _this2.option(\"disabled\", true);\n\n              validationResult.complete.then(function (_ref3) {\n                var status = _ref3.status;\n\n                _this2.option(\"disabled\", false);\n\n                validationStatus = status;\n                \"valid\" === validationStatus && submitInput.click();\n                needValidate = true;\n              });\n            }\n          }\n        }\n\n        \"valid\" !== validationStatus && event.preventDefault();\n        event.stopPropagation();\n      });\n    }\n  }, {\n    key: \"_initializeComponent\",\n    value: function _initializeComponent() {\n      _get(_getPrototypeOf(ButtonWrapper.prototype), \"_initializeComponent\", this).call(this);\n\n      this._addAction(\"onSubmit\", this._getSubmitAction());\n\n      this._clickAction = this._createClickAction();\n    }\n  }, {\n    key: \"_initMarkup\",\n    value: function _initMarkup() {\n      _get(_getPrototypeOf(ButtonWrapper.prototype), \"_initMarkup\", this).call(this);\n\n      var $content = this.$element().find(\".dx-button-content\");\n      var $template = $content.children().filter(\".dx-template-wrapper\");\n      var $input = $content.children().filter(\".dx-button-submit-input\");\n\n      if ($template.length) {\n        $template.addClass(\"dx-button-content\");\n        $template.append($input);\n        $content.replaceWith($template);\n      }\n    }\n  }, {\n    key: \"_patchOptionValues\",\n    value: function _patchOptionValues(options) {\n      return _get(_getPrototypeOf(ButtonWrapper.prototype), \"_patchOptionValues\", this).call(this, _extends({}, options, {\n        templateData: options._templateData\n      }));\n    }\n  }, {\n    key: \"_findGroup\",\n    value: function _findGroup() {\n      var $element = this.$element();\n      var validationGroup = this.option(\"validationGroup\");\n      return void 0 !== validationGroup && \"\" !== validationGroup ? validationGroup : ValidationEngine.findGroup($element, this._modelByElement($element));\n    }\n  }, {\n    key: \"_createClickAction\",\n    value: function _createClickAction() {\n      return this._createActionByOption(\"onClick\", {\n        excludeValidators: [\"readOnly\"]\n      });\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function _optionChanged(option) {\n      switch (option.name) {\n        case \"onClick\":\n          this._clickAction = this._createClickAction();\n      }\n\n      _get(_getPrototypeOf(ButtonWrapper.prototype), \"_optionChanged\", this).call(this, option);\n    }\n  }]);\n\n  return ButtonWrapper;\n}(Component);\n\nexport { ButtonWrapper as default };","map":null,"metadata":{},"sourceType":"module"}