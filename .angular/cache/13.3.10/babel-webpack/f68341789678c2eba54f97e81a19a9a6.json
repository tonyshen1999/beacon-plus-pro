{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.file_actions_button.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport Widget from \"../widget/ui.widget\";\nimport Button from \"../button\";\nvar FILE_MANAGER_FILE_ACTIONS_BUTTON = \"dx-filemanager-file-actions-button\";\nvar FILE_MANAGER_FILE_ACTIONS_BUTTON_ACTIVATED = \"dx-filemanager-file-actions-button-activated\";\nvar ACTIVE_STATE_CLASS = \"dx-state-active\";\n\nvar FileManagerFileActionsButton = /*#__PURE__*/function (_Widget) {\n  _inherits(FileManagerFileActionsButton, _Widget);\n\n  var _super = _createSuper(FileManagerFileActionsButton);\n\n  function FileManagerFileActionsButton() {\n    _classCallCheck(this, FileManagerFileActionsButton);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FileManagerFileActionsButton, [{\n    key: \"_initMarkup\",\n    value: function _initMarkup() {\n      var _this = this;\n\n      this._createClickAction();\n\n      var $button = $(\"<div>\");\n      this.$element().append($button).addClass(FILE_MANAGER_FILE_ACTIONS_BUTTON);\n      this._button = this._createComponent($button, Button, {\n        icon: \"overflow\",\n        stylingMode: \"text\",\n        onClick: function onClick(e) {\n          return _this._raiseClick(e);\n        }\n      });\n\n      _get(_getPrototypeOf(FileManagerFileActionsButton.prototype), \"_initMarkup\", this).call(this);\n    }\n  }, {\n    key: \"_createClickAction\",\n    value: function _createClickAction() {\n      this._clickAction = this._createActionByOption(\"onClick\");\n    }\n  }, {\n    key: \"_raiseClick\",\n    value: function _raiseClick(e) {\n      this._clickAction(e);\n    }\n  }, {\n    key: \"_getDefaultOptions\",\n    value: function _getDefaultOptions() {\n      return extend(_get(_getPrototypeOf(FileManagerFileActionsButton.prototype), \"_getDefaultOptions\", this).call(this), {\n        cssClass: \"\",\n        onClick: null\n      });\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function _optionChanged(args) {\n      var name = args.name;\n\n      switch (name) {\n        case \"cssClass\":\n          this.repaint();\n          break;\n\n        case \"onClick\":\n          this._createClickAction();\n\n          break;\n\n        default:\n          _get(_getPrototypeOf(FileManagerFileActionsButton.prototype), \"_optionChanged\", this).call(this, args);\n\n      }\n    }\n  }, {\n    key: \"setActive\",\n    value: function setActive(active) {\n      var _this2 = this;\n\n      this.$element().toggleClass(FILE_MANAGER_FILE_ACTIONS_BUTTON_ACTIVATED, active);\n      setTimeout(function () {\n        return _this2._button.$element().toggleClass(ACTIVE_STATE_CLASS, active);\n      });\n    }\n  }]);\n\n  return FileManagerFileActionsButton;\n}(Widget);\n\nexport default FileManagerFileActionsButton;","map":null,"metadata":{},"sourceType":"module"}