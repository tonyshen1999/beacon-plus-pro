{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/appointments/rendering_strategies/strategy_horizontal_month_line.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport HorizontalAppointmentsStrategy from \"./strategy_horizontal\";\nimport dateUtils from \"../../../../core/utils/date\";\nimport query from \"../../../../data/query\";\nimport { sortAppointmentsByStartDate } from \"../dataProvider/utils\";\nvar HOURS_IN_DAY = 24;\nvar MINUTES_IN_HOUR = 60;\nvar MILLISECONDS_IN_MINUTE = 6e4;\nvar ZERO_APPOINTMENT_DURATION_IN_DAYS = 1;\n\nvar HorizontalMonthLineRenderingStrategy = /*#__PURE__*/function (_HorizontalAppointmen) {\n  _inherits(HorizontalMonthLineRenderingStrategy, _HorizontalAppointmen);\n\n  var _super = _createSuper(HorizontalMonthLineRenderingStrategy);\n\n  function HorizontalMonthLineRenderingStrategy() {\n    _classCallCheck(this, HorizontalMonthLineRenderingStrategy);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HorizontalMonthLineRenderingStrategy, [{\n    key: \"calculateAppointmentWidth\",\n    value: function calculateAppointmentWidth(appointment, position) {\n      var startDate = dateUtils.trimTime(position.info.appointment.startDate);\n      var normalizedEndDate = position.info.appointment.normalizedEndDate;\n      var cellWidth = this.cellWidth || this.getAppointmentMinSize();\n      var duration = Math.ceil(this._getDurationInDays(startDate, normalizedEndDate));\n      var width = this.cropAppointmentWidth(duration * cellWidth, cellWidth);\n\n      if (this.isVirtualScrolling) {\n        var skippedDays = this.viewDataProvider.getSkippedDaysCount(position.groupIndex, startDate, normalizedEndDate, duration);\n        width -= skippedDays * cellWidth;\n      }\n\n      return width;\n    }\n  }, {\n    key: \"_getDurationInDays\",\n    value: function _getDurationInDays(startDate, endDate) {\n      var adjustedDuration = this._adjustDurationByDaylightDiff(endDate.getTime() - startDate.getTime(), startDate, endDate);\n\n      return adjustedDuration / dateUtils.dateToMilliseconds(\"day\") || ZERO_APPOINTMENT_DURATION_IN_DAYS;\n    }\n  }, {\n    key: \"getDeltaTime\",\n    value: function getDeltaTime(args, initialSize) {\n      return HOURS_IN_DAY * MINUTES_IN_HOUR * MILLISECONDS_IN_MINUTE * this._getDeltaWidth(args, initialSize);\n    }\n  }, {\n    key: \"isAllDay\",\n    value: function isAllDay() {\n      return false;\n    }\n  }, {\n    key: \"createTaskPositionMap\",\n    value: function createTaskPositionMap(items, skipSorting) {\n      if (!skipSorting) {\n        sortAppointmentsByStartDate(items, this.dataAccessors);\n      }\n\n      return _get(_getPrototypeOf(HorizontalMonthLineRenderingStrategy.prototype), \"createTaskPositionMap\", this).call(this, items);\n    }\n  }, {\n    key: \"_getSortedPositions\",\n    value: function _getSortedPositions(map, skipSorting) {\n      var result = _get(_getPrototypeOf(HorizontalMonthLineRenderingStrategy.prototype), \"_getSortedPositions\", this).call(this, map);\n\n      if (!skipSorting) {\n        result = query(result).sortBy(\"top\").thenBy(\"left\").thenBy(\"cellPosition\").thenBy(\"i\").toArray();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"needCorrectAppointmentDates\",\n    value: function needCorrectAppointmentDates() {\n      return false;\n    }\n  }, {\n    key: \"getPositionShift\",\n    value: function getPositionShift() {\n      return {\n        top: 0,\n        left: 0,\n        cellPosition: 0\n      };\n    }\n  }]);\n\n  return HorizontalMonthLineRenderingStrategy;\n}(HorizontalAppointmentsStrategy);\n\nexport default HorizontalMonthLineRenderingStrategy;","map":null,"metadata":{},"sourceType":"module"}