{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/ui/scheduler/workspaces/ui.scheduler.timeline_month.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport registerComponent from \"../../../core/component_registrator\";\nimport SchedulerTimeline from \"./ui.scheduler.timeline\";\nimport dateUtils from \"../../../core/utils/date\";\nimport dxrDateHeader from \"../../../renovation/ui/scheduler/workspaces/base/header_panel/layout.j\";\nimport { getViewStartByOptions } from \"../../../renovation/ui/scheduler/view_model/to_test/views/utils/month\";\nimport { formatWeekdayAndDay } from \"../../../renovation/ui/scheduler/view_model/to_test/views/utils/base\";\nimport { VIEWS } from \"../constants\";\nvar TIMELINE_CLASS = \"dx-scheduler-timeline-month\";\n\nvar SchedulerTimelineMonth = /*#__PURE__*/function (_SchedulerTimeline) {\n  _inherits(SchedulerTimelineMonth, _SchedulerTimeline);\n\n  var _super = _createSuper(SchedulerTimelineMonth);\n\n  function SchedulerTimelineMonth() {\n    _classCallCheck(this, SchedulerTimelineMonth);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SchedulerTimelineMonth, [{\n    key: \"type\",\n    get: function get() {\n      return VIEWS.TIMELINE_MONTH;\n    }\n  }, {\n    key: \"viewDirection\",\n    get: function get() {\n      return \"horizontal\";\n    }\n  }, {\n    key: \"renovatedHeaderPanelComponent\",\n    get: function get() {\n      return dxrDateHeader;\n    }\n  }, {\n    key: \"_renderView\",\n    value: function _renderView() {\n      _get(_getPrototypeOf(SchedulerTimelineMonth.prototype), \"_renderView\", this).call(this);\n\n      this._updateScrollable();\n    }\n  }, {\n    key: \"_getElementClass\",\n    value: function _getElementClass() {\n      return TIMELINE_CLASS;\n    }\n  }, {\n    key: \"_getDateHeaderTemplate\",\n    value: function _getDateHeaderTemplate() {\n      return this.option(\"dateCellTemplate\");\n    }\n  }, {\n    key: \"_calculateDurationInCells\",\n    value: function _calculateDurationInCells(timeDiff) {\n      return timeDiff / this.getCellDuration();\n    }\n  }, {\n    key: \"isIndicatorVisible\",\n    value: function isIndicatorVisible() {\n      return true;\n    }\n  }, {\n    key: \"_getFormat\",\n    value: function _getFormat() {\n      return formatWeekdayAndDay;\n    }\n  }, {\n    key: \"_getIntervalBetween\",\n    value: function _getIntervalBetween(currentDate) {\n      var firstViewDate = this.getStartViewDate();\n      var timeZoneOffset = dateUtils.getTimezonesDifference(firstViewDate, currentDate);\n      return currentDate.getTime() - (firstViewDate.getTime() - 36e5 * this.option(\"startDayHour\")) - timeZoneOffset;\n    }\n  }, {\n    key: \"_getViewStartByOptions\",\n    value: function _getViewStartByOptions() {\n      return getViewStartByOptions(this.option(\"startDate\"), this.option(\"currentDate\"), this.option(\"intervalCount\"), dateUtils.getFirstMonthDate(this.option(\"startDate\")));\n    }\n  }, {\n    key: \"generateRenderOptions\",\n    value: function generateRenderOptions() {\n      var options = _get(_getPrototypeOf(SchedulerTimelineMonth.prototype), \"generateRenderOptions\", this).call(this, true);\n\n      return _extends({}, options, {\n        getDateForHeaderText: function getDateForHeaderText(_, date) {\n          return date;\n        }\n      });\n    }\n  }]);\n\n  return SchedulerTimelineMonth;\n}(SchedulerTimeline);\n\nregisterComponent(\"dxSchedulerTimelineMonth\", SchedulerTimelineMonth);\nexport default SchedulerTimelineMonth;","map":null,"metadata":{},"sourceType":"module"}