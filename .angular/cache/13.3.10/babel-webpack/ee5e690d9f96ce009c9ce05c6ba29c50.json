{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/form/components/label.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"$FIELD_ITEM_LABEL_CONTENT_CLASS\"];\nimport $ from \"../../../core/renderer\";\nimport { isDefined } from \"../../../core/utils/type\";\nimport { isEmpty } from \"../../../core/utils/string\";\nimport { getLabelMarkText } from \"../ui.form.layout_manager.utils\";\nimport { WIDGET_CLASS, FIELD_ITEM_LABEL_CONTENT_CLASS, FIELD_ITEM_LABEL_CLASS } from \"../constants\";\nexport var GET_LABEL_WIDTH_BY_TEXT_CLASS = \"dx-layout-manager-hidden-label\";\nexport var FIELD_ITEM_REQUIRED_MARK_CLASS = \"dx-field-item-required-mark\";\nexport var FIELD_ITEM_LABEL_LOCATION_CLASS = \"dx-field-item-label-location-\";\nexport var FIELD_ITEM_OPTIONAL_MARK_CLASS = \"dx-field-item-optional-mark\";\nexport var FIELD_ITEM_LABEL_TEXT_CLASS = \"dx-field-item-label-text\";\nexport function renderLabel(_ref) {\n  var text = _ref.text,\n      id = _ref.id,\n      location = _ref.location,\n      alignment = _ref.alignment,\n      _ref$labelID = _ref.labelID,\n      labelID = _ref$labelID === void 0 ? null : _ref$labelID,\n      _ref$markOptions = _ref.markOptions,\n      markOptions = _ref$markOptions === void 0 ? {} : _ref$markOptions;\n\n  if (!isDefined(text) || text.length <= 0) {\n    return null;\n  }\n\n  return $(\"<label>\").addClass(FIELD_ITEM_LABEL_CLASS + \" \" + FIELD_ITEM_LABEL_LOCATION_CLASS + location).attr(\"for\", id).attr(\"id\", labelID).css(\"textAlign\", alignment).append($(\"<span>\").addClass(FIELD_ITEM_LABEL_CONTENT_CLASS).append($(\"<span>\").addClass(FIELD_ITEM_LABEL_TEXT_CLASS).text(text), _renderLabelMark(markOptions)));\n}\n\nfunction _renderLabelMark(markOptions) {\n  var markText = getLabelMarkText(markOptions);\n\n  if (\"\" === markText) {\n    return null;\n  }\n\n  return $(\"<span>\").addClass(markOptions.showRequiredMark ? FIELD_ITEM_REQUIRED_MARK_CLASS : FIELD_ITEM_OPTIONAL_MARK_CLASS).text(markText);\n}\n\nexport function setLabelWidthByMaxLabelWidth($targetContainer, labelsSelector, labelMarkOptions) {\n  var FIELD_ITEM_LABEL_CONTENT_CLASS_Selector = \"\".concat(labelsSelector, \" > .\").concat(FIELD_ITEM_LABEL_CLASS, \":not(.\").concat(FIELD_ITEM_LABEL_LOCATION_CLASS, \"top) > .\").concat(FIELD_ITEM_LABEL_CONTENT_CLASS);\n  var $FIELD_ITEM_LABEL_CONTENT_CLASS_Items = $targetContainer.find(FIELD_ITEM_LABEL_CONTENT_CLASS_Selector);\n  var FIELD_ITEM_LABEL_CONTENT_CLASS_Length = $FIELD_ITEM_LABEL_CONTENT_CLASS_Items.length;\n  var labelWidth;\n  var i;\n  var maxWidth = 0;\n\n  for (i = 0; i < FIELD_ITEM_LABEL_CONTENT_CLASS_Length; i++) {\n    labelWidth = getLabelWidthByInnerHTML({\n      $FIELD_ITEM_LABEL_CONTENT_CLASS: $FIELD_ITEM_LABEL_CONTENT_CLASS_Items[i],\n      location: \"left\",\n      markOptions: labelMarkOptions\n    });\n\n    if (labelWidth > maxWidth) {\n      maxWidth = labelWidth;\n    }\n  }\n\n  for (i = 0; i < FIELD_ITEM_LABEL_CONTENT_CLASS_Length; i++) {\n    $FIELD_ITEM_LABEL_CONTENT_CLASS_Items[i].style.width = maxWidth + \"px\";\n  }\n}\n\nfunction getLabelWidthByInnerHTML(options) {\n  var $FIELD_ITEM_LABEL_CONTENT_CLASS = options.$FIELD_ITEM_LABEL_CONTENT_CLASS,\n      renderLabelOptions = _objectWithoutPropertiesLoose(options, _excluded);\n\n  var $hiddenContainer = $(\"<div>\").addClass(WIDGET_CLASS).addClass(GET_LABEL_WIDTH_BY_TEXT_CLASS).appendTo(\"body\");\n  renderLabelOptions.text = \" \";\n  var $label = renderLabel(renderLabelOptions).appendTo($hiddenContainer);\n  var labelTextElement = $label.find(\".\" + FIELD_ITEM_LABEL_TEXT_CLASS)[0];\n  labelTextElement.innerHTML = getLabelInnerHTML($FIELD_ITEM_LABEL_CONTENT_CLASS);\n  var result = labelTextElement.offsetWidth;\n  $hiddenContainer.remove();\n  return result;\n}\n\nfunction getLabelInnerHTML($FIELD_ITEM_LABEL_CONTENT_CLASS) {\n  var length = $FIELD_ITEM_LABEL_CONTENT_CLASS.children.length;\n  var child;\n  var result = \"\";\n  var i;\n\n  for (i = 0; i < length; i++) {\n    child = $FIELD_ITEM_LABEL_CONTENT_CLASS.children[i];\n    result += !isEmpty(child.innerText) ? child.innerText : child.innerHTML;\n  }\n\n  return result;\n}","map":null,"metadata":{},"sourceType":"module"}