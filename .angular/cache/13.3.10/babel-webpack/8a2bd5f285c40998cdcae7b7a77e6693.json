{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/ui/slider/slider_tooltip_position_controller.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { PopoverPositionController } from \"../popover/popover_position_controller\";\nimport { move } from \"../../animation/translator\";\nimport positionUtils from \"../../animation/position\";\nimport { extend } from \"../../core/utils/extend\";\nimport { isString } from \"../../core/utils/type\";\nvar SLIDER_TOOLTIP_POSITION_ALIASES = {\n  top: {\n    my: \"bottom center\",\n    at: \"top center\",\n    collision: \"fit none\"\n  },\n  bottom: {\n    my: \"top center\",\n    at: \"bottom center\",\n    collision: \"fit none\"\n  }\n};\nvar SLIDER_TOOLTIP_DEFAULT_BOUNDARY_OFFSET = {\n  h: 2,\n  v: 1\n};\nvar SLIDER_CLASS = \"dx-slider\";\n\nvar SliderTooltipPositionController = /*#__PURE__*/function (_PopoverPositionContr) {\n  _inherits(SliderTooltipPositionController, _PopoverPositionContr);\n\n  var _super = _createSuper(SliderTooltipPositionController);\n\n  function SliderTooltipPositionController() {\n    _classCallCheck(this, SliderTooltipPositionController);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SliderTooltipPositionController, [{\n    key: \"_normalizePosition\",\n    value: function _normalizePosition(positionProp, $sliderHandle) {\n      var sliderClass = \".\".concat(SLIDER_CLASS);\n      var $slider = null === $sliderHandle || void 0 === $sliderHandle ? void 0 : $sliderHandle.closest(sliderClass);\n      var defaultPositionConfig = {\n        of: $sliderHandle,\n        boundaryOffset: SLIDER_TOOLTIP_DEFAULT_BOUNDARY_OFFSET,\n        boundary: null === $slider || void 0 === $slider ? void 0 : $slider.get(0)\n      };\n      var resultPosition = extend(true, {}, defaultPositionConfig, this._positionToObject(positionProp));\n      this._positionSide = this._getDisplaySide(resultPosition);\n      return resultPosition;\n    }\n  }, {\n    key: \"_renderContentInitialPosition\",\n    value: function _renderContentInitialPosition() {\n      _get(_getPrototypeOf(SliderTooltipPositionController.prototype), \"_renderContentInitialPosition\", this).call(this);\n\n      this._fitIntoSlider();\n    }\n  }, {\n    key: \"_fitIntoSlider\",\n    value: function _fitIntoSlider() {\n      var _positionUtils$calcul = positionUtils.calculate(this._$content, this._position).h,\n          collisionSide = _positionUtils$calcul.collisionSide,\n          oversize = _positionUtils$calcul.oversize;\n      var left = this._visualPosition.left;\n      var isLeftSide = \"left\" === collisionSide;\n      var offset = (isLeftSide ? 1 : -1) * oversize;\n      move(this._$content, {\n        left: left + offset\n      });\n\n      this._updateVisualPositionValue();\n    }\n  }, {\n    key: \"_positionToObject\",\n    value: function _positionToObject(positionProp) {\n      if (isString(positionProp)) {\n        return extend({}, SLIDER_TOOLTIP_POSITION_ALIASES[positionProp]);\n      }\n\n      return positionProp;\n    }\n  }]);\n\n  return SliderTooltipPositionController;\n}(PopoverPositionController);\n\nexport { SliderTooltipPositionController };","map":null,"metadata":{},"sourceType":"module"}