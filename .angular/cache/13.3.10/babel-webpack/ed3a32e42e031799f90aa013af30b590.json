{"ast":null,"code":"import _defineProperty from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/file_management/remote_provider.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../core/renderer\";\nimport ajax from \"../core/utils/ajax\";\nimport { ensureDefined, noop } from \"../core/utils/common\";\nimport Guid from \"../core/guid\";\nimport { getWindow } from \"../core/utils/window\";\nimport { each } from \"../core/utils/iterator\";\nimport { Deferred } from \"../core/utils/deferred\";\nimport eventsEngine from \"../events/core/events_engine\";\nimport FileSystemProviderBase from \"./provider_base\";\nimport { compileGetter } from \"../core/utils/data\";\nimport { isDefined, isEmptyObject, isFunction } from \"../core/utils/type\";\nvar window = getWindow();\nvar FILE_CHUNK_BLOB_NAME = \"chunk\";\nvar FILE_SYSTEM_COMMNAD = {\n  GET_DIR_CONTENTS: \"GetDirContents\",\n  CREATE_DIR: \"CreateDir\",\n  RENAME: \"Rename\",\n  MOVE: \"Move\",\n  COPY: \"Copy\",\n  REMOVE: \"Remove\",\n  UPLOAD_CHUNK: \"UploadChunk\",\n  ABORT_UPLOAD: \"AbortUpload\",\n  DOWLOAD: \"Download\"\n};\nvar REQUEST_METHOD = {\n  GET: \"GET\",\n  POST: \"POST\"\n};\n\nvar RemoteFileSystemProvider = /*#__PURE__*/function (_FileSystemProviderBa) {\n  _inherits(RemoteFileSystemProvider, _FileSystemProviderBa);\n\n  var _super = _createSuper(RemoteFileSystemProvider);\n\n  function RemoteFileSystemProvider(options) {\n    var _this;\n\n    _classCallCheck(this, RemoteFileSystemProvider);\n\n    options = ensureDefined(options, {});\n    _this = _super.call(this, options);\n    _this._endpointUrl = options.endpointUrl;\n    _this._beforeAjaxSend = options.beforeAjaxSend;\n    _this._beforeSubmit = options.beforeSubmit;\n    _this._requestHeaders = options.requestHeaders;\n    _this._hasSubDirsGetter = compileGetter(options.hasSubDirectoriesExpr || \"hasSubDirectories\");\n    return _this;\n  }\n\n  _createClass(RemoteFileSystemProvider, [{\n    key: \"getItems\",\n    value: function getItems(parentDir) {\n      var _this2 = this;\n\n      var pathInfo = parentDir.getFullPathInfo();\n      return this._executeRequest(FILE_SYSTEM_COMMNAD.GET_DIR_CONTENTS, {\n        pathInfo: pathInfo\n      }).then(function (result) {\n        return _this2._convertDataObjectsToFileItems(result.result, pathInfo);\n      });\n    }\n  }, {\n    key: \"renameItem\",\n    value: function renameItem(item, name) {\n      return this._executeRequest(FILE_SYSTEM_COMMNAD.RENAME, {\n        pathInfo: item.getFullPathInfo(),\n        isDirectory: item.isDirectory,\n        name: name\n      });\n    }\n  }, {\n    key: \"createDirectory\",\n    value: function createDirectory(parentDir, name) {\n      return this._executeRequest(FILE_SYSTEM_COMMNAD.CREATE_DIR, {\n        pathInfo: parentDir.getFullPathInfo(),\n        name: name\n      });\n    }\n  }, {\n    key: \"deleteItems\",\n    value: function deleteItems(items) {\n      var _this3 = this;\n\n      return items.map(function (item) {\n        return _this3._executeRequest(FILE_SYSTEM_COMMNAD.REMOVE, {\n          pathInfo: item.getFullPathInfo(),\n          isDirectory: item.isDirectory\n        });\n      });\n    }\n  }, {\n    key: \"moveItems\",\n    value: function moveItems(items, destinationDirectory) {\n      var _this4 = this;\n\n      return items.map(function (item) {\n        return _this4._executeRequest(FILE_SYSTEM_COMMNAD.MOVE, {\n          sourcePathInfo: item.getFullPathInfo(),\n          sourceIsDirectory: item.isDirectory,\n          destinationPathInfo: destinationDirectory.getFullPathInfo()\n        });\n      });\n    }\n  }, {\n    key: \"copyItems\",\n    value: function copyItems(items, destinationFolder) {\n      var _this5 = this;\n\n      return items.map(function (item) {\n        return _this5._executeRequest(FILE_SYSTEM_COMMNAD.COPY, {\n          sourcePathInfo: item.getFullPathInfo(),\n          sourceIsDirectory: item.isDirectory,\n          destinationPathInfo: destinationFolder.getFullPathInfo()\n        });\n      });\n    }\n  }, {\n    key: \"uploadFileChunk\",\n    value: function uploadFileChunk(fileData, chunksInfo, destinationDirectory) {\n      var _data;\n\n      if (0 === chunksInfo.chunkIndex) {\n        chunksInfo.customData.uploadId = new Guid();\n      }\n\n      var args = {\n        destinationPathInfo: destinationDirectory.getFullPathInfo(),\n        chunkMetadata: JSON.stringify({\n          UploadId: chunksInfo.customData.uploadId,\n          FileName: fileData.name,\n          Index: chunksInfo.chunkIndex,\n          TotalCount: chunksInfo.chunkCount,\n          FileSize: fileData.size\n        })\n      };\n      var ajaxSettings = {\n        url: this._endpointUrl,\n        headers: this._requestHeaders || {},\n        method: REQUEST_METHOD.POST,\n        dataType: \"json\",\n        data: (_data = {}, _defineProperty(_data, FILE_CHUNK_BLOB_NAME, chunksInfo.chunkBlob), _defineProperty(_data, \"arguments\", JSON.stringify(args)), _defineProperty(_data, \"command\", FILE_SYSTEM_COMMNAD.UPLOAD_CHUNK), _data),\n        upload: {\n          onprogress: noop,\n          onloadstart: noop,\n          onabort: noop\n        },\n        xhrFields: {},\n        cache: false\n      };\n      var deferred = new Deferred();\n\n      this._beforeSendInternal(ajaxSettings);\n\n      ajax.sendRequest(ajaxSettings).done(function (result) {\n        !result.success && deferred.reject(result) || deferred.resolve();\n      }).fail(deferred.reject);\n      return deferred.promise();\n    }\n  }, {\n    key: \"abortFileUpload\",\n    value: function abortFileUpload(fileData, chunksInfo, destinationDirectory) {\n      return this._executeRequest(FILE_SYSTEM_COMMNAD.ABORT_UPLOAD, {\n        uploadId: chunksInfo.customData.uploadId\n      });\n    }\n  }, {\n    key: \"downloadItems\",\n    value: function downloadItems(items) {\n      var args = this._getDownloadArgs(items);\n\n      var $form = $(\"<form>\").css({\n        display: \"none\"\n      }).attr({\n        method: REQUEST_METHOD.POST,\n        action: args.url\n      });\n      var formDataEntries = {\n        command: args.command,\n        arguments: args.arguments\n      };\n\n      this._beforeSubmitInternal(formDataEntries);\n\n      this._appendFormDataInputsToForm(formDataEntries, $form);\n\n      $form.appendTo(\"body\");\n      eventsEngine.trigger($form, \"submit\");\n      setTimeout(function () {\n        return $form.remove();\n      });\n    }\n  }, {\n    key: \"getItemsContent\",\n    value: function getItemsContent(items) {\n      var args = this._getDownloadArgs(items);\n\n      var ajaxSettings = {\n        url: args.url,\n        headers: this._requestHeaders || {},\n        method: REQUEST_METHOD.POST,\n        responseType: \"arraybuffer\",\n        data: {\n          command: args.command,\n          arguments: args.arguments\n        },\n        upload: {\n          onprogress: noop,\n          onloadstart: noop,\n          onabort: noop\n        },\n        xhrFields: {},\n        cache: false\n      };\n\n      this._beforeSendInternal(ajaxSettings);\n\n      return ajax.sendRequest(ajaxSettings);\n    }\n  }, {\n    key: \"_getDownloadArgs\",\n    value: function _getDownloadArgs(items) {\n      var pathInfoList = items.map(function (item) {\n        return item.getFullPathInfo();\n      });\n      var args = {\n        pathInfoList: pathInfoList\n      };\n      var argsStr = JSON.stringify(args);\n      return {\n        url: this._endpointUrl,\n        arguments: argsStr,\n        command: FILE_SYSTEM_COMMNAD.DOWLOAD\n      };\n    }\n  }, {\n    key: \"_getItemsIds\",\n    value: function _getItemsIds(items) {\n      return items.map(function (it) {\n        return it.relativeName;\n      });\n    }\n  }, {\n    key: \"_executeRequest\",\n    value: function _executeRequest(command, args) {\n      var method = command === FILE_SYSTEM_COMMNAD.GET_DIR_CONTENTS ? REQUEST_METHOD.GET : REQUEST_METHOD.POST;\n      var deferred = new Deferred();\n      var ajaxSettings = {\n        url: this._getEndpointUrl(command, args),\n        headers: this._requestHeaders || {},\n        method: method,\n        dataType: \"json\",\n        data: {},\n        xhrFields: {},\n        cache: false\n      };\n\n      this._beforeSendInternal(ajaxSettings);\n\n      ajax.sendRequest(ajaxSettings).then(function (result) {\n        !result.success && deferred.reject(result) || deferred.resolve(result);\n      }, function (e) {\n        return deferred.reject(e);\n      });\n      return deferred.promise();\n    }\n  }, {\n    key: \"_beforeSubmitInternal\",\n    value: function _beforeSubmitInternal(formDataEntries) {\n      if (isFunction(this._beforeSubmit)) {\n        this._beforeSubmit({\n          formData: formDataEntries\n        });\n      }\n    }\n  }, {\n    key: \"_beforeSendInternal\",\n    value: function _beforeSendInternal(ajaxSettings) {\n      if (isFunction(this._beforeAjaxSend)) {\n        var ajaxArguments = {\n          headers: ajaxSettings.headers,\n          formData: ajaxSettings.data,\n          xhrFields: ajaxSettings.xhrFields\n        };\n\n        this._beforeAjaxSend(ajaxArguments);\n\n        ajaxSettings.headers = ajaxArguments.headers;\n        ajaxSettings.data = ajaxArguments.formData;\n        ajaxSettings.xhrFields = ajaxArguments.xhrFields;\n      }\n\n      if (isEmptyObject(ajaxSettings.data)) {\n        delete ajaxSettings.data;\n      } else if (ajaxSettings.responseType || ajaxSettings.upload) {\n        ajaxSettings.data = this._createFormData(ajaxSettings.data);\n      }\n    }\n  }, {\n    key: \"_createFormData\",\n    value: function _createFormData(formDataEntries) {\n      var formData = new window.FormData();\n\n      for (var entryName in formDataEntries) {\n        if (Object.prototype.hasOwnProperty.call(formDataEntries, entryName) && isDefined(formDataEntries[entryName])) {\n          formData.append(entryName, formDataEntries[entryName]);\n        }\n      }\n\n      return formData;\n    }\n  }, {\n    key: \"_appendFormDataInputsToForm\",\n    value: function _appendFormDataInputsToForm(formDataEntries, formElement) {\n      for (var entryName in formDataEntries) {\n        if (Object.prototype.hasOwnProperty.call(formDataEntries, entryName) && isDefined(formDataEntries[entryName])) {\n          $(\"<input>\").attr({\n            type: \"hidden\",\n            name: entryName,\n            value: formDataEntries[entryName]\n          }).appendTo(formElement);\n        }\n      }\n    }\n  }, {\n    key: \"_getEndpointUrl\",\n    value: function _getEndpointUrl(command, args) {\n      var queryString = this._getQueryString({\n        command: command,\n        arguments: JSON.stringify(args)\n      });\n\n      var separator = this._endpointUrl && this._endpointUrl.indexOf(\"?\") > 0 ? \"&\" : \"?\";\n      return this._endpointUrl + separator + queryString;\n    }\n  }, {\n    key: \"_getQueryString\",\n    value: function _getQueryString(params) {\n      var pairs = [];\n      var keys = Object.keys(params);\n\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var value = params[key];\n\n        if (void 0 === value) {\n          continue;\n        }\n\n        if (null === value) {\n          value = \"\";\n        }\n\n        if (Array.isArray(value)) {\n          this._processQueryStringArrayParam(key, value, pairs);\n        } else {\n          var pair = this._getQueryStringPair(key, value);\n\n          pairs.push(pair);\n        }\n      }\n\n      return pairs.join(\"&\");\n    }\n  }, {\n    key: \"_processQueryStringArrayParam\",\n    value: function _processQueryStringArrayParam(key, array, pairs) {\n      var _this6 = this;\n\n      each(array, function (_, item) {\n        var pair = _this6._getQueryStringPair(key, item);\n\n        pairs.push(pair);\n      });\n    }\n  }, {\n    key: \"_getQueryStringPair\",\n    value: function _getQueryStringPair(key, value) {\n      return encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n    }\n  }, {\n    key: \"_hasSubDirs\",\n    value: function _hasSubDirs(dataObj) {\n      var hasSubDirs = this._hasSubDirsGetter(dataObj);\n\n      return \"boolean\" === typeof hasSubDirs ? hasSubDirs : true;\n    }\n  }, {\n    key: \"_getKeyExpr\",\n    value: function _getKeyExpr(options) {\n      return options.keyExpr || \"key\";\n    }\n  }]);\n\n  return RemoteFileSystemProvider;\n}(FileSystemProviderBase);\n\nexport default RemoteFileSystemProvider;","map":null,"metadata":{},"sourceType":"module"}