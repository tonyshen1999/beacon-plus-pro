{"ast":null,"code":"/**\r\n * DevExtreme (esm/core/utils/support.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { inArray } from \"./array\";\nimport domAdapter from \"../dom_adapter\";\nimport callOnce from \"./call_once\";\nimport { getNavigator, hasProperty } from \"./window\";\nimport devices from \"../devices\";\nimport { stylePropPrefix, styleProp } from \"./style\";\n\nvar _getNavigator = getNavigator(),\n    maxTouchPoints = _getNavigator.maxTouchPoints;\n\nvar transitionEndEventNames = {\n  webkitTransition: \"webkitTransitionEnd\",\n  MozTransition: \"transitionend\",\n  OTransition: \"oTransitionEnd\",\n  transition: \"transitionend\"\n};\n\nvar supportProp = function supportProp(prop) {\n  return !!styleProp(prop);\n};\n\nvar isNativeScrollingSupported = function isNativeScrollingSupported() {\n  var _devices$real = devices.real(),\n      platform = _devices$real.platform,\n      version = _devices$real.version,\n      isMac = _devices$real.mac;\n\n  var isObsoleteAndroid = version && version[0] < 4 && \"android\" === platform;\n  var isNativeScrollDevice = !isObsoleteAndroid && inArray(platform, [\"ios\", \"android\"]) > -1 || isMac;\n  return isNativeScrollDevice;\n};\n\nvar inputType = function inputType(type) {\n  if (\"text\" === type) {\n    return true;\n  }\n\n  var input = domAdapter.createElement(\"input\");\n\n  try {\n    input.setAttribute(\"type\", type);\n    input.value = \"wrongValue\";\n    return !input.value;\n  } catch (e) {\n    return false;\n  }\n};\n\nvar detectTouchEvents = function detectTouchEvents(hasWindowProperty, maxTouchPoints) {\n  return (hasWindowProperty(\"ontouchstart\") || !!maxTouchPoints) && !hasWindowProperty(\"callPhantom\");\n};\n\nvar detectPointerEvent = function detectPointerEvent(hasWindowProperty) {\n  return hasWindowProperty(\"PointerEvent\");\n};\n\nvar touchEvents = detectTouchEvents(hasProperty, maxTouchPoints);\nvar pointerEvents = detectPointerEvent(hasProperty);\nvar touchPointersPresent = !!maxTouchPoints;\nexport { touchEvents, pointerEvents, styleProp, stylePropPrefix, supportProp, inputType };\nexport var touch = touchEvents || pointerEvents && touchPointersPresent;\nexport var transition = callOnce(function () {\n  return supportProp(\"transition\");\n});\nexport var transitionEndEventName = callOnce(function () {\n  return transitionEndEventNames[styleProp(\"transition\")];\n});\nexport var animation = callOnce(function () {\n  return supportProp(\"animation\");\n});\nexport var nativeScrolling = isNativeScrollingSupported();","map":null,"metadata":{},"sourceType":"module"}