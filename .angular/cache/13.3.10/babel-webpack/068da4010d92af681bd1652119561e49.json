{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/renovation/ui/common/dom_component_wrapper.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"valueChange\"],\n    _excluded2 = [\"componentProps\", \"componentType\", \"rootElementRef\", \"templateNames\"];\nimport { createVNode, normalizeProps } from \"inferno\";\nimport { InfernoEffect, InfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { renderTemplate, hasTemplate } from \"@devextreme/runtime/inferno\";\nimport { ConfigContext } from \"../../common/config_context\";\nimport { getUpdatedOptions } from \"./utils/get_updated_options\";\nexport var viewFunction = function viewFunction(_ref) {\n  var className = _ref.props.componentProps.className,\n      restAttributes = _ref.restAttributes,\n      widgetRef = _ref.widgetRef;\n  return normalizeProps(createVNode(1, \"div\", className, null, 1, _extends({}, restAttributes), null, widgetRef));\n};\nexport var DomComponentWrapperProps = {};\nimport { createRef as infernoCreateRef } from \"inferno\";\nexport var DomComponentWrapper = /*#__PURE__*/(function () {\n  var DomComponentWrapper = /*#__PURE__*/function (_InfernoComponent) {\n    _inherits(DomComponentWrapper, _InfernoComponent);\n\n    var _super = _createSuper(DomComponentWrapper);\n\n    function DomComponentWrapper(props) {\n      var _this;\n\n      _classCallCheck(this, DomComponentWrapper);\n\n      _this = _super.call(this, props);\n      _this.state = {};\n      _this.widgetRef = infernoCreateRef();\n      _this.getInstance = _this.getInstance.bind(_assertThisInitialized(_this));\n      _this.setupWidget = _this.setupWidget.bind(_assertThisInitialized(_this));\n      _this.setRootElementRef = _this.setRootElementRef.bind(_assertThisInitialized(_this));\n      _this.updateWidget = _this.updateWidget.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    _createClass(DomComponentWrapper, [{\n      key: \"config\",\n      get: function get() {\n        if (\"ConfigContext\" in this.context) {\n          return this.context.ConfigContext;\n        }\n\n        return ConfigContext;\n      }\n    }, {\n      key: \"createEffects\",\n      value: function createEffects() {\n        return [new InfernoEffect(this.setupWidget, []), new InfernoEffect(this.setRootElementRef, []), new InfernoEffect(this.updateWidget, [this.props.componentProps, this.config, this.props.templateNames])];\n      }\n    }, {\n      key: \"updateEffects\",\n      value: function updateEffects() {\n        var _this$_effects$;\n\n        null === (_this$_effects$ = this._effects[2]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props.componentProps, this.config, this.props.templateNames]);\n      }\n    }, {\n      key: \"setupWidget\",\n      value: function setupWidget() {\n        var _this2 = this;\n\n        var componentInstance = new this.props.componentType(this.widgetRef.current, this.properties);\n        this.instance = componentInstance;\n        return function () {\n          componentInstance.dispose();\n          _this2.instance = null;\n        };\n      }\n    }, {\n      key: \"setRootElementRef\",\n      value: function setRootElementRef() {\n        var rootElementRef = this.props.rootElementRef;\n\n        if (rootElementRef) {\n          rootElementRef.current = this.widgetRef.current;\n        }\n      }\n    }, {\n      key: \"updateWidget\",\n      value: function updateWidget() {\n        var instance = this.getInstance();\n\n        if (!instance) {\n          return;\n        }\n\n        var updatedOptions = getUpdatedOptions(this.prevProps || {}, this.properties);\n\n        if (updatedOptions.length) {\n          instance.beginUpdate();\n          updatedOptions.forEach(function (_ref2) {\n            var path = _ref2.path,\n                value = _ref2.value;\n            instance.option(path, value);\n          });\n          instance.endUpdate();\n        }\n\n        this.prevProps = this.properties;\n      }\n    }, {\n      key: \"properties\",\n      get: function get() {\n        var _this3 = this;\n\n        var _this$config;\n\n        var _this$props$component = this.props.componentProps,\n            valueChange = _this$props$component.valueChange,\n            restProps = _objectWithoutPropertiesLoose(_this$props$component, _excluded);\n\n        var properties = _extends({\n          rtlEnabled: !!(null !== (_this$config = this.config) && void 0 !== _this$config && _this$config.rtlEnabled)\n        }, restProps);\n\n        if (valueChange) {\n          properties.onValueChanged = function (_ref3) {\n            var value = _ref3.value;\n            return valueChange(value);\n          };\n        }\n\n        var templates = this.props.templateNames;\n        templates.forEach(function (name) {\n          if (hasTemplate(name, properties, _this3)) {\n            properties[name] = function (item, index, container) {\n              renderTemplate(_this3.props.componentProps[name], {\n                item: item,\n                index: index,\n                container: container\n              }, _this3);\n            };\n          }\n        });\n        return properties;\n      }\n    }, {\n      key: \"restAttributes\",\n      get: function get() {\n        var _this$props = this.props,\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded2);\n\n        return restProps;\n      }\n    }, {\n      key: \"getInstance\",\n      value: function getInstance() {\n        return this.instance;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this.props;\n        return viewFunction({\n          props: _extends({}, props),\n          widgetRef: this.widgetRef,\n          config: this.config,\n          properties: this.properties,\n          restAttributes: this.restAttributes\n        });\n      }\n    }]);\n\n    return DomComponentWrapper;\n  }(InfernoComponent);\n\n  DomComponentWrapper.defaultProps = DomComponentWrapperProps;\n  return DomComponentWrapper;\n})();","map":null,"metadata":{},"sourceType":"module"}