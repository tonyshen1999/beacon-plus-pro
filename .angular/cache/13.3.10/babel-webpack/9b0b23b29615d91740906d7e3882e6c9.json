{"ast":null,"code":"/**\r\n * DevExtreme (esm/events/pointer/base.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport eventsEngine from \"../../events/core/events_engine\";\nimport browser from \"../../core/utils/browser\";\nimport domAdapter from \"../../core/dom_adapter\";\nimport Class from \"../../core/class\";\nimport { addNamespace, eventSource, fireEvent } from \"../utils/index\";\nvar POINTER_EVENTS_NAMESPACE = \"dxPointerEvents\";\nvar BaseStrategy = Class.inherit({\n  ctor: function ctor(eventName, originalEvents) {\n    this._eventName = eventName;\n    this._originalEvents = addNamespace(originalEvents, POINTER_EVENTS_NAMESPACE);\n    this._handlerCount = 0;\n    this.noBubble = this._isNoBubble();\n  },\n  _isNoBubble: function _isNoBubble() {\n    var eventName = this._eventName;\n    return \"dxpointerenter\" === eventName || \"dxpointerleave\" === eventName;\n  },\n  _handler: function _handler(e) {\n    var delegateTarget = this._getDelegateTarget(e);\n\n    return this._fireEvent({\n      type: this._eventName,\n      pointerType: e.pointerType || eventSource(e),\n      originalEvent: e,\n      delegateTarget: delegateTarget,\n      timeStamp: browser.mozilla ? new Date().getTime() : e.timeStamp\n    });\n  },\n  _getDelegateTarget: function _getDelegateTarget(e) {\n    var delegateTarget;\n\n    if (this.noBubble) {\n      delegateTarget = e.delegateTarget;\n    }\n\n    return delegateTarget;\n  },\n  _fireEvent: function _fireEvent(args) {\n    return fireEvent(args);\n  },\n  _setSelector: function _setSelector(handleObj) {\n    this._selector = this.noBubble && handleObj ? handleObj.selector : null;\n  },\n  _getSelector: function _getSelector() {\n    return this._selector;\n  },\n  setup: function setup() {\n    return true;\n  },\n  add: function add(element, handleObj) {\n    if (this._handlerCount <= 0 || this.noBubble) {\n      element = this.noBubble ? element : domAdapter.getDocument();\n\n      this._setSelector(handleObj);\n\n      var that = this;\n      eventsEngine.on(element, this._originalEvents, this._getSelector(), function (e) {\n        that._handler(e);\n      });\n    }\n\n    if (!this.noBubble) {\n      this._handlerCount++;\n    }\n  },\n  remove: function remove(handleObj) {\n    this._setSelector(handleObj);\n\n    if (!this.noBubble) {\n      this._handlerCount--;\n    }\n  },\n  teardown: function teardown(element) {\n    if (this._handlerCount && !this.noBubble) {\n      return;\n    }\n\n    element = this.noBubble ? element : domAdapter.getDocument();\n\n    if (this._originalEvents !== \".\" + POINTER_EVENTS_NAMESPACE) {\n      eventsEngine.off(element, this._originalEvents, this._getSelector());\n    }\n  },\n  dispose: function dispose(element) {\n    element = this.noBubble ? element : domAdapter.getDocument();\n    eventsEngine.off(element, this._originalEvents);\n  }\n});\nexport default BaseStrategy;","map":null,"metadata":{},"sourceType":"module"}