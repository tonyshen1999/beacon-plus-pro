{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/date_box/ui.date_box.strategy.native.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { noop } from \"../../core/utils/common\";\nimport DateBoxStrategy from \"./ui.date_box.strategy\";\nimport { inputType } from \"../../core/utils/support\";\nimport { inArray } from \"../../core/utils/array\";\nimport dateUtils from \"./ui.date_utils\";\nimport dateSerialization from \"../../core/utils/date_serialization\";\nimport { extend } from \"../../core/utils/extend\";\nimport devices from \"../../core/devices\";\nvar NativeStrategy = DateBoxStrategy.inherit({\n  NAME: \"Native\",\n  popupConfig: function popupConfig(_popupConfig) {\n    return extend({}, _popupConfig, {\n      width: \"auto\"\n    });\n  },\n  getParsedText: function getParsedText(text) {\n    if (!text) {\n      return null;\n    }\n\n    if (\"datetime\" === this.dateBox.option(\"type\")) {\n      return new Date(text.replace(/-/g, \"/\").replace(\"T\", \" \").split(\".\")[0]);\n    }\n\n    return dateUtils.fromStandardDateFormat(text);\n  },\n  renderPopupContent: noop,\n  _getWidgetName: noop,\n  _getWidgetOptions: noop,\n  _getDateBoxType: function _getDateBoxType() {\n    var type = this.dateBox.option(\"type\");\n\n    if (-1 === inArray(type, dateUtils.SUPPORTED_FORMATS)) {\n      type = \"date\";\n    } else if (\"datetime\" === type && !inputType(type)) {\n      type = \"datetime-local\";\n    }\n\n    return type;\n  },\n  customizeButtons: function customizeButtons() {\n    var dropDownButton = this.dateBox.getButton(\"dropDown\");\n\n    if (devices.real().android && dropDownButton) {\n      dropDownButton.on(\"click\", function () {\n        this.dateBox._input().get(0).click();\n      }.bind(this));\n    }\n  },\n  getDefaultOptions: function getDefaultOptions() {\n    return {\n      mode: this._getDateBoxType()\n    };\n  },\n  getDisplayFormat: function getDisplayFormat(displayFormat) {\n    var type = this._getDateBoxType();\n\n    return displayFormat || dateUtils.FORMATS_MAP[type];\n  },\n  renderInputMinMax: function renderInputMinMax($input) {\n    $input.attr({\n      min: dateSerialization.serializeDate(this.dateBox.dateOption(\"min\"), \"yyyy-MM-dd\"),\n      max: dateSerialization.serializeDate(this.dateBox.dateOption(\"max\"), \"yyyy-MM-dd\")\n    });\n  }\n});\nexport default NativeStrategy;","map":null,"metadata":{},"sourceType":"module"}