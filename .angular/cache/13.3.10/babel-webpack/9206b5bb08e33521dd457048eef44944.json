{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nexport default function superset(values, other) {\n  var iterator = values[Symbol.iterator](),\n      set = new Set();\n\n  var _iterator = _createForOfIteratorHelper(other),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var o = _step.value;\n      var io = intern(o);\n      if (set.has(io)) continue;\n      var value = void 0,\n          done = void 0;\n\n      while (_iterator$next = iterator.next(), value = _iterator$next.value, done = _iterator$next.done, _iterator$next) {\n        var _iterator$next;\n\n        if (done) return false;\n        var ivalue = intern(value);\n        set.add(ivalue);\n        if (Object.is(io, ivalue)) break;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return true;\n}\n\nfunction intern(value) {\n  return value !== null && typeof value === \"object\" ? value.valueOf() : value;\n}","map":null,"metadata":{},"sourceType":"module"}