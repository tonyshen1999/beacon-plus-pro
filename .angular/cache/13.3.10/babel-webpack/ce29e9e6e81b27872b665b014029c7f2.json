{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/axes/strip.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isDefined } from \"../../core/utils/type\";\nimport { patchFontOptions } from \"../core/utils\";\nimport { extend } from \"../../core/utils/extend\";\nexport default function createStrip(axis, options) {\n  var storedCoord;\n  var lastStoredCoordinates;\n  var labelOptions = options.label || {};\n  return {\n    options: options,\n    label: null,\n    rect: null,\n    _getCoord: function _getCoord() {\n      var canvas = axis._getCanvasStartEnd();\n\n      var range = axis._translator.getBusinessRange();\n\n      return axis._getStripPos(options.startValue, options.endValue, canvas.start, canvas.end, range);\n    },\n    _drawLabel: function _drawLabel(coords) {\n      return axis._renderer.text(labelOptions.text, coords.x, coords.y).css(patchFontOptions(extend({}, axis.getOptions().label.font, labelOptions.font))).attr({\n        align: \"center\",\n        class: labelOptions.cssClass\n      }).append(axis._axisStripLabelGroup);\n    },\n    draw: function draw() {\n      if (axis._translator.getBusinessRange().isEmpty()) {\n        return;\n      }\n\n      if ((isDefined(options.startValue) || isDefined(options.endValue)) && isDefined(options.color)) {\n        var stripPos = this._getCoord();\n\n        this.labelCoords = labelOptions.text ? axis._getStripLabelCoords(stripPos.from, stripPos.to, labelOptions) : null;\n\n        if (stripPos.outOfCanvas || !isDefined(stripPos.to) || !isDefined(stripPos.from)) {\n          return;\n        }\n\n        this.rect = axis._createStrip(axis._getStripGraphicAttributes(stripPos.from, stripPos.to)).attr({\n          fill: options.color\n        }).append(axis._axisStripGroup);\n        this.label = labelOptions.text ? this._drawLabel(this.labelCoords) : null;\n      }\n    },\n    getContentContainer: function getContentContainer() {\n      return this.label;\n    },\n    removeLabel: function removeLabel() {},\n    updatePosition: function updatePosition(animate) {\n      var stripPos = this._getCoord();\n\n      if (animate && storedCoord) {\n        this.label && this.label.attr(axis._getStripLabelCoords(storedCoord.from, storedCoord.to, options.label));\n        this.rect && this.rect.attr(axis._getStripGraphicAttributes(storedCoord.from, storedCoord.to));\n        this.label && this.label.animate(axis._getStripLabelCoords(stripPos.from, stripPos.to, options.label));\n        this.rect && this.rect.animate(axis._getStripGraphicAttributes(stripPos.from, stripPos.to));\n      } else {\n        this.label && this.label.attr(axis._getStripLabelCoords(stripPos.from, stripPos.to, options.label));\n        this.rect && this.rect.attr(axis._getStripGraphicAttributes(stripPos.from, stripPos.to));\n      }\n    },\n    saveCoords: function saveCoords() {\n      lastStoredCoordinates = storedCoord;\n      storedCoord = this._getCoord();\n    },\n    resetCoordinates: function resetCoordinates() {\n      storedCoord = lastStoredCoordinates;\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}