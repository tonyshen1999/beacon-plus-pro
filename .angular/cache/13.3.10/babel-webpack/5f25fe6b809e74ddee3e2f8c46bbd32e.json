{"ast":null,"code":"import _defineProperty from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\n/**\r\n * DevExtreme (esm/core/options/utils.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport devices from \"../devices\";\nimport { isEmptyObject, isFunction } from \"../utils/type\";\nimport { findBestMatches } from \"../utils/common\";\nimport { extend } from \"../utils/extend\";\nimport { compileGetter } from \"../utils/data\";\nvar cachedGetters = {};\nexport var convertRulesToOptions = function convertRulesToOptions(rules) {\n  var currentDevice = devices.current();\n  return rules.reduce(function (options, _ref) {\n    var device = _ref.device,\n        ruleOptions = _ref.options;\n    var deviceFilter = device || {};\n    var match = isFunction(deviceFilter) ? deviceFilter(currentDevice) : deviceMatch(currentDevice, deviceFilter);\n\n    if (match) {\n      extend(true, options, ruleOptions);\n    }\n\n    return options;\n  }, {});\n};\nexport var normalizeOptions = function normalizeOptions(options, value) {\n  return \"string\" !== typeof options ? options : _defineProperty({}, options, value);\n};\nexport var deviceMatch = function deviceMatch(device, filter) {\n  return isEmptyObject(filter) || findBestMatches(device, [filter]).length > 0;\n};\nexport var getFieldName = function getFieldName(fullName) {\n  return fullName.substr(fullName.lastIndexOf(\".\") + 1);\n};\nexport var getParentName = function getParentName(fullName) {\n  return fullName.substr(0, fullName.lastIndexOf(\".\"));\n};\nexport var getNestedOptionValue = function getNestedOptionValue(optionsObject, name) {\n  cachedGetters[name] = cachedGetters[name] || compileGetter(name);\n  return cachedGetters[name](optionsObject, {\n    functionsAsIs: true\n  });\n};\nexport var createDefaultOptionRules = function createDefaultOptionRules() {\n  var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];\n  return options;\n};","map":null,"metadata":{},"sourceType":"module"}