{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scroll_view/utils/get_element_location_internal.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { titleize } from \"../../../../core/utils/inflector\";\nimport { getRelativeOffset } from \"./get_relative_offset\";\nimport { DIRECTION_VERTICAL, SCROLLABLE_CONTENT_CLASS } from \"../common/consts\";\nexport function getElementLocationInternal(targetElement, direction, containerElement, scrollOffset, offset) {\n  var additionalOffset = _extends({\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }, offset);\n\n  var isVertical = direction === DIRECTION_VERTICAL;\n  var prop = isVertical ? \"top\" : \"left\";\n  var inverseProp = isVertical ? \"bottom\" : \"right\";\n  var dimension = isVertical ? \"height\" : \"width\";\n  var containerOffsetSize = containerElement[\"offset\".concat(titleize(dimension))];\n  var containerClientSize = containerElement[\"client\".concat(titleize(dimension))];\n  var containerSize = containerElement.getBoundingClientRect()[dimension];\n  var elementSize = targetElement.getBoundingClientRect()[dimension];\n  var scale = 1;\n\n  if (Math.abs(containerSize - containerOffsetSize) > 1) {\n    scale = containerSize / containerOffsetSize;\n  }\n\n  var relativeElementOffset = getRelativeOffset(SCROLLABLE_CONTENT_CLASS, targetElement)[prop] / scale;\n  var containerScrollOffset = scrollOffset[prop];\n  var relativeStartOffset = containerScrollOffset - relativeElementOffset + additionalOffset[prop];\n  var relativeEndOffset = containerScrollOffset - relativeElementOffset - elementSize / scale + containerClientSize - additionalOffset[inverseProp];\n\n  if (relativeStartOffset <= 0 && relativeEndOffset >= 0) {\n    return containerScrollOffset;\n  }\n\n  return containerScrollOffset - (Math.abs(relativeStartOffset) > Math.abs(relativeEndOffset) ? relativeEndOffset : relativeStartOffset);\n}","map":null,"metadata":{},"sourceType":"module"}