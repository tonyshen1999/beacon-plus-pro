{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/widget/selectors.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport domAdapter from \"../../core/dom_adapter\";\n\nvar focusableFn = function focusableFn(element, tabIndex) {\n  if (!visible(element)) {\n    return false;\n  }\n\n  var nodeName = element.nodeName.toLowerCase();\n  var isTabIndexNotNaN = !isNaN(tabIndex);\n  var isDisabled = element.disabled;\n  var isDefaultFocus = /^(input|select|textarea|button|object|iframe)$/.test(nodeName);\n  var isHyperlink = \"a\" === nodeName;\n  var isFocusable = true;\n  var isContentEditable = element.isContentEditable;\n\n  if (isDefaultFocus || isContentEditable) {\n    isFocusable = !isDisabled;\n  } else if (isHyperlink) {\n    isFocusable = element.href || isTabIndexNotNaN;\n  } else {\n    isFocusable = isTabIndexNotNaN;\n  }\n\n  return isFocusable;\n};\n\nfunction visible(element) {\n  var $element = $(element);\n  return $element.is(\":visible\") && \"hidden\" !== $element.css(\"visibility\") && \"hidden\" !== $element.parents().css(\"visibility\");\n}\n\nexport var focusable = function focusable(index, element) {\n  return focusableFn(element, $(element).attr(\"tabIndex\"));\n};\nexport var tabbable = function tabbable(index, element) {\n  var tabIndex = $(element).attr(\"tabIndex\");\n  return (isNaN(tabIndex) || tabIndex >= 0) && focusableFn(element, tabIndex);\n};\nexport var focused = function focused($element) {\n  var element = $($element).get(0);\n  return domAdapter.getActiveElement() === element;\n};","map":null,"metadata":{},"sourceType":"module"}