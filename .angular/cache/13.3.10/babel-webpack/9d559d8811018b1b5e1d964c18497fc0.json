{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/ui/html_editor/modules/dropImage.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Quill from \"devextreme-quill\";\nimport eventsEngine from \"../../../events/core/events_engine\";\nimport { addNamespace } from \"../../../events/utils/index\";\nimport { each } from \"../../../core/utils/iterator\";\nimport browser from \"../../../core/utils/browser\";\nimport { getWindow } from \"../../../core/utils/window\";\nimport BaseModule from \"./base\";\nvar DropImageModule = BaseModule;\n\nif (Quill) {\n  DropImageModule = /*#__PURE__*/function (_BaseModule) {\n    _inherits(DropImageModule, _BaseModule);\n\n    var _super = _createSuper(DropImageModule);\n\n    function DropImageModule(quill, options) {\n      var _this;\n\n      _classCallCheck(this, DropImageModule);\n\n      _this = _super.call(this, quill, options);\n      var widgetName = _this.editorInstance.NAME;\n      eventsEngine.on(_this.quill.root, addNamespace(\"drop\", widgetName), _this._dropHandler.bind(_assertThisInitialized(_this)));\n      eventsEngine.on(_this.quill.root, addNamespace(\"paste\", widgetName), _this._pasteHandler.bind(_assertThisInitialized(_this)));\n      return _this;\n    }\n\n    _createClass(DropImageModule, [{\n      key: \"_dropHandler\",\n      value: function _dropHandler(e) {\n        var _dataTransfer$files;\n\n        var dataTransfer = e.originalEvent.dataTransfer;\n        var hasFiles = null === dataTransfer || void 0 === dataTransfer ? void 0 : null === (_dataTransfer$files = dataTransfer.files) || void 0 === _dataTransfer$files ? void 0 : _dataTransfer$files.length;\n        this.saveValueChangeEvent(e);\n        e.preventDefault();\n\n        if (hasFiles) {\n          this._getImage(dataTransfer.files, this._addImage.bind(this));\n        }\n      }\n    }, {\n      key: \"_pasteHandler\",\n      value: function _pasteHandler(e) {\n        var _this2 = this;\n\n        var _clipboardData$items;\n\n        var clipboardData = e.originalEvent.clipboardData;\n        this.saveValueChangeEvent(e);\n\n        if (!clipboardData) {\n          return;\n        }\n\n        var hasDataItems = null === (_clipboardData$items = clipboardData.items) || void 0 === _clipboardData$items ? void 0 : _clipboardData$items.length;\n        var isHtmlData = clipboardData.getData(\"text/html\");\n\n        if (!isHtmlData && hasDataItems) {\n          this._getImage(clipboardData.items, function (imageData) {\n            if (_this2._isBrowserSupportImagePaste(browser)) {\n              return;\n            }\n\n            _this2._addImage(imageData);\n          });\n        }\n      }\n    }, {\n      key: \"_isBrowserSupportImagePaste\",\n      value: function _isBrowserSupportImagePaste(_ref) {\n        var mozilla = _ref.mozilla,\n            chrome = _ref.chrome,\n            version = _ref.version;\n        return mozilla || chrome && version > 82;\n      }\n    }, {\n      key: \"_isImage\",\n      value: function _isImage(file) {\n        return !!file.type.match(/^image\\/(a?png|bmp|gif|p?jpe?g|svg|vnd\\.microsoft\\.icon|webp)/i);\n      }\n    }, {\n      key: \"_getImage\",\n      value: function _getImage(files, callback) {\n        var _this3 = this;\n\n        var window = getWindow();\n        each(files, function (index, file) {\n          if (!_this3._isImage(file)) {\n            return;\n          }\n\n          var reader = new window.FileReader();\n\n          reader.onload = function (_ref2) {\n            var target = _ref2.target;\n            callback(target.result);\n          };\n\n          var readableFile = file.getAsFile ? file.getAsFile() : file;\n\n          if (readableFile instanceof window.Blob) {\n            reader.readAsDataURL(readableFile);\n          }\n        });\n      }\n    }, {\n      key: \"_addImage\",\n      value: function _addImage(data) {\n        var selection = this.quill.getSelection();\n        var pasteIndex = selection ? selection.index : this.quill.getLength();\n        this.quill.insertEmbed(pasteIndex, \"extendedImage\", data, \"user\");\n      }\n    }]);\n\n    return DropImageModule;\n  }(BaseModule);\n}\n\nexport default DropImageModule;","map":null,"metadata":{},"sourceType":"module"}