{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/renovation/ui/editors/check_box/check_box_icon.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"isChecked\", \"size\"];\nimport { createVNode } from \"inferno\";\nimport { InfernoEffect, InfernoComponent, normalizeStyles } from \"@devextreme/runtime/inferno\";\nimport getElementComputedStyle from \"../../../utils/get_computed_style\";\nimport { hasWindow } from \"../../../../core/utils/window\";\nimport { normalizeStyleProp } from \"../../../../core/utils/style\";\nimport { isNumeric as isNumber } from \"../../../../core/utils/type\";\nimport { getFontSizeByIconSize } from \"./utils\";\nexport var viewFunction = function viewFunction(viewModel) {\n  var cssStyles = viewModel.cssStyles,\n      elementRef = viewModel.elementRef;\n  return createVNode(1, \"span\", \"dx-checkbox-icon\", null, 1, {\n    style: normalizeStyles(cssStyles)\n  }, null, elementRef);\n};\nexport var CheckBoxIconProps = {\n  isChecked: false\n};\nimport { createRef as infernoCreateRef } from \"inferno\";\nexport var CheckBoxIcon = /*#__PURE__*/(function () {\n  var CheckBoxIcon = /*#__PURE__*/function (_InfernoComponent) {\n    _inherits(CheckBoxIcon, _InfernoComponent);\n\n    var _super = _createSuper(CheckBoxIcon);\n\n    function CheckBoxIcon(props) {\n      var _this;\n\n      _classCallCheck(this, CheckBoxIcon);\n\n      _this = _super.call(this, props);\n      _this.state = {};\n      _this.elementRef = infernoCreateRef();\n      _this.__getterCache = {};\n      _this.updateFontSize = _this.updateFontSize.bind(_assertThisInitialized(_this));\n      _this.setIconFontSize = _this.setIconFontSize.bind(_assertThisInitialized(_this));\n      _this.getIconSize = _this.getIconSize.bind(_assertThisInitialized(_this));\n      _this.getComputedIconSize = _this.getComputedIconSize.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    _createClass(CheckBoxIcon, [{\n      key: \"createEffects\",\n      value: function createEffects() {\n        return [new InfernoEffect(this.updateFontSize, [this.props.isChecked, this.props.size])];\n      }\n    }, {\n      key: \"updateEffects\",\n      value: function updateEffects() {\n        var _this$_effects$;\n\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props.isChecked, this.props.size]);\n      }\n    }, {\n      key: \"updateFontSize\",\n      value: function updateFontSize() {\n        var _this$props2 = this.props,\n            isChecked = _this$props2.isChecked,\n            size = _this$props2.size;\n\n        if (hasWindow() && size) {\n          var newIconSize = this.getIconSize(size);\n          var newFontSize = getFontSizeByIconSize(newIconSize, isChecked);\n          this.setIconFontSize(newFontSize);\n        }\n      }\n    }, {\n      key: \"setIconFontSize\",\n      value: function setIconFontSize(fontSize) {\n        var element = this.elementRef.current;\n        element.style.fontSize = \"\".concat(fontSize, \"px\");\n      }\n    }, {\n      key: \"getIconSize\",\n      value: function getIconSize(size) {\n        if (isNumber(size)) {\n          return size;\n        }\n\n        if (size.endsWith(\"px\")) {\n          return parseInt(size, 10);\n        }\n\n        return this.getComputedIconSize();\n      }\n    }, {\n      key: \"getComputedIconSize\",\n      value: function getComputedIconSize() {\n        var element = this.elementRef.current;\n        var iconComputedStyle = getElementComputedStyle(element);\n        var computedIconSize = parseInt(null === iconComputedStyle || void 0 === iconComputedStyle ? void 0 : iconComputedStyle.width, 10);\n        return computedIconSize;\n      }\n    }, {\n      key: \"cssStyles\",\n      get: function get() {\n        var _this2 = this;\n\n        if (void 0 !== this.__getterCache.cssStyles) {\n          return this.__getterCache.cssStyles;\n        }\n\n        return this.__getterCache.cssStyles = function () {\n          var size = _this2.props.size;\n          var width = normalizeStyleProp(\"width\", size);\n          var height = normalizeStyleProp(\"height\", size);\n          return {\n            height: height,\n            width: width\n          };\n        }();\n      }\n    }, {\n      key: \"restAttributes\",\n      get: function get() {\n        var _this$props = this.props,\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n        return restProps;\n      }\n    }, {\n      key: \"componentWillUpdate\",\n      value: function componentWillUpdate(nextProps, nextState, context) {\n        _get(_getPrototypeOf(CheckBoxIcon.prototype), \"componentWillUpdate\", this).call(this);\n\n        if (this.props.size !== nextProps.size) {\n          this.__getterCache.cssStyles = void 0;\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this.props;\n        return viewFunction({\n          props: _extends({}, props),\n          elementRef: this.elementRef,\n          setIconFontSize: this.setIconFontSize,\n          getIconSize: this.getIconSize,\n          getComputedIconSize: this.getComputedIconSize,\n          cssStyles: this.cssStyles,\n          restAttributes: this.restAttributes\n        });\n      }\n    }]);\n\n    return CheckBoxIcon;\n  }(InfernoComponent);\n\n  CheckBoxIcon.defaultProps = CheckBoxIconProps;\n  return CheckBoxIcon;\n})();","map":null,"metadata":{},"sourceType":"module"}