{"ast":null,"code":"/**\r\n * DevExtreme (esm/events/pointer/observer.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { each } from \"../../core/utils/iterator\";\nimport readyCallbacks from \"../../core/utils/ready_callbacks\";\nimport domAdapter from \"../../core/dom_adapter\";\n\nvar addEventsListener = function addEventsListener(events, handler) {\n  readyCallbacks.add(function () {\n    events.split(\" \").forEach(function (event) {\n      domAdapter.listen(domAdapter.getDocument(), event, handler, true);\n    });\n  });\n};\n\nvar Observer = function Observer(eventMap, pointerEquals, onPointerAdding) {\n  onPointerAdding = onPointerAdding || function () {};\n\n  var pointers = [];\n\n  var getPointerIndex = function getPointerIndex(e) {\n    var index = -1;\n    each(pointers, function (i, pointer) {\n      if (!pointerEquals(e, pointer)) {\n        return true;\n      }\n\n      index = i;\n      return false;\n    });\n    return index;\n  };\n\n  var removePointer = function removePointer(e) {\n    var index = getPointerIndex(e);\n\n    if (index > -1) {\n      pointers.splice(index, 1);\n    }\n  };\n\n  addEventsListener(eventMap.dxpointerdown, function (e) {\n    if (-1 === getPointerIndex(e)) {\n      onPointerAdding(e);\n      pointers.push(e);\n    }\n  });\n  addEventsListener(eventMap.dxpointermove, function (e) {\n    pointers[getPointerIndex(e)] = e;\n  });\n  addEventsListener(eventMap.dxpointerup, removePointer);\n  addEventsListener(eventMap.dxpointercancel, removePointer);\n\n  this.pointers = function () {\n    return pointers;\n  };\n\n  this.reset = function () {\n    pointers = [];\n  };\n};\n\nexport default Observer;","map":null,"metadata":{},"sourceType":"module"}