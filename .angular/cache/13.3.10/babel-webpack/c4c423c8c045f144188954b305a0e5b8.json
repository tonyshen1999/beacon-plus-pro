{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/ui/diagram/ui.diagram.floating_panel.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getOuterHeight, getHeight, getOuterWidth, getWidth } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport { extend } from \"../../core/utils/extend\";\nimport { hasWindow } from \"../../core/utils/window\";\nimport Popup from \"../popup\";\nimport DiagramPanel from \"./ui.diagram.panel\";\nvar DIAGRAM_MOBILE_POPUP_CLASS = \"dx-diagram-mobile-popup\";\n\nvar DiagramFloatingPanel = /*#__PURE__*/function (_DiagramPanel) {\n  _inherits(DiagramFloatingPanel, _DiagramPanel);\n\n  var _super = _createSuper(DiagramFloatingPanel);\n\n  function DiagramFloatingPanel() {\n    _classCallCheck(this, DiagramFloatingPanel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DiagramFloatingPanel, [{\n    key: \"_init\",\n    value: function _init() {\n      _get(_getPrototypeOf(DiagramFloatingPanel.prototype), \"_init\", this).call(this);\n\n      this._createOnVisibilityChangingAction();\n\n      this._createOnVisibilityChangedAction();\n    }\n  }, {\n    key: \"isVisible\",\n    value: function isVisible() {\n      return this.option(\"isVisible\");\n    }\n  }, {\n    key: \"isMobileView\",\n    value: function isMobileView() {\n      return this.option(\"isMobileView\");\n    }\n  }, {\n    key: \"_initMarkup\",\n    value: function _initMarkup() {\n      _get(_getPrototypeOf(DiagramFloatingPanel.prototype), \"_initMarkup\", this).call(this);\n\n      var $parent = this.$element();\n      var $popupElement = $(\"<div>\").addClass(this._getPopupClass()).addClass(this.isMobileView() && DIAGRAM_MOBILE_POPUP_CLASS).appendTo($parent);\n      this._popup = this._createComponent($popupElement, Popup, this._getPopupOptions());\n\n      this._updatePopupVisible();\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.option(\"isVisible\", true);\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.option(\"isVisible\", false);\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.option(\"isVisible\", !this.isVisible());\n    }\n  }, {\n    key: \"repaint\",\n    value: function repaint() {\n      this._popup.repaint();\n    }\n  }, {\n    key: \"_getPopupContent\",\n    value: function _getPopupContent() {\n      return this._popup.content();\n    }\n  }, {\n    key: \"_getPopupTitle\",\n    value: function _getPopupTitle() {\n      var $content = $(this._getPopupContent());\n      return $content.parent().find(\".dx-popup-title\");\n    }\n  }, {\n    key: \"_getPointerUpElements\",\n    value: function _getPointerUpElements() {\n      return [this._getPopupContent(), this._getPopupTitle()];\n    }\n  }, {\n    key: \"_getVerticalPaddingsAndBorders\",\n    value: function _getVerticalPaddingsAndBorders() {\n      var $content = $(this._getPopupContent());\n      return getOuterHeight($content) - getHeight($content);\n    }\n  }, {\n    key: \"_getHorizontalPaddingsAndBorders\",\n    value: function _getHorizontalPaddingsAndBorders() {\n      var $content = $(this._getPopupContent());\n      return getOuterWidth($content) - getWidth($content);\n    }\n  }, {\n    key: \"_getPopupClass\",\n    value: function _getPopupClass() {\n      return \"\";\n    }\n  }, {\n    key: \"_getPopupWidth\",\n    value: function _getPopupWidth() {\n      return this.option(\"width\") || \"auto\";\n    }\n  }, {\n    key: \"_getPopupMaxWidth\",\n    value: function _getPopupMaxWidth() {\n      return this.option(\"maxWidth\");\n    }\n  }, {\n    key: \"_getPopupMinWidth\",\n    value: function _getPopupMinWidth() {\n      return this.option(\"minWidth\");\n    }\n  }, {\n    key: \"_getPopupHeight\",\n    value: function _getPopupHeight() {\n      return this.option(\"height\") || \"auto\";\n    }\n  }, {\n    key: \"_getPopupMaxHeight\",\n    value: function _getPopupMaxHeight() {\n      return this.option(\"maxHeight\");\n    }\n  }, {\n    key: \"_getPopupMinHeight\",\n    value: function _getPopupMinHeight() {\n      return this.option(\"minHeight\");\n    }\n  }, {\n    key: \"_getPopupPosition\",\n    value: function _getPopupPosition() {\n      return {};\n    }\n  }, {\n    key: \"_getPopupContainer\",\n    value: function _getPopupContainer() {\n      return this.option(\"container\");\n    }\n  }, {\n    key: \"_getPopupSlideAnimationObject\",\n    value: function _getPopupSlideAnimationObject(properties) {\n      return extend({\n        type: \"slide\",\n        start: function start() {\n          $(\"body\").css(\"overflow\", \"hidden\");\n        },\n        complete: function complete() {\n          $(\"body\").css(\"overflow\", \"\");\n        }\n      }, properties);\n    }\n  }, {\n    key: \"_getPopupAnimation\",\n    value: function _getPopupAnimation() {\n      return {\n        hide: {\n          type: \"fadeOut\"\n        },\n        show: {\n          type: \"fadeIn\"\n        }\n      };\n    }\n  }, {\n    key: \"_getPopupOptions\",\n    value: function _getPopupOptions() {\n      var _this = this;\n\n      var that = this;\n      return {\n        animation: hasWindow() ? this._getPopupAnimation() : null,\n        shading: false,\n        showTitle: false,\n        focusStateEnabled: false,\n        container: this._getPopupContainer(),\n        width: this._getPopupWidth(),\n        height: this._getPopupHeight(),\n        maxWidth: this._getPopupMaxWidth(),\n        maxHeight: this._getPopupMaxHeight(),\n        minWidth: this._getPopupMinWidth(),\n        minHeight: this._getPopupMinHeight(),\n        position: this._getPopupPosition(),\n        showCloseButton: true,\n        copyRootClassesToWrapper: true,\n        _ignoreCopyRootClassesToWrapperDeprecation: true,\n        onContentReady: function onContentReady() {\n          that._renderPopupContent(that._popup.content());\n        },\n        onShowing: function onShowing() {\n          _this._onVisibilityChangingAction({\n            visible: true,\n            component: _this\n          });\n        },\n        onShown: function onShown() {\n          _this.option(\"isVisible\", true);\n\n          _this._onVisibilityChangedAction({\n            visible: true,\n            component: _this\n          });\n        },\n        onHiding: function onHiding() {\n          _this._onVisibilityChangingAction({\n            visible: false,\n            component: _this\n          });\n        },\n        onHidden: function onHidden() {\n          _this.option(\"isVisible\", false);\n\n          _this._onVisibilityChangedAction({\n            visible: false,\n            component: _this\n          });\n        }\n      };\n    }\n  }, {\n    key: \"_renderPopupContent\",\n    value: function _renderPopupContent($parent) {}\n  }, {\n    key: \"_updatePopupVisible\",\n    value: function _updatePopupVisible() {\n      this._popup.option(\"visible\", this.isVisible());\n    }\n  }, {\n    key: \"_createOnVisibilityChangingAction\",\n    value: function _createOnVisibilityChangingAction() {\n      this._onVisibilityChangingAction = this._createActionByOption(\"onVisibilityChanging\");\n    }\n  }, {\n    key: \"_createOnVisibilityChangedAction\",\n    value: function _createOnVisibilityChangedAction() {\n      this._onVisibilityChangedAction = this._createActionByOption(\"onVisibilityChanged\");\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function _optionChanged(args) {\n      switch (args.name) {\n        case \"onVisibilityChanging\":\n          this._createOnVisibilityChangingAction();\n\n          break;\n\n        case \"onVisibilityChanged\":\n          this._createOnVisibilityChangedAction();\n\n          break;\n\n        case \"container\":\n          this._popup.option(\"container\", this._getPopupContainer());\n\n          break;\n\n        case \"width\":\n          this._popup.option(\"width\", this._getPopupWidth());\n\n          break;\n\n        case \"height\":\n          this._popup.option(\"height\", this._getPopupHeight());\n\n          break;\n\n        case \"maxWidth\":\n          this._popup.option(\"maxWidth\", this._getPopupMaxWidth());\n\n          break;\n\n        case \"maxHeight\":\n          this._popup.option(\"maxHeight\", this._getPopupMaxHeight());\n\n          break;\n\n        case \"minWidth\":\n          this._popup.option(\"minWidth\", this._getPopupMinWidth());\n\n          break;\n\n        case \"minHeight\":\n          this._popup.option(\"minHeight\", this._getPopupMinHeight());\n\n          break;\n\n        case \"isMobileView\":\n          this._invalidate();\n\n          break;\n\n        case \"isVisible\":\n          this._updatePopupVisible();\n\n          break;\n\n        default:\n          _get(_getPrototypeOf(DiagramFloatingPanel.prototype), \"_optionChanged\", this).call(this, args);\n\n      }\n    }\n  }, {\n    key: \"_getDefaultOptions\",\n    value: function _getDefaultOptions() {\n      return extend(_get(_getPrototypeOf(DiagramFloatingPanel.prototype), \"_getDefaultOptions\", this).call(this), {\n        isVisible: true,\n        isMobileView: false,\n        offsetX: 0,\n        offsetY: 0\n      });\n    }\n  }]);\n\n  return DiagramFloatingPanel;\n}(DiagramPanel);\n\nexport default DiagramFloatingPanel;","map":null,"metadata":{},"sourceType":"module"}