{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/gauges/tracker.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport eventsEngine from \"../../events/core/events_engine\";\nimport Class from \"../../core/class\";\nimport domAdapter from \"../../core/dom_adapter\";\nimport { name as wheelEventName } from \"../../events/core/wheel\";\nimport ReadyCallbacks from \"../../core/utils/ready_callbacks\";\nimport { addNamespace } from \"../../events/utils/index\";\nimport pointerEvents from \"../../events/pointer\";\nvar EVENT_NS = \"gauge-tooltip\";\nvar TOOLTIP_HIDE_DELAY = 100;\nvar ready = ReadyCallbacks.add;\nvar Tracker = Class.inherit({\n  ctor: function ctor(parameters) {\n    var that = this;\n    that._element = parameters.renderer.g().attr({\n      class: \"dxg-tracker\",\n      stroke: \"none\",\n      \"stroke-width\": 0,\n      fill: \"#000000\",\n      opacity: 1e-4\n    }).linkOn(parameters.container, {\n      name: \"tracker\",\n      after: \"peripheral\"\n    });\n\n    that._showTooltipCallback = function () {\n      var target = that._tooltipEvent.target;\n      var data_target = target[\"gauge-data-target\"];\n      var data_info = target[\"gauge-data-info\"];\n      that._targetEvent = null;\n\n      if (that._tooltipTarget !== target) {\n        var callback = function callback(result) {\n          result && (that._tooltipTarget = target);\n        };\n\n        callback(that._callbacks[\"tooltip-show\"](data_target, data_info, callback));\n      }\n    };\n\n    that._hideTooltipCallback = function () {\n      that._hideTooltipTimeout = null;\n      that._targetEvent = null;\n\n      if (that._tooltipTarget) {\n        that._callbacks[\"tooltip-hide\"]();\n\n        that._tooltipTarget = null;\n      }\n    };\n\n    that._dispose = function () {\n      clearTimeout(that._hideTooltipTimeout);\n      that._showTooltipCallback = that._hideTooltipCallback = that._dispose = null;\n    };\n  },\n  dispose: function dispose() {\n    this._dispose();\n\n    this.deactivate();\n\n    this._element.off(\".\" + EVENT_NS);\n\n    this._element.linkOff();\n\n    this._element = this._context = this._callbacks = null;\n    return this;\n  },\n  activate: function activate() {\n    this._element.linkAppend();\n\n    return this;\n  },\n  deactivate: function deactivate() {\n    this._element.linkRemove().clear();\n\n    return this;\n  },\n  attach: function attach(element, target, info) {\n    element.data({\n      \"gauge-data-target\": target,\n      \"gauge-data-info\": info\n    }).append(this._element);\n    return this;\n  },\n  detach: function detach(element) {\n    element.remove();\n    return this;\n  },\n  setTooltipState: function setTooltipState(state) {\n    this._element.off(\".\" + EVENT_NS);\n\n    if (state) {\n      var data = {\n        tracker: this\n      };\n\n      this._element.on(addNamespace([pointerEvents.move], EVENT_NS), data, handleTooltipMouseOver).on(addNamespace([pointerEvents.out], EVENT_NS), data, handleTooltipMouseOut).on(addNamespace([pointerEvents.down], EVENT_NS), data, handleTooltipTouchStart).on(addNamespace([pointerEvents.up], EVENT_NS), data, handleTooltipTouchEnd).on(addNamespace([wheelEventName], EVENT_NS), data, handleTooltipMouseWheel);\n    }\n\n    return this;\n  },\n  setCallbacks: function setCallbacks(callbacks) {\n    this._callbacks = callbacks;\n    return this;\n  },\n  _showTooltip: function _showTooltip(event) {\n    clearTimeout(this._hideTooltipTimeout);\n    this._hideTooltipTimeout = null;\n\n    if (this._tooltipTarget === event.target) {\n      return;\n    }\n\n    this._tooltipEvent = event;\n\n    this._showTooltipCallback();\n  },\n  _hideTooltip: function _hideTooltip(delay) {\n    clearTimeout(this._hideTooltipTimeout);\n\n    if (delay) {\n      this._hideTooltipTimeout = setTimeout(this._hideTooltipCallback, delay);\n    } else {\n      this._hideTooltipCallback();\n    }\n  }\n});\nvar active_touch_tooltip_tracker = null;\n\nfunction handleTooltipMouseOver(event) {\n  var tracker = event.data.tracker;\n  tracker._x = event.pageX;\n  tracker._y = event.pageY;\n\n  tracker._showTooltip(event);\n}\n\nfunction handleTooltipMouseOut(event) {\n  event.data.tracker._hideTooltip(TOOLTIP_HIDE_DELAY);\n}\n\nfunction handleTooltipMouseWheel(event) {\n  event.data.tracker._hideTooltip();\n}\n\nfunction handleTooltipTouchStart(event) {\n  var tracker = active_touch_tooltip_tracker = event.data.tracker;\n  tracker._touch = true;\n  handleTooltipMouseOver(event);\n}\n\nfunction handleTooltipTouchEnd() {\n  active_touch_tooltip_tracker._touch = false;\n}\n\nfunction handleDocumentTooltipTouchStart(event) {\n  var tracker = active_touch_tooltip_tracker;\n\n  if (tracker && !tracker._touch) {\n    tracker._hideTooltip(TOOLTIP_HIDE_DELAY);\n\n    active_touch_tooltip_tracker = null;\n  }\n}\n\nready(function () {\n  eventsEngine.subscribeGlobal(domAdapter.getDocument(), addNamespace([pointerEvents.down], EVENT_NS), handleDocumentTooltipTouchStart);\n});\nexport default Tracker;","map":null,"metadata":{},"sourceType":"module"}