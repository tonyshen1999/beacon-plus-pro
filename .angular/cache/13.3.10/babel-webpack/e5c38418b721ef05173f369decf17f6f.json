{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/ui/html_editor/formats/variable.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Quill from \"devextreme-quill\";\nimport { ensureDefined } from \"../../../core/utils/common\";\nimport { extend } from \"../../../core/utils/extend\";\nvar Variable = {};\n\nif (Quill) {\n  var Embed = Quill.import(\"blots/embed\");\n  var VARIABLE_CLASS = \"dx-variable\";\n\n  Variable = /*#__PURE__*/function (_Embed) {\n    _inherits(Variable, _Embed);\n\n    var _super = _createSuper(Variable);\n\n    function Variable() {\n      _classCallCheck(this, Variable);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(Variable, null, [{\n      key: \"create\",\n      value: function create(data) {\n        var node = _get(_getPrototypeOf(Variable), \"create\", this).call(this);\n\n        var startEscapeChar;\n        var endEscapeChar;\n        var text = data.value;\n\n        if (Array.isArray(data.escapeChar)) {\n          startEscapeChar = ensureDefined(data.escapeChar[0], \"\");\n          endEscapeChar = ensureDefined(data.escapeChar[1], \"\");\n        } else {\n          startEscapeChar = endEscapeChar = data.escapeChar;\n        }\n\n        node.innerText = startEscapeChar + text + endEscapeChar;\n        node.dataset.varStartEscChar = startEscapeChar;\n        node.dataset.varEndEscChar = endEscapeChar;\n        node.dataset.varValue = data.value;\n        return node;\n      }\n    }, {\n      key: \"value\",\n      value: function value(node) {\n        return extend({}, {\n          value: node.dataset.varValue,\n          escapeChar: [node.dataset.varStartEscChar || \"\", node.dataset.varEndEscChar || \"\"]\n        });\n      }\n    }]);\n\n    return Variable;\n  }(Embed);\n\n  Variable.blotName = \"variable\";\n  Variable.tagName = \"span\";\n  Variable.className = VARIABLE_CLASS;\n}\n\nexport default Variable;","map":null,"metadata":{},"sourceType":"module"}