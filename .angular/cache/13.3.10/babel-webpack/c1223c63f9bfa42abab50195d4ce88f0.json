{"ast":null,"code":"/**\r\n * DevExtreme (esm/exporter/excel/excel.color_helper.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isDefined } from \"../../core/utils/type\";\nimport tagHelper from \"./excel.tag_helper\";\nvar colorHelper = {\n  _tryConvertColor: function _tryConvertColor(source) {\n    if (\"string\" !== typeof source) {\n      return source;\n    }\n\n    var result;\n\n    if (source.length > 0 && \"#\" === source[0]) {\n      var colorCode = source.substr(1, source.length);\n\n      if (6 === colorCode.length) {\n        result = \"FF\" + colorCode;\n      } else if (8 === colorCode.length) {\n        result = colorCode[6] + colorCode[7] + colorCode.substr(0, 6);\n      } else {\n        result = colorCode;\n      }\n    } else {\n      result = source;\n    }\n\n    return result;\n  },\n  tryCreateTag: function tryCreateTag(sourceObj) {\n    var result = null;\n\n    if (isDefined(sourceObj)) {\n      if (\"string\" === typeof sourceObj) {\n        result = {\n          rgb: this._tryConvertColor(sourceObj)\n        };\n      } else {\n        result = {\n          rgb: this._tryConvertColor(sourceObj.rgb),\n          theme: sourceObj.theme\n        };\n      }\n\n      if (colorHelper.isEmpty(result)) {\n        result = null;\n      }\n    }\n\n    return result;\n  },\n  copy: function copy(source) {\n    var result = null;\n\n    if (isDefined(source)) {\n      if (\"string\" === typeof source) {\n        result = source;\n      } else {\n        result = {};\n\n        if (void 0 !== source.rgb) {\n          result.rgb = source.rgb;\n        }\n\n        if (void 0 !== source.theme) {\n          result.theme = source.theme;\n        }\n      }\n    }\n\n    return result;\n  },\n  isEmpty: function isEmpty(tag) {\n    return !isDefined(tag) || !isDefined(tag.rgb) && !isDefined(tag.theme);\n  },\n  areEqual: function areEqual(leftTag, rightTag) {\n    return colorHelper.isEmpty(leftTag) && colorHelper.isEmpty(rightTag) || isDefined(leftTag) && isDefined(rightTag) && leftTag.rgb === rightTag.rgb && leftTag.theme === rightTag.theme;\n  },\n  toXml: function toXml(tagName, tag) {\n    return tagHelper.toXml(tagName, {\n      rgb: tag.rgb,\n      theme: tag.theme\n    });\n  }\n};\nexport default colorHelper;","map":null,"metadata":{},"sourceType":"module"}