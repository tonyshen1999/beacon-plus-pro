{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/tree_map/tracker.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport TreeMapBase from \"./tree_map.base\";\nimport { Tracker } from \"../components/tracker\";\nimport { expand } from \"../core/helpers\";\nimport { parseScalar as _parseScalar } from \"../core/utils\";\nvar DATA_KEY_BASE = \"__treemap_data_\";\nvar dataKeyModifier = 0;\nvar proto = TreeMapBase.prototype;\nimport \"./api\";\nimport \"./hover\";\nimport \"./tooltip\";\nproto._eventsMap.onClick = {\n  name: \"click\"\n};\n\nvar getDataKey = function getDataKey() {\n  var dataKey = DATA_KEY_BASE + dataKeyModifier++;\n  return dataKey;\n};\n\nexpand(proto, \"_initCore\", function () {\n  var that = this;\n  var dataKey = getDataKey();\n\n  var getProxy = function getProxy(index) {\n    return that._nodes[index].proxy;\n  };\n\n  that._tracker = new Tracker({\n    widget: that,\n    root: that._renderer.root,\n    getNode: function getNode(id) {\n      var proxy = getProxy(id);\n\n      var interactWithGroup = _parseScalar(that._getOption(\"interactWithGroup\", true));\n\n      return interactWithGroup && proxy.isLeaf() && proxy.getParent().isActive() ? proxy.getParent() : proxy;\n    },\n    getData: function getData(e) {\n      var target = e.target;\n      return (\"tspan\" === target.tagName ? target.parentNode : target)[dataKey];\n    },\n    getProxy: getProxy,\n    click: function click(e) {\n      that._eventTrigger(\"click\", e);\n    }\n  });\n\n  that._handlers.setTrackerData = function (node, element) {\n    element.data(dataKey, node._id);\n  };\n});\nexpand(proto, \"_disposeCore\", function () {\n  this._tracker.dispose();\n});","map":null,"metadata":{},"sourceType":"module"}