{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/renovation/ui/scheduler/appointment/overflow_indicator/layout.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"overflowIndicatorTemplate\", \"viewModel\"];\nimport { createComponentVNode, normalizeProps } from \"inferno\";\nimport { BaseInfernoComponent, normalizeStyles } from \"@devextreme/runtime/inferno\";\nimport { combineClasses } from \"../../../../utils/combine_classes\";\nimport { Button } from \"../../../button\";\nimport { getOverflowIndicatorStyles } from \"./utils\";\nimport messageLocalization from \"../../../../../localization/message\";\nexport var viewFunction = function viewFunction(_ref) {\n  var appointmentCount = _ref.appointmentCount,\n      classes = _ref.classes,\n      isCompact = _ref.isCompact,\n      OverflowIndicatorTemplate = _ref.props.overflowIndicatorTemplate,\n      styles = _ref.styles,\n      text = _ref.text;\n  return createComponentVNode(2, Button, {\n    text: text,\n    style: normalizeStyles(styles),\n    className: classes,\n    type: \"default\",\n    stylingMode: \"contained\",\n    children: OverflowIndicatorTemplate && OverflowIndicatorTemplate({\n      appointmentCount: appointmentCount,\n      isCompact: isCompact\n    })\n  });\n};\nexport var OverflowIndicatorProps = {};\n\nvar getTemplate = function getTemplate(TemplateProp) {\n  return TemplateProp && (TemplateProp.defaultProps ? function (props) {\n    return normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props)));\n  } : TemplateProp);\n};\n\nexport var OverflowIndicator = /*#__PURE__*/(function () {\n  var OverflowIndicator = /*#__PURE__*/function (_BaseInfernoComponent) {\n    _inherits(OverflowIndicator, _BaseInfernoComponent);\n\n    var _super = _createSuper(OverflowIndicator);\n\n    function OverflowIndicator(props) {\n      var _this;\n\n      _classCallCheck(this, OverflowIndicator);\n\n      _this = _super.call(this, props);\n      _this.state = {};\n      return _this;\n    }\n\n    _createClass(OverflowIndicator, [{\n      key: \"appointmentCount\",\n      get: function get() {\n        return this.props.viewModel.items.settings.length;\n      }\n    }, {\n      key: \"isCompact\",\n      get: function get() {\n        return this.props.viewModel.isCompact;\n      }\n    }, {\n      key: \"text\",\n      get: function get() {\n        var isCompact = this.props.viewModel.isCompact;\n\n        if (isCompact) {\n          return \"\".concat(this.appointmentCount);\n        }\n\n        var formatter = messageLocalization.getFormatter(\"dxScheduler-moreAppointments\");\n        return formatter(this.appointmentCount);\n      }\n    }, {\n      key: \"styles\",\n      get: function get() {\n        return getOverflowIndicatorStyles(this.props.viewModel);\n      }\n    }, {\n      key: \"classes\",\n      get: function get() {\n        return combineClasses({\n          \"dx-scheduler-appointment-collector\": true,\n          \"dx-scheduler-appointment-collector-compact\": this.isCompact\n        });\n      }\n    }, {\n      key: \"restAttributes\",\n      get: function get() {\n        var _this$props = this.props,\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n        return restProps;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this.props;\n        return viewFunction({\n          props: _extends({}, props, {\n            overflowIndicatorTemplate: getTemplate(props.overflowIndicatorTemplate)\n          }),\n          appointmentCount: this.appointmentCount,\n          isCompact: this.isCompact,\n          text: this.text,\n          styles: this.styles,\n          classes: this.classes,\n          restAttributes: this.restAttributes\n        });\n      }\n    }]);\n\n    return OverflowIndicator;\n  }(BaseInfernoComponent);\n\n  OverflowIndicator.defaultProps = OverflowIndicatorProps;\n  return OverflowIndicator;\n})();","map":null,"metadata":{},"sourceType":"module"}