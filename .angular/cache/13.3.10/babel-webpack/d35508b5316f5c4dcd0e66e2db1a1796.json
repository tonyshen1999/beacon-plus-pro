{"ast":null,"code":"import _toConsumableArray from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n\n/**\r\n * DevExtreme (esm/renovation/component_wrapper/utils/update_props_immutable.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { isPlainObject } from \"../../../core/utils/type\";\nimport { getPathParts } from \"../../../core/utils/data\";\n\nfunction cloneObjectValue(value) {\n  return Array.isArray(value) ? _toConsumableArray(value) : _extends({}, value);\n}\n\nfunction cloneObjectProp(value, prevValue, fullNameParts) {\n  var result = fullNameParts.length > 0 && prevValue && value !== prevValue ? cloneObjectValue(prevValue) : cloneObjectValue(value);\n  var name = fullNameParts[0];\n\n  if (fullNameParts.length > 1) {\n    result[name] = cloneObjectProp(value[name], null === prevValue || void 0 === prevValue ? void 0 : prevValue[name], fullNameParts.slice(1));\n  } else if (name) {\n    if (isPlainObject(value[name])) {\n      result[name] = cloneObjectValue(value[name]);\n    } else {\n      result[name] = value[name];\n    }\n  }\n\n  return result;\n}\n\nexport function updatePropsImmutable(props, option, name, fullName) {\n  var currentPropsValue = option[name];\n  var prevPropsValue = props[name];\n  var result = props;\n\n  if (isPlainObject(currentPropsValue) || name !== fullName && Array.isArray(currentPropsValue)) {\n    result[name] = cloneObjectProp(currentPropsValue, prevPropsValue, getPathParts(fullName).slice(1));\n  } else {\n    result[name] = currentPropsValue;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}