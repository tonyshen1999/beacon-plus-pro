{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _get from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\n\n/**\r\n * DevExtreme (esm/ui/html_editor/modules/variables.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Quill from \"devextreme-quill\";\nimport $ from \"../../../core/renderer\";\nimport { getBoundingRect } from \"../../../core/utils/position\";\nimport PopupModule from \"./popup\";\nimport BaseModule from \"./base\";\nimport Variable from \"../formats/variable\";\nimport { extend } from \"../../../core/utils/extend\";\nvar VariableModule = BaseModule;\n\nif (Quill) {\n  var VARIABLE_FORMAT_CLASS = \"dx-variable-format\";\n  var ACTIVE_FORMAT_CLASS = \"dx-format-active\";\n  Quill.register({\n    \"formats/variable\": Variable\n  }, true);\n\n  VariableModule = /*#__PURE__*/function (_PopupModule) {\n    _inherits(VariableModule, _PopupModule);\n\n    var _super = _createSuper(VariableModule);\n\n    function VariableModule(quill, options) {\n      var _this;\n\n      _classCallCheck(this, VariableModule);\n\n      _this = _super.call(this, quill, options);\n      var toolbar = quill.getModule(\"toolbar\");\n\n      if (toolbar) {\n        toolbar.addClickHandler(\"variable\", _this.showPopup.bind(_assertThisInitialized(_this)));\n      }\n\n      quill.keyboard.addBinding({\n        key: \"P\",\n        altKey: true\n      }, _this.showPopup.bind(_assertThisInitialized(_this)));\n\n      _this._popup.on(\"shown\", function (e) {\n        var $ofElement = $(e.component.option(\"position\").of);\n\n        if ($ofElement.hasClass(VARIABLE_FORMAT_CLASS)) {\n          $ofElement.addClass(ACTIVE_FORMAT_CLASS);\n        }\n      });\n\n      return _this;\n    }\n\n    _createClass(VariableModule, [{\n      key: \"_getDefaultOptions\",\n      value: function _getDefaultOptions() {\n        var baseConfig = _get(_getPrototypeOf(VariableModule.prototype), \"_getDefaultOptions\", this).call(this);\n\n        return extend(baseConfig, {\n          escapeChar: \"\"\n        });\n      }\n    }, {\n      key: \"showPopup\",\n      value: function showPopup(event) {\n        var selection = this.quill.getSelection(true);\n        var position = selection ? selection.index : this.quill.getLength();\n        this.savePosition(position);\n\n        this._resetPopupPosition(event, position);\n\n        _get(_getPrototypeOf(VariableModule.prototype), \"showPopup\", this).call(this);\n      }\n    }, {\n      key: \"_resetPopupPosition\",\n      value: function _resetPopupPosition(event, position) {\n        if (event && event.element) {\n          this._popup.option(\"position\", {\n            of: event.element,\n            offset: {\n              h: 0,\n              v: 0\n            },\n            my: \"top center\",\n            at: \"bottom center\",\n            collision: \"fit\"\n          });\n        } else {\n          var mentionBounds = this.quill.getBounds(position);\n          var rootRect = getBoundingRect(this.quill.root);\n\n          this._popup.option(\"position\", {\n            of: this.quill.root,\n            offset: {\n              h: mentionBounds.left,\n              v: mentionBounds.bottom - rootRect.height\n            },\n            my: \"top center\",\n            at: \"bottom left\",\n            collision: \"fit flip\"\n          });\n        }\n      }\n    }, {\n      key: \"insertEmbedContent\",\n      value: function insertEmbedContent(selectionChangedEvent) {\n        var caretPosition = this.getPosition();\n        var selectedItem = selectionChangedEvent.component.option(\"selectedItem\");\n        var variableData = extend({}, {\n          value: selectedItem,\n          escapeChar: this.options.escapeChar\n        });\n        setTimeout(function () {\n          this.quill.insertEmbed(caretPosition, \"variable\", variableData);\n          this.quill.setSelection(caretPosition + 1);\n        }.bind(this));\n      }\n    }]);\n\n    return VariableModule;\n  }(PopupModule);\n}\n\nexport default VariableModule;","map":null,"metadata":{},"sourceType":"module"}