{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/range_selector/slider.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { utils, formatValue } from \"./common\";\nvar animationSettings = utils.animationSettings;\nimport SliderMarker from \"./slider_marker\";\nimport { touchEvents, pointerEvents } from \"../../core/utils/support\";\nvar SPLITTER_WIDTH = 8;\nvar TOUCH_SPLITTER_WIDTH = 20;\n\nfunction getSliderTrackerWidth(sliderHandleWidth) {\n  return touchEvents || pointerEvents ? TOUCH_SPLITTER_WIDTH : SPLITTER_WIDTH < sliderHandleWidth ? sliderHandleWidth : SPLITTER_WIDTH;\n}\n\nfunction Slider(params, index) {\n  this._translator = params.translator;\n  this._sliderGroup = params.renderer.g().attr({\n    class: \"slider\"\n  }).append(params.root);\n  this._line = params.renderer.path(null, \"line\").append(this._sliderGroup);\n  this._marker = new SliderMarker(params.renderer, this._sliderGroup, 1 === index);\n  this._tracker = params.renderer.rect().attr({\n    class: \"slider-tracker\",\n    fill: \"#000000\",\n    opacity: 1e-4\n  }).css({\n    cursor: \"w-resize\"\n  }).append(params.trackersGroup);\n}\n\nSlider.prototype = {\n  constructor: Slider,\n  cancelAnimation: function cancelAnimation() {\n    this._sliderGroup.stopAnimation();\n\n    this._tracker.stopAnimation();\n  },\n  applyPosition: function applyPosition(isAnimated) {\n    var slider = this._sliderGroup;\n    var tracker = this._tracker;\n    var attrs = {\n      translateX: this._position\n    };\n\n    this._marker.setPosition(this._position);\n\n    if (isAnimated) {\n      slider.animate(attrs, animationSettings);\n      tracker.animate(attrs, animationSettings);\n    } else {\n      slider.attr(attrs);\n      tracker.attr(attrs);\n    }\n  },\n  _setValid: function _setValid(isValid) {\n    this._marker.setValid(isValid);\n\n    this._line.attr({\n      stroke: this._colors[Number(isValid)]\n    });\n  },\n  _setText: function _setText(text) {\n    this._marker.setText(text);\n  },\n  update: function update(verticalRange, sliderHandleOptions, sliderMarkerOptions) {\n    this._formatOptions = {\n      format: sliderMarkerOptions.format,\n      customizeText: sliderMarkerOptions.customizeText\n    };\n\n    this._marker.applyOptions(sliderMarkerOptions, this._translator.getScreenRange());\n\n    this._colors = [sliderMarkerOptions.invalidRangeColor, sliderHandleOptions.color];\n\n    this._sliderGroup.attr({\n      translateY: verticalRange[0]\n    });\n\n    this._line.attr({\n      \"stroke-width\": sliderHandleOptions.width,\n      stroke: sliderHandleOptions.color,\n      \"stroke-opacity\": sliderHandleOptions.opacity,\n      sharp: \"h\",\n      points: [0, 0, 0, verticalRange[1] - verticalRange[0]]\n    });\n\n    var trackerWidth = getSliderTrackerWidth(sliderHandleOptions.width);\n\n    this._tracker.attr({\n      x: -trackerWidth / 2,\n      y: 0,\n      width: trackerWidth,\n      height: verticalRange[1] - verticalRange[0],\n      translateY: verticalRange[0]\n    });\n  },\n  toForeground: function toForeground() {\n    this._sliderGroup.toForeground();\n  },\n  getSliderTracker: function getSliderTracker() {\n    return this._tracker;\n  },\n  getPosition: function getPosition() {\n    return this._position;\n  },\n  setDisplayValue: function setDisplayValue(value) {\n    this._value = value;\n\n    this._setText(formatValue(value, this._formatOptions));\n  },\n  setOverlapped: function setOverlapped(isOverlapped) {\n    this._marker.setOverlapped(isOverlapped);\n  },\n  getValue: function getValue() {\n    return this._value;\n  },\n  on: function on(event, handler) {\n    this._tracker.on(event, handler);\n\n    this._marker.getTracker().on(event, handler);\n  },\n  getCloudBorder: function getCloudBorder() {\n    return this._marker.getBorderPosition();\n  },\n  dispose: function dispose() {\n    this._marker.dispose();\n  }\n};\nexport default Slider;","map":null,"metadata":{},"sourceType":"module"}