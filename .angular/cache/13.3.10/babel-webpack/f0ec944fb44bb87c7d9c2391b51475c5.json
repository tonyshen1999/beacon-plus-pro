{"ast":null,"code":"import _defineProperty from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\n/**\r\n * DevExtreme (esm/ui/file_manager/ui.file_manager.common.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { when, Deferred } from \"../../core/utils/deferred\";\nimport { extend } from \"../../core/utils/extend\";\nimport { noop } from \"../../core/utils/common\";\nimport { isFunction, isDefined } from \"../../core/utils/type\";\nexport var whenSome = function whenSome(arg, onSuccess, onError) {\n  onSuccess = onSuccess || noop;\n  onError = onError || noop;\n\n  if (!Array.isArray(arg)) {\n    arg = [arg];\n  }\n\n  var deferreds = arg.map(function (item, index) {\n    return when(item).then(function (result) {\n      isFunction(onSuccess) && onSuccess({\n        item: item,\n        index: index,\n        result: result\n      });\n      return result;\n    }, function (error) {\n      if (!error) {\n        error = {};\n      }\n\n      error.index = index;\n      isFunction(onError) && onError(error);\n      return new Deferred().resolve().promise();\n    });\n  });\n  return when.apply(null, deferreds);\n};\nexport var getDisplayFileSize = function getDisplayFileSize(byteSize) {\n  var sizesTitles = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\"];\n  var index = 0;\n  var displaySize = byteSize;\n\n  while (displaySize >= 1024 && index <= sizesTitles.length - 1) {\n    displaySize /= 1024;\n    index++;\n  }\n\n  displaySize = Math.round(10 * displaySize) / 10;\n  return \"\".concat(displaySize, \" \").concat(sizesTitles[index]);\n};\nexport var extendAttributes = function extendAttributes(targetObject, sourceObject, objectKeysArray) {\n  objectKeysArray.forEach(function (objectKey) {\n    extend(true, targetObject, isDefined(sourceObject[objectKey]) ? _defineProperty({}, objectKey, sourceObject[objectKey]) : {});\n  });\n  return targetObject;\n};\nexport var findItemsByKeys = function findItemsByKeys(itemInfos, keys) {\n  var itemMap = {};\n  keys.forEach(function (key) {\n    itemMap[key] = null;\n  });\n  itemInfos.forEach(function (itemInfo) {\n    var key = itemInfo.fileItem.key;\n\n    if (Object.prototype.hasOwnProperty.call(itemMap, key)) {\n      itemMap[key] = itemInfo;\n    }\n  });\n  var result = [];\n  keys.forEach(function (key) {\n    var itemInfo = itemMap[key];\n\n    if (itemInfo) {\n      result.push(itemInfo);\n    }\n  });\n  return result;\n};\nexport var getMapFromObject = function getMapFromObject(object) {\n  var keys = Object.keys(object);\n  var values = [];\n  keys.forEach(function (key) {\n    return values.push(object[key]);\n  });\n  return {\n    keys: keys,\n    values: values\n  };\n};","map":null,"metadata":{},"sourceType":"module"}