{"ast":null,"code":"import _toConsumableArray from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n\n/**\r\n * DevExtreme (esm/data/utils.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isFunction } from \"../core/utils/type\";\nimport domAdapter from \"../core/dom_adapter\";\nimport readyCallbacks from \"../core/utils/ready_callbacks\";\nimport { getWindow } from \"../core/utils/window\";\nimport { map } from \"../core/utils/iterator\";\nimport { Deferred } from \"../core/utils/deferred\";\nimport { equalByValue } from \"../core/utils/common\";\nvar ready = readyCallbacks.add;\nexport var XHR_ERROR_UNLOAD = \"DEVEXTREME_XHR_ERROR_UNLOAD\";\nexport var normalizeBinaryCriterion = function normalizeBinaryCriterion(crit) {\n  return [crit[0], crit.length < 3 ? \"=\" : String(crit[1]).toLowerCase(), crit.length < 2 ? true : crit[crit.length - 1]];\n};\nexport var normalizeSortingInfo = function normalizeSortingInfo(info) {\n  if (!Array.isArray(info)) {\n    info = [info];\n  }\n\n  return map(info, function (i) {\n    var result = {\n      selector: isFunction(i) || \"string\" === typeof i ? i : i.getter || i.field || i.selector,\n      desc: !!(i.desc || \"d\" === String(i.dir).charAt(0).toLowerCase())\n    };\n\n    if (i.compare) {\n      result.compare = i.compare;\n    }\n\n    return result;\n  });\n};\nexport var errorMessageFromXhr = function () {\n  var textStatusMessages = {\n    timeout: \"Network connection timeout\",\n    error: \"Unspecified network error\",\n    parsererror: \"Unexpected server response\"\n  };\n  var unloading;\n  ready(function () {\n    var window = getWindow();\n    domAdapter.listen(window, \"beforeunload\", function () {\n      unloading = true;\n    });\n  });\n  return function (xhr, textStatus) {\n    if (unloading) {\n      return XHR_ERROR_UNLOAD;\n    }\n\n    if (xhr.status < 400) {\n      return function (textStatus) {\n        var result = textStatusMessages[textStatus];\n\n        if (!result) {\n          return textStatus;\n        }\n\n        return result;\n      }(textStatus);\n    }\n\n    return xhr.statusText;\n  };\n}();\nexport var aggregators = {\n  count: {\n    seed: 0,\n    step: function step(count) {\n      return 1 + count;\n    }\n  },\n  sum: {\n    seed: 0,\n    step: function step(sum, item) {\n      return sum + item;\n    }\n  },\n  min: {\n    step: function step(min, item) {\n      return item < min ? item : min;\n    }\n  },\n  max: {\n    step: function step(max, item) {\n      return item > max ? item : max;\n    }\n  },\n  avg: {\n    seed: [0, 0],\n    step: function step(pair, value) {\n      return [pair[0] + value, pair[1] + 1];\n    },\n    finalize: function finalize(pair) {\n      return pair[1] ? pair[0] / pair[1] : NaN;\n    }\n  }\n};\nexport var processRequestResultLock = function () {\n  var lockCount = 0;\n  var lockDeferred;\n  return {\n    obtain: function obtain() {\n      if (0 === lockCount) {\n        lockDeferred = new Deferred();\n      }\n\n      lockCount++;\n    },\n    release: function release() {\n      lockCount--;\n\n      if (lockCount < 1) {\n        lockDeferred.resolve();\n      }\n    },\n    promise: function promise() {\n      var deferred = 0 === lockCount ? new Deferred().resolve() : lockDeferred;\n      return deferred.promise();\n    },\n    reset: function reset() {\n      lockCount = 0;\n\n      if (lockDeferred) {\n        lockDeferred.resolve();\n      }\n    }\n  };\n}();\nexport function isDisjunctiveOperator(condition) {\n  return /^(or|\\|\\||\\|)$/i.test(condition);\n}\nexport function isConjunctiveOperator(condition) {\n  return /^(and|&&|&)$/i.test(condition);\n}\nexport var keysEqual = function keysEqual(keyExpr, key1, key2) {\n  if (Array.isArray(keyExpr)) {\n    var names = map(key1, function (v, k) {\n      return k;\n    });\n    var name;\n\n    for (var i = 0; i < names.length; i++) {\n      name = names[i];\n\n      if (!equalByValue(key1[name], key2[name], 0, false)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return equalByValue(key1, key2, 0, false);\n};\nvar BASE64_CHARS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nexport var base64_encode = function base64_encode(input) {\n  if (!Array.isArray(input)) {\n    input = stringToByteArray(String(input));\n  }\n\n  var result = \"\";\n\n  function getBase64Char(index) {\n    return BASE64_CHARS.charAt(index);\n  }\n\n  for (var i = 0; i < input.length; i += 3) {\n    var octet1 = input[i];\n    var octet2 = input[i + 1];\n    var octet3 = input[i + 2];\n    result += map([octet1 >> 2, (3 & octet1) << 4 | octet2 >> 4, isNaN(octet2) ? 64 : (15 & octet2) << 2 | octet3 >> 6, isNaN(octet3) ? 64 : 63 & octet3], getBase64Char).join(\"\");\n  }\n\n  return result;\n};\n\nfunction stringToByteArray(str) {\n  var bytes = [];\n  var code;\n  var i;\n\n  for (i = 0; i < str.length; i++) {\n    code = str.charCodeAt(i);\n\n    if (code < 128) {\n      bytes.push(code);\n    } else if (code < 2048) {\n      bytes.push(192 + (code >> 6), 128 + (63 & code));\n    } else if (code < 65536) {\n      bytes.push(224 + (code >> 12), 128 + (code >> 6 & 63), 128 + (63 & code));\n    } else if (code < 2097152) {\n      bytes.push(240 + (code >> 18), 128 + (code >> 12 & 63), 128 + (code >> 6 & 63), 128 + (63 & code));\n    }\n  }\n\n  return bytes;\n}\n\nexport var isUnaryOperation = function isUnaryOperation(crit) {\n  return \"!\" === crit[0] && Array.isArray(crit[1]);\n};\n\nvar isGroupOperator = function isGroupOperator(value) {\n  return \"and\" === value || \"or\" === value;\n};\n\nexport var isGroupCriterion = function isGroupCriterion(crit) {\n  var first = crit[0];\n  var second = crit[1];\n\n  if (Array.isArray(first)) {\n    return true;\n  }\n\n  if (isFunction(first)) {\n    if (Array.isArray(second) || isFunction(second) || isGroupOperator(second)) {\n      return true;\n    }\n  }\n\n  return false;\n};\nexport var trivialPromise = function trivialPromise() {\n  var d = new Deferred();\n  return d.resolve.apply(d, arguments).promise();\n};\nexport var rejectedPromise = function rejectedPromise() {\n  var d = new Deferred();\n  return d.reject.apply(d, arguments).promise();\n};\n\nfunction throttle(func, timeout) {\n  var timeoutId;\n  var lastArgs;\n  return function () {\n    var _this = this;\n\n    lastArgs = arguments;\n\n    if (!timeoutId) {\n      timeoutId = setTimeout(function () {\n        timeoutId = void 0;\n\n        if (lastArgs) {\n          func.call(_this, lastArgs);\n        }\n      }, isFunction(timeout) ? timeout() : timeout);\n    }\n\n    return timeoutId;\n  };\n}\n\nexport function throttleChanges(func, timeout) {\n  var cache = [];\n  var throttled = throttle(function () {\n    func.call(this, cache);\n    cache = [];\n  }, timeout);\n  return function (changes) {\n    if (Array.isArray(changes)) {\n      var _cache;\n\n      (_cache = cache).push.apply(_cache, _toConsumableArray(changes));\n    }\n\n    return throttled.call(this, cache);\n  };\n}","map":null,"metadata":{},"sourceType":"module"}