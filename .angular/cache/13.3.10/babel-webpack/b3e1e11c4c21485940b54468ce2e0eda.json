{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/series/points/stock_point.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { extend } from \"../../../core/utils/extend\";\nimport { isNumeric } from \"../../../core/utils/type\";\nimport candlestickPoint from \"./candlestick_point\";\nvar _extend = extend;\nvar _isNumeric = isNumeric;\nexport default _extend({}, candlestickPoint, {\n  _getPoints: function _getPoints() {\n    var createPoint = this._options.rotated ? function (x, y) {\n      return [y, x];\n    } : function (x, y) {\n      return [x, y];\n    };\n\n    var openYExist = _isNumeric(this.openY);\n\n    var closeYExist = _isNumeric(this.closeY);\n\n    var x = this.x;\n    var width = this.width;\n    var points = [].concat(createPoint(x, this.highY));\n    openYExist && (points = points.concat(createPoint(x, this.openY)));\n    openYExist && (points = points.concat(createPoint(x - width / 2, this.openY)));\n    openYExist && (points = points.concat(createPoint(x, this.openY)));\n    closeYExist && (points = points.concat(createPoint(x, this.closeY)));\n    closeYExist && (points = points.concat(createPoint(x + width / 2, this.closeY)));\n    closeYExist && (points = points.concat(createPoint(x, this.closeY)));\n    points = points.concat(createPoint(x, this.lowY));\n    return points;\n  },\n  _drawMarkerInGroup: function _drawMarkerInGroup(group, attributes, renderer) {\n    this.graphic = renderer.path(this._getPoints(), \"line\").attr({\n      \"stroke-linecap\": \"square\"\n    }).attr(attributes).data({\n      \"chart-data-point\": this\n    }).sharp().append(group);\n  },\n  _getMinTrackerWidth: function _getMinTrackerWidth() {\n    var width = 2 + this._styles.normal[\"stroke-width\"];\n    return width + width % 2;\n  }\n});","map":null,"metadata":{},"sourceType":"module"}