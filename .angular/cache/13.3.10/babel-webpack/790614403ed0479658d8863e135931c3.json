{"ast":null,"code":"/**\r\n * DevExtreme (esm/events/double_click.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport eventsEngine from \"../events/core/events_engine\";\nimport { closestCommonParent } from \"../core/utils/dom\";\nimport domAdapter from \"../core/dom_adapter\";\nimport Class from \"../core/class\";\nimport registerEvent from \"./core/event_registrator\";\nimport { name as clickEventName } from \"./click\";\nimport { addNamespace, fireEvent } from \"./utils/index\";\nvar DBLCLICK_EVENT_NAME = \"dxdblclick\";\nvar DBLCLICK_NAMESPACE = \"dxDblClick\";\nvar NAMESPACED_CLICK_EVENT = addNamespace(clickEventName, DBLCLICK_NAMESPACE);\nvar DBLCLICK_TIMEOUT = 300;\nvar DblClick = Class.inherit({\n  ctor: function ctor() {\n    this._handlerCount = 0;\n\n    this._forgetLastClick();\n  },\n  _forgetLastClick: function _forgetLastClick() {\n    this._firstClickTarget = null;\n    this._lastClickTimeStamp = -DBLCLICK_TIMEOUT;\n  },\n  add: function add() {\n    if (this._handlerCount <= 0) {\n      eventsEngine.on(domAdapter.getDocument(), NAMESPACED_CLICK_EVENT, this._clickHandler.bind(this));\n    }\n\n    this._handlerCount++;\n  },\n  _clickHandler: function _clickHandler(e) {\n    var timeStamp = e.timeStamp || Date.now();\n    var timeBetweenClicks = timeStamp - this._lastClickTimeStamp;\n    var isSimulated = timeBetweenClicks < 0;\n    var isDouble = !isSimulated && timeBetweenClicks < DBLCLICK_TIMEOUT;\n\n    if (isDouble) {\n      fireEvent({\n        type: DBLCLICK_EVENT_NAME,\n        target: closestCommonParent(this._firstClickTarget, e.target),\n        originalEvent: e\n      });\n\n      this._forgetLastClick();\n    } else {\n      this._firstClickTarget = e.target;\n      this._lastClickTimeStamp = timeStamp;\n    }\n  },\n  remove: function remove() {\n    this._handlerCount--;\n\n    if (this._handlerCount <= 0) {\n      this._forgetLastClick();\n\n      eventsEngine.off(domAdapter.getDocument(), NAMESPACED_CLICK_EVENT);\n    }\n  }\n});\nregisterEvent(DBLCLICK_EVENT_NAME, new DblClick());\nexport { DBLCLICK_EVENT_NAME as name };","map":null,"metadata":{},"sourceType":"module"}