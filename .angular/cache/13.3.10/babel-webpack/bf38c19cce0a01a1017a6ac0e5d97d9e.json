{"ast":null,"code":"import _toConsumableArray from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/group_panel/horizontal/layout.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"className\", \"elementRef\", \"groupByDate\", \"groupPanelData\", \"height\", \"resourceCellTemplate\", \"styles\"];\nimport { createFragment, createComponentVNode, normalizeProps } from \"inferno\";\nimport { Fragment } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { Row } from \"./row\";\nimport { GroupPanelLayoutProps } from \"../group_panel_layout_props\";\nexport var viewFunction = function viewFunction(_ref) {\n  var groupPanelItems = _ref.groupPanelItems,\n      resourceCellTemplate = _ref.props.resourceCellTemplate;\n  return createFragment(groupPanelItems.map(function (group) {\n    return createComponentVNode(2, Row, {\n      groupItems: group,\n      cellTemplate: resourceCellTemplate\n    }, group[0].key);\n  }), 0);\n};\nexport var HorizontalGroupPanelLayoutProps = GroupPanelLayoutProps;\n\nvar getTemplate = function getTemplate(TemplateProp) {\n  return TemplateProp && (TemplateProp.defaultProps ? function (props) {\n    return normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props)));\n  } : TemplateProp);\n};\n\nexport var GroupPanelHorizontalLayout = /*#__PURE__*/(function () {\n  var GroupPanelHorizontalLayout = /*#__PURE__*/function (_BaseInfernoComponent) {\n    _inherits(GroupPanelHorizontalLayout, _BaseInfernoComponent);\n\n    var _super = _createSuper(GroupPanelHorizontalLayout);\n\n    function GroupPanelHorizontalLayout(props) {\n      var _this;\n\n      _classCallCheck(this, GroupPanelHorizontalLayout);\n\n      _this = _super.call(this, props);\n      _this.state = {};\n      _this.__getterCache = {};\n      return _this;\n    }\n\n    _createClass(GroupPanelHorizontalLayout, [{\n      key: \"groupPanelItems\",\n      get: function get() {\n        var _this2 = this;\n\n        if (void 0 !== this.__getterCache.groupPanelItems) {\n          return this.__getterCache.groupPanelItems;\n        }\n\n        return this.__getterCache.groupPanelItems = function () {\n          var groupPanelData = _this2.props.groupPanelData;\n          var baseColSpan = groupPanelData.baseColSpan,\n              groupPanelItems = groupPanelData.groupPanelItems;\n          var colSpans = groupPanelItems.reduceRight(function (currentColSpans, groupsRow, index) {\n            var nextColSpans = currentColSpans;\n            var currentLevelGroupCount = groupsRow.length;\n            var previousColSpan = index === groupPanelItems.length - 1 ? baseColSpan : currentColSpans[index + 1];\n            var previousLevelGroupCount = index === groupPanelItems.length - 1 ? currentLevelGroupCount : groupPanelItems[index + 1].length;\n            var groupCountDiff = previousLevelGroupCount / currentLevelGroupCount;\n            nextColSpans[index] = groupCountDiff * previousColSpan;\n            return nextColSpans;\n          }, _toConsumableArray(new Array(groupPanelItems.length)));\n          return groupPanelItems.map(function (groupsRenderRow, index) {\n            var colSpan = colSpans[index];\n            return groupsRenderRow.map(function (groupItem) {\n              return _extends({}, groupItem, {\n                colSpan: colSpan\n              });\n            });\n          });\n        }();\n      }\n    }, {\n      key: \"restAttributes\",\n      get: function get() {\n        var _this$props = this.props,\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n        return restProps;\n      }\n    }, {\n      key: \"componentWillUpdate\",\n      value: function componentWillUpdate(nextProps, nextState, context) {\n        if (this.props.groupPanelData !== nextProps.groupPanelData) {\n          this.__getterCache.groupPanelItems = void 0;\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this.props;\n        return viewFunction({\n          props: _extends({}, props, {\n            resourceCellTemplate: getTemplate(props.resourceCellTemplate)\n          }),\n          groupPanelItems: this.groupPanelItems,\n          restAttributes: this.restAttributes\n        });\n      }\n    }]);\n\n    return GroupPanelHorizontalLayout;\n  }(BaseInfernoComponent);\n\n  GroupPanelHorizontalLayout.defaultProps = HorizontalGroupPanelLayoutProps;\n  return GroupPanelHorizontalLayout;\n})();","map":null,"metadata":{},"sourceType":"module"}