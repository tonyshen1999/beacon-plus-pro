{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/tree_map/tooltip.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { expand } from \"../core/helpers\";\nimport TreeMapBase from \"./tree_map.base\";\nvar proto = TreeMapBase.prototype;\nimport \"./api\";\nexpand(proto, \"_extendProxyType\", function (proto) {\n  var that = this;\n\n  proto.showTooltip = function (coords) {\n    that._showTooltip(this._id, coords);\n  };\n});\nexpand(proto, \"_onNodesCreated\", function () {\n  if (this._tooltipIndex >= 0) {\n    this._tooltip.hide();\n  }\n\n  this._tooltipIndex = -1;\n});\nexpand(proto, \"_onTilingPerformed\", function () {\n  if (this._tooltipIndex >= 0) {\n    this._moveTooltip(this._nodes[this._tooltipIndex]);\n  }\n});\n\nfunction getCoords(coords, rect, renderer) {\n  var offset = renderer.getRootOffset();\n  return coords || rect && [(rect[0] + rect[2]) / 2 + offset.left, (rect[1] + rect[3]) / 2 + offset.top] || [-1e3, -1e3];\n}\n\nproto._showTooltip = function (index, coords) {\n  var that = this;\n  var tooltip = that._tooltip;\n  var node = that._nodes[index];\n\n  if (that._tooltipIndex === index) {\n    that._moveTooltip(node, coords);\n\n    return;\n  }\n\n  var callback = function callback(result) {\n    if (void 0 === result) {\n      return;\n    }\n\n    if (!result) {\n      tooltip.hide();\n    }\n\n    that._tooltipIndex = result ? index : -1;\n  };\n\n  var xy = getCoords(coords, node.rect, this._renderer);\n  callback(tooltip.show({\n    value: node.value,\n    valueText: tooltip.formatValue(node.value),\n    node: node.proxy\n  }, {\n    x: xy[0],\n    y: xy[1],\n    offset: 0\n  }, {\n    node: node.proxy\n  }, void 0, callback));\n};\n\nproto._moveTooltip = function (node, coords) {\n  var xy = getCoords(coords, node.rect, this._renderer);\n\n  this._tooltip.move(xy[0], xy[1], 0);\n};\n\nproto.hideTooltip = function () {\n  if (this._tooltipIndex >= 0) {\n    this._tooltipIndex = -1;\n\n    this._tooltip.hide();\n  }\n};\n\nimport { plugin as tooltipPlugin } from \"../core/tooltip\";\nTreeMapBase.addPlugin(tooltipPlugin);","map":null,"metadata":{},"sourceType":"module"}