{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, Component, NgModule } from '@angular/core';\nimport DxBullet from 'devextreme/viz/bullet';\nimport { DxComponent, DxTemplateHost, WatcherHelper, NestedOptionHost, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxoMarginModule, DxoSizeModule, DxoTooltipModule, DxoBorderModule, DxoFontModule, DxoFormatModule, DxoShadowModule } from 'devextreme-angular/ui/nested';\n/*!\r\n * devextreme-angular\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\n\n/**\r\n * The Bullet UI component is useful when you need to compare a single measure to a target value. The UI component comprises a horizontal bar indicating the measure and a vertical line indicating the target value.\r\n\r\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'devextreme-angular/core';\nimport * as ɵngcc2 from '@angular/platform-browser';\nvar DxBulletComponent = /*#__PURE__*/(function () {\n  var DxBulletComponent = /*#__PURE__*/function (_DxComponent) {\n    _inherits(DxBulletComponent, _DxComponent);\n\n    var _super = _createSuper(DxBulletComponent);\n\n    function DxBulletComponent(elementRef, ngZone, templateHost, _watcherHelper, optionHost, transferState, platformId) {\n      var _this;\n\n      _classCallCheck(this, DxBulletComponent);\n\n      _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\n\n      _this._createEventEmitters([{\n        subscribe: 'disposing',\n        emit: 'onDisposing'\n      }, {\n        subscribe: 'drawn',\n        emit: 'onDrawn'\n      }, {\n        subscribe: 'exported',\n        emit: 'onExported'\n      }, {\n        subscribe: 'exporting',\n        emit: 'onExporting'\n      }, {\n        subscribe: 'fileSaving',\n        emit: 'onFileSaving'\n      }, {\n        subscribe: 'incidentOccurred',\n        emit: 'onIncidentOccurred'\n      }, {\n        subscribe: 'initialized',\n        emit: 'onInitialized'\n      }, {\n        subscribe: 'optionChanged',\n        emit: 'onOptionChanged'\n      }, {\n        subscribe: 'tooltipHidden',\n        emit: 'onTooltipHidden'\n      }, {\n        subscribe: 'tooltipShown',\n        emit: 'onTooltipShown'\n      }, {\n        emit: 'colorChange'\n      }, {\n        emit: 'disabledChange'\n      }, {\n        emit: 'elementAttrChange'\n      }, {\n        emit: 'endScaleValueChange'\n      }, {\n        emit: 'marginChange'\n      }, {\n        emit: 'pathModifiedChange'\n      }, {\n        emit: 'rtlEnabledChange'\n      }, {\n        emit: 'showTargetChange'\n      }, {\n        emit: 'showZeroLevelChange'\n      }, {\n        emit: 'sizeChange'\n      }, {\n        emit: 'startScaleValueChange'\n      }, {\n        emit: 'targetChange'\n      }, {\n        emit: 'targetColorChange'\n      }, {\n        emit: 'targetWidthChange'\n      }, {\n        emit: 'themeChange'\n      }, {\n        emit: 'tooltipChange'\n      }, {\n        emit: 'valueChange'\n      }]);\n\n      optionHost.setHost(_assertThisInitialized(_this));\n      return _this;\n    }\n    /**\r\n     * Specifies a color for the bullet bar.\r\n    \r\n     */\n\n\n    _createClass(DxBulletComponent, [{\n      key: \"color\",\n      get: function get() {\n        return this._getOption('color');\n      },\n      set: function set(value) {\n        this._setOption('color', value);\n      }\n      /**\r\n       * Specifies whether the UI component responds to user interaction.\r\n      \r\n       */\n\n    }, {\n      key: \"disabled\",\n      get: function get() {\n        return this._getOption('disabled');\n      },\n      set: function set(value) {\n        this._setOption('disabled', value);\n      }\n      /**\r\n       * Specifies the global attributes to be attached to the UI component&apos;s container element.\r\n      \r\n       */\n\n    }, {\n      key: \"elementAttr\",\n      get: function get() {\n        return this._getOption('elementAttr');\n      },\n      set: function set(value) {\n        this._setOption('elementAttr', value);\n      }\n      /**\r\n       * Specifies an end value for the invisible scale.\r\n      \r\n       */\n\n    }, {\n      key: \"endScaleValue\",\n      get: function get() {\n        return this._getOption('endScaleValue');\n      },\n      set: function set(value) {\n        this._setOption('endScaleValue', value);\n      }\n      /**\r\n       * Generates space around the UI component.\r\n      \r\n       */\n\n    }, {\n      key: \"margin\",\n      get: function get() {\n        return this._getOption('margin');\n      },\n      set: function set(value) {\n        this._setOption('margin', value);\n      }\n      /**\r\n       * Notifies the UI component that it is embedded into an HTML page that uses a tag modifying the path.\r\n      \r\n       */\n\n    }, {\n      key: \"pathModified\",\n      get: function get() {\n        return this._getOption('pathModified');\n      },\n      set: function set(value) {\n        this._setOption('pathModified', value);\n      }\n      /**\r\n       * Switches the UI component to a right-to-left representation.\r\n      \r\n       */\n\n    }, {\n      key: \"rtlEnabled\",\n      get: function get() {\n        return this._getOption('rtlEnabled');\n      },\n      set: function set(value) {\n        this._setOption('rtlEnabled', value);\n      }\n      /**\r\n       * Specifies whether or not to show the target line.\r\n      \r\n       */\n\n    }, {\n      key: \"showTarget\",\n      get: function get() {\n        return this._getOption('showTarget');\n      },\n      set: function set(value) {\n        this._setOption('showTarget', value);\n      }\n      /**\r\n       * Specifies whether or not to show the line indicating zero on the invisible scale.\r\n      \r\n       */\n\n    }, {\n      key: \"showZeroLevel\",\n      get: function get() {\n        return this._getOption('showZeroLevel');\n      },\n      set: function set(value) {\n        this._setOption('showZeroLevel', value);\n      }\n      /**\r\n       * Specifies the UI component&apos;s size in pixels.\r\n      \r\n       */\n\n    }, {\n      key: \"size\",\n      get: function get() {\n        return this._getOption('size');\n      },\n      set: function set(value) {\n        this._setOption('size', value);\n      }\n      /**\r\n       * Specifies a start value for the invisible scale.\r\n      \r\n       */\n\n    }, {\n      key: \"startScaleValue\",\n      get: function get() {\n        return this._getOption('startScaleValue');\n      },\n      set: function set(value) {\n        this._setOption('startScaleValue', value);\n      }\n      /**\r\n       * Specifies the value indicated by the target line.\r\n      \r\n       */\n\n    }, {\n      key: \"target\",\n      get: function get() {\n        return this._getOption('target');\n      },\n      set: function set(value) {\n        this._setOption('target', value);\n      }\n      /**\r\n       * Specifies a color for both the target and zero level lines.\r\n      \r\n       */\n\n    }, {\n      key: \"targetColor\",\n      get: function get() {\n        return this._getOption('targetColor');\n      },\n      set: function set(value) {\n        this._setOption('targetColor', value);\n      }\n      /**\r\n       * Specifies the width of the target line.\r\n      \r\n       */\n\n    }, {\n      key: \"targetWidth\",\n      get: function get() {\n        return this._getOption('targetWidth');\n      },\n      set: function set(value) {\n        this._setOption('targetWidth', value);\n      }\n      /**\r\n       * Sets the name of the theme the UI component uses.\r\n      \r\n       */\n\n    }, {\n      key: \"theme\",\n      get: function get() {\n        return this._getOption('theme');\n      },\n      set: function set(value) {\n        this._setOption('theme', value);\n      }\n      /**\r\n       * Configures the tooltip.\r\n      \r\n       */\n\n    }, {\n      key: \"tooltip\",\n      get: function get() {\n        return this._getOption('tooltip');\n      },\n      set: function set(value) {\n        this._setOption('tooltip', value);\n      }\n      /**\r\n       * Specifies the primary value indicated by the bullet bar.\r\n      \r\n       */\n\n    }, {\n      key: \"value\",\n      get: function get() {\n        return this._getOption('value');\n      },\n      set: function set(value) {\n        this._setOption('value', value);\n      }\n    }, {\n      key: \"_createInstance\",\n      value: function _createInstance(element, options) {\n        return new DxBullet(element, options);\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._destroyWidget();\n      }\n    }]);\n\n    return DxBulletComponent;\n  }(DxComponent);\n\n  DxBulletComponent.ɵfac = function DxBulletComponent_Factory(t) {\n    return new (t || DxBulletComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.WatcherHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TransferState), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n\n  DxBulletComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DxBulletComponent,\n    selectors: [[\"dx-bullet\"]],\n    inputs: {\n      color: \"color\",\n      disabled: \"disabled\",\n      elementAttr: \"elementAttr\",\n      endScaleValue: \"endScaleValue\",\n      margin: \"margin\",\n      pathModified: \"pathModified\",\n      rtlEnabled: \"rtlEnabled\",\n      showTarget: \"showTarget\",\n      showZeroLevel: \"showZeroLevel\",\n      size: \"size\",\n      startScaleValue: \"startScaleValue\",\n      target: \"target\",\n      targetColor: \"targetColor\",\n      targetWidth: \"targetWidth\",\n      theme: \"theme\",\n      tooltip: \"tooltip\",\n      value: \"value\"\n    },\n    outputs: {\n      onDisposing: \"onDisposing\",\n      onDrawn: \"onDrawn\",\n      onExported: \"onExported\",\n      onExporting: \"onExporting\",\n      onFileSaving: \"onFileSaving\",\n      onIncidentOccurred: \"onIncidentOccurred\",\n      onInitialized: \"onInitialized\",\n      onOptionChanged: \"onOptionChanged\",\n      onTooltipHidden: \"onTooltipHidden\",\n      onTooltipShown: \"onTooltipShown\",\n      colorChange: \"colorChange\",\n      disabledChange: \"disabledChange\",\n      elementAttrChange: \"elementAttrChange\",\n      endScaleValueChange: \"endScaleValueChange\",\n      marginChange: \"marginChange\",\n      pathModifiedChange: \"pathModifiedChange\",\n      rtlEnabledChange: \"rtlEnabledChange\",\n      showTargetChange: \"showTargetChange\",\n      showZeroLevelChange: \"showZeroLevelChange\",\n      sizeChange: \"sizeChange\",\n      startScaleValueChange: \"startScaleValueChange\",\n      targetChange: \"targetChange\",\n      targetColorChange: \"targetColorChange\",\n      targetWidthChange: \"targetWidthChange\",\n      themeChange: \"themeChange\",\n      tooltipChange: \"tooltipChange\",\n      valueChange: \"valueChange\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([DxTemplateHost, WatcherHelper, NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 0,\n    vars: 0,\n    template: function DxBulletComponent_Template(rf, ctx) {},\n    styles: [\"[_nghost-%COMP%] {  display: block; }\"]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxBulletComponent.prototype, \"color\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxBulletComponent.prototype, \"disabled\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxBulletComponent.prototype, \"elementAttr\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], DxBulletComponent.prototype, \"endScaleValue\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxBulletComponent.prototype, \"margin\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxBulletComponent.prototype, \"pathModified\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxBulletComponent.prototype, \"rtlEnabled\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxBulletComponent.prototype, \"showTarget\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxBulletComponent.prototype, \"showZeroLevel\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxBulletComponent.prototype, \"size\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], DxBulletComponent.prototype, \"startScaleValue\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], DxBulletComponent.prototype, \"target\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxBulletComponent.prototype, \"targetColor\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], DxBulletComponent.prototype, \"targetWidth\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxBulletComponent.prototype, \"theme\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxBulletComponent.prototype, \"tooltip\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], DxBulletComponent.prototype, \"value\", null);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"onDisposing\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"onDrawn\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"onExported\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"onExporting\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"onFileSaving\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"onIncidentOccurred\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"onInitialized\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"onOptionChanged\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"onTooltipHidden\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"onTooltipShown\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"colorChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"disabledChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"elementAttrChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"endScaleValueChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"marginChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"pathModifiedChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"rtlEnabledChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"showTargetChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"showZeroLevelChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"sizeChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"startScaleValueChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"targetChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"targetColorChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"targetWidthChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"themeChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"tooltipChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxBulletComponent.prototype, \"valueChange\", void 0);\n\n  DxBulletComponent = __decorate([__param(6, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost, WatcherHelper, NestedOptionHost, TransferState, Object])], DxBulletComponent);\n  return DxBulletComponent;\n})();\nvar DxBulletModule = /*#__PURE__*/(function () {\n  var DxBulletModule = /*#__PURE__*/_createClass(function DxBulletModule() {\n    _classCallCheck(this, DxBulletModule);\n  });\n\n  DxBulletModule.ɵfac = function DxBulletModule_Factory(t) {\n    return new (t || DxBulletModule)();\n  };\n\n  DxBulletModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DxBulletModule\n  });\n  DxBulletModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[DxoMarginModule, DxoSizeModule, DxoTooltipModule, DxoBorderModule, DxoFontModule, DxoFormatModule, DxoShadowModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule], DxoMarginModule, DxoSizeModule, DxoTooltipModule, DxoBorderModule, DxoFontModule, DxoFormatModule, DxoShadowModule, DxTemplateModule]\n  });\n  return DxBulletModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxBulletModule, {\n    declarations: function declarations() {\n      return [DxBulletComponent];\n    },\n    imports: function imports() {\n      return [DxoMarginModule, DxoSizeModule, DxoTooltipModule, DxoBorderModule, DxoFontModule, DxoFormatModule, DxoShadowModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule];\n    },\n    exports: function exports() {\n      return [DxBulletComponent, DxoMarginModule, DxoSizeModule, DxoTooltipModule, DxoBorderModule, DxoFontModule, DxoFormatModule, DxoShadowModule, DxTemplateModule];\n    }\n  });\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { DxBulletComponent, DxBulletModule }; //# sourceMappingURL=devextreme-angular-ui-bullet.js.map","map":null,"metadata":{},"sourceType":"module"}