{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/gauges/linear_range_container.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport BaseRangeContainer from \"./base_range_container\";\nvar _Number = Number;\nvar _max = Math.max;\nimport { normalizeEnum as _normalizeEnum } from \"../core/utils\";\nvar LinearRangeContainer = BaseRangeContainer.inherit({\n  _processOptions: function _processOptions() {\n    this.vertical = this._options.vertical;\n    this._inner = this._outer = 0;\n\n    if (this.vertical) {\n      switch (_normalizeEnum(this._options.horizontalOrientation)) {\n        case \"left\":\n          this._inner = 1;\n          break;\n\n        case \"center\":\n          this._inner = this._outer = .5;\n          break;\n\n        default:\n          this._outer = 1;\n      }\n    } else {\n      switch (_normalizeEnum(this._options.verticalOrientation)) {\n        case \"top\":\n          this._inner = 1;\n          break;\n\n        case \"center\":\n          this._inner = this._outer = .5;\n          break;\n\n        default:\n          this._outer = 1;\n      }\n    }\n  },\n  _isVisible: function _isVisible() {\n    return true;\n  },\n  _createRange: function _createRange(range, layout) {\n    var inner = this._inner;\n    var outer = this._outer;\n\n    var startPosition = this._translator.translate(range.start);\n\n    var endPosition = this._translator.translate(range.end);\n\n    var points;\n    var x = layout.x;\n    var y = layout.y;\n    var startWidth = range.startWidth;\n    var endWidth = range.endWidth;\n\n    if (this.vertical) {\n      points = [x - startWidth * inner, startPosition, x - endWidth * inner, endPosition, x + endWidth * outer, endPosition, x + startWidth * outer, startPosition];\n    } else {\n      points = [startPosition, y + startWidth * outer, startPosition, y - startWidth * inner, endPosition, y - endWidth * inner, endPosition, y + endWidth * outer];\n    }\n\n    return this._renderer.path(points, \"area\");\n  },\n  measure: function measure(layout) {\n    var result = {};\n    var width;\n    result.min = result.max = layout[this.vertical ? \"x\" : \"y\"];\n    width = this._options.width;\n    width = _Number(width) || _max(_Number(width.start), _Number(width.end));\n    result.min -= this._inner * width;\n    result.max += this._outer * width;\n    return result;\n  }\n});\nexport default LinearRangeContainer;","map":null,"metadata":{},"sourceType":"module"}