{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/tree_view/ui.tree_view.search.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport registerComponent from \"../../core/component_registrator\";\nimport searchBoxMixin from \"../widget/ui.search_box_mixin\";\nimport TextBox from \"../text_box\";\nimport { extend } from \"../../core/utils/extend\";\nimport TreeViewBase from \"./ui.tree_view.base\";\nsearchBoxMixin.setEditorClass(TextBox);\nvar WIDGET_CLASS = \"dx-treeview\";\nvar NODE_CONTAINER_CLASS = \"\".concat(WIDGET_CLASS, \"-node-container\");\nvar TreeViewSearch = TreeViewBase.inherit(searchBoxMixin).inherit({\n  _addWidgetPrefix: function _addWidgetPrefix(className) {\n    return \"\".concat(WIDGET_CLASS, \"-\").concat(className);\n  },\n  _optionChanged: function _optionChanged(args) {\n    switch (args.name) {\n      case \"searchValue\":\n        if (this._showCheckboxes() && this._isRecursiveSelection()) {\n          this._removeSelection();\n        }\n\n        this._initDataAdapter();\n\n        this._updateSearch();\n\n        this._repaintContainer();\n\n        this.option(\"focusedElement\", null);\n        break;\n\n      case \"searchExpr\":\n        this._initDataAdapter();\n\n        this.repaint();\n        break;\n\n      case \"searchMode\":\n        this.option(\"expandNodesRecursive\") ? this._updateDataAdapter() : this._initDataAdapter();\n        this.repaint();\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _updateDataAdapter: function _updateDataAdapter() {\n    this._setOptionWithoutOptionChange(\"expandNodesRecursive\", false);\n\n    this._initDataAdapter();\n\n    this._setOptionWithoutOptionChange(\"expandNodesRecursive\", true);\n  },\n  _getDataAdapterOptions: function _getDataAdapterOptions() {\n    return extend(this.callBase(), {\n      searchValue: this.option(\"searchValue\"),\n      searchMode: this.option(\"searchMode\") || \"contains\",\n      searchExpr: this.option(\"searchExpr\")\n    });\n  },\n  _updateSearch: function _updateSearch() {\n    if (this._searchEditor) {\n      var editorOptions = this._getSearchEditorOptions();\n\n      this._searchEditor.option(editorOptions);\n    }\n  },\n  _repaintContainer: function _repaintContainer() {\n    var $container = this.$element().find(\".\".concat(NODE_CONTAINER_CLASS)).first();\n    var rootNodes;\n\n    if ($container.length) {\n      $container.empty();\n      rootNodes = this._dataAdapter.getRootNodes();\n\n      this._renderEmptyMessage(rootNodes);\n\n      this._renderItems($container, rootNodes);\n\n      this._fireContentReadyAction();\n    }\n  },\n  _itemContainer: function _itemContainer(isSearchMode) {\n    if (this._scrollable && isSearchMode) {\n      return $(this._scrollable.content());\n    }\n\n    return this.callBase();\n  },\n  _addWidgetClass: function _addWidgetClass() {\n    this.$element().addClass(this._widgetClass());\n  },\n  _clean: function _clean() {\n    this.callBase();\n\n    this._removeSearchBox();\n  }\n});\nregisterComponent(\"dxTreeView\", TreeViewSearch);\nexport default TreeViewSearch;","map":null,"metadata":{},"sourceType":"module"}