{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/map/provider.dynamic.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Promise from \"../../core/polyfills/promise\";\nimport { extend } from \"../../core/utils/extend\";\nimport { each, map } from \"../../core/utils/iterator\";\nimport Provider from \"./provider\";\nvar abstract = Provider.abstract;\nvar DynamicProvider = Provider.inherit({\n  _geocodeLocation: function _geocodeLocation(location) {\n    return new Promise(function (resolve) {\n      var cache = this._geocodedLocations;\n      var cachedLocation = cache[location];\n\n      if (cachedLocation) {\n        resolve(cachedLocation);\n      } else {\n        this._geocodeLocationImpl(location).then(function (geocodedLocation) {\n          cache[location] = geocodedLocation;\n          resolve(geocodedLocation);\n        });\n      }\n    }.bind(this));\n  },\n  _renderImpl: function _renderImpl() {\n    return this._load().then(function () {\n      return this._init();\n    }.bind(this)).then(function () {\n      return Promise.all([this.updateMapType(), this._areBoundsSet() ? this.updateBounds() : this.updateCenter()]);\n    }.bind(this)).then(function () {\n      this._attachHandlers();\n\n      return new Promise(function (resolve) {\n        var timeout = setTimeout(function () {\n          clearTimeout(timeout);\n          resolve();\n        });\n      });\n    }.bind(this));\n  },\n  _load: function _load() {\n    if (!this._mapsLoader) {\n      this._mapsLoader = this._loadImpl();\n    }\n\n    this._markers = [];\n    this._routes = [];\n    return this._mapsLoader;\n  },\n  _loadImpl: abstract,\n  _init: abstract,\n  _attachHandlers: abstract,\n  addMarkers: function addMarkers(options) {\n    return Promise.all(map(options, function (options) {\n      return this._addMarker(options);\n    }.bind(this))).then(function (markerObjects) {\n      this._fitBounds();\n\n      return [false, map(markerObjects, function (markerObject) {\n        return markerObject.marker;\n      })];\n    }.bind(this));\n  },\n  _addMarker: function _addMarker(options) {\n    return this._renderMarker(options).then(function (markerObject) {\n      this._markers.push(extend({\n        options: options\n      }, markerObject));\n\n      this._fireMarkerAddedAction({\n        options: options,\n        originalMarker: markerObject.marker\n      });\n\n      return markerObject;\n    }.bind(this));\n  },\n  _renderMarker: abstract,\n  removeMarkers: function removeMarkers(markersOptionsToRemove) {\n    var that = this;\n    each(markersOptionsToRemove, function (_, markerOptionToRemove) {\n      that._removeMarker(markerOptionToRemove);\n    });\n    return Promise.resolve();\n  },\n  _removeMarker: function _removeMarker(markersOptionToRemove) {\n    var that = this;\n    each(this._markers, function (markerIndex, markerObject) {\n      if (markerObject.options !== markersOptionToRemove) {\n        return true;\n      }\n\n      that._destroyMarker(markerObject);\n\n      that._markers.splice(markerIndex, 1);\n\n      that._fireMarkerRemovedAction({\n        options: markerObject.options\n      });\n\n      return false;\n    });\n  },\n  _destroyMarker: abstract,\n  _clearMarkers: function _clearMarkers() {\n    while (this._markers.length > 0) {\n      this._removeMarker(this._markers[0].options);\n    }\n  },\n  addRoutes: function addRoutes(options) {\n    return Promise.all(map(options, function (options) {\n      return this._addRoute(options);\n    }.bind(this))).then(function (routeObjects) {\n      this._fitBounds();\n\n      return [false, map(routeObjects, function (routeObject) {\n        return routeObject.instance;\n      })];\n    }.bind(this));\n  },\n  _addRoute: function _addRoute(options) {\n    return this._renderRoute(options).then(function (routeObject) {\n      this._routes.push(extend({\n        options: options\n      }, routeObject));\n\n      this._fireRouteAddedAction({\n        options: options,\n        originalRoute: routeObject.instance\n      });\n\n      return routeObject;\n    }.bind(this));\n  },\n  _renderRoute: abstract,\n  removeRoutes: function removeRoutes(options) {\n    var that = this;\n    each(options, function (routeIndex, options) {\n      that._removeRoute(options);\n    });\n    return Promise.resolve();\n  },\n  _removeRoute: function _removeRoute(options) {\n    var that = this;\n    each(this._routes, function (routeIndex, routeObject) {\n      if (routeObject.options !== options) {\n        return true;\n      }\n\n      that._destroyRoute(routeObject);\n\n      that._routes.splice(routeIndex, 1);\n\n      that._fireRouteRemovedAction({\n        options: options\n      });\n\n      return false;\n    });\n  },\n  _destroyRoute: abstract,\n  _clearRoutes: function _clearRoutes() {\n    while (this._routes.length > 0) {\n      this._removeRoute(this._routes[0].options);\n    }\n  },\n  adjustViewport: function adjustViewport() {\n    return this._fitBounds();\n  },\n  isEventsCanceled: function isEventsCanceled() {\n    return true;\n  },\n  _fitBounds: abstract,\n  _updateBounds: function _updateBounds() {\n    var that = this;\n\n    this._clearBounds();\n\n    if (!this._option(\"autoAdjust\")) {\n      return;\n    }\n\n    each(this._markers, function (_, markerObject) {\n      that._extendBounds(markerObject.location);\n    });\n    each(this._routes, function (_, routeObject) {\n      routeObject.northEast && that._extendBounds(routeObject.northEast);\n      routeObject.southWest && that._extendBounds(routeObject.southWest);\n    });\n  },\n  _clearBounds: function _clearBounds() {\n    this._bounds = null;\n  },\n  _extendBounds: abstract\n});\nexport default DynamicProvider;","map":null,"metadata":{},"sourceType":"module"}