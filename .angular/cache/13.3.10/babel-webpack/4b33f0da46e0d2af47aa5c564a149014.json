{"ast":null,"code":"import _defineProperty from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/renovation/ui/pager/pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"className\", \"defaultPageIndex\", \"defaultPageSize\", \"displayMode\", \"gridCompatibility\", \"hasKnownLastPage\", \"infoText\", \"lightModeEnabled\", \"maxPagesCount\", \"onKeyDown\", \"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pageSize\", \"pageSizeChange\", \"pageSizes\", \"pagesCountText\", \"pagesNavigatorVisible\", \"rtlEnabled\", \"showInfo\", \"showNavigationButtons\", \"showPageSizes\", \"totalCount\", \"visible\"];\nimport { createComponentVNode, normalizeProps } from \"inferno\";\nimport { InfernoWrapperComponent } from \"@devextreme/runtime/inferno\";\nimport { ResizableContainer } from \"./resizable_container\";\nimport { PagerProps } from \"./common/pager_props\";\nimport { PagerContent } from \"./content\";\nimport { combineClasses } from \"../../utils/combine_classes\";\nexport var viewFunction = function viewFunction(_ref) {\n  var pagerProps = _ref.pagerProps,\n      restAttributes = _ref.restAttributes;\n  return normalizeProps(createComponentVNode(2, ResizableContainer, _extends({\n    contentTemplate: PagerContent,\n    pagerProps: pagerProps\n  }, restAttributes)));\n};\nimport { createReRenderEffect } from \"@devextreme/runtime/inferno\";\nexport var Pager = /*#__PURE__*/(function () {\n  var Pager = /*#__PURE__*/function (_InfernoWrapperCompon) {\n    _inherits(Pager, _InfernoWrapperCompon);\n\n    var _super = _createSuper(Pager);\n\n    function Pager(props) {\n      var _this;\n\n      _classCallCheck(this, Pager);\n\n      _this = _super.call(this, props);\n      _this.__getterCache = {};\n      _this.state = {\n        pageSize: void 0 !== _this.props.pageSize ? _this.props.pageSize : _this.props.defaultPageSize,\n        pageIndex: void 0 !== _this.props.pageIndex ? _this.props.pageIndex : _this.props.defaultPageIndex\n      };\n      _this.pageIndexChange = _this.pageIndexChange.bind(_assertThisInitialized(_this));\n      _this.pageSizeChange = _this.pageSizeChange.bind(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    _createClass(Pager, [{\n      key: \"createEffects\",\n      value: function createEffects() {\n        return [createReRenderEffect()];\n      }\n    }, {\n      key: \"pageIndexChange\",\n      value: function pageIndexChange(newPageIndex) {\n        if (this.props.gridCompatibility) {\n          var __newValue;\n\n          this.setState(function (__state_argument) {\n            __newValue = newPageIndex + 1;\n            return {\n              pageIndex: __newValue\n            };\n          });\n          this.props.pageIndexChange(__newValue);\n        } else {\n          var _newValue;\n\n          this.setState(function (__state_argument) {\n            _newValue = newPageIndex;\n            return {\n              pageIndex: _newValue\n            };\n          });\n          this.props.pageIndexChange(_newValue);\n        }\n      }\n    }, {\n      key: \"pageIndex\",\n      get: function get() {\n        if (this.props.gridCompatibility) {\n          return (void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex) - 1;\n        }\n\n        return void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex;\n      }\n    }, {\n      key: \"pageSizeChange\",\n      value: function pageSizeChange(newPageSize) {\n        var __newValue;\n\n        this.setState(function (__state_argument) {\n          __newValue = newPageSize;\n          return {\n            pageSize: __newValue\n          };\n        });\n        this.props.pageSizeChange(__newValue);\n      }\n    }, {\n      key: \"className\",\n      get: function get() {\n        if (this.props.gridCompatibility) {\n          return combineClasses(_defineProperty({\n            \"dx-datagrid-pager\": true\n          }, \"\".concat(this.props.className), !!this.props.className));\n        }\n\n        return this.props.className;\n      }\n    }, {\n      key: \"pagerProps\",\n      get: function get() {\n        var _this2 = this;\n\n        if (void 0 !== this.__getterCache.pagerProps) {\n          return this.__getterCache.pagerProps;\n        }\n\n        return this.__getterCache.pagerProps = function () {\n          return _extends({}, _extends({}, _this2.props, {\n            pageSize: void 0 !== _this2.props.pageSize ? _this2.props.pageSize : _this2.state.pageSize,\n            pageIndex: void 0 !== _this2.props.pageIndex ? _this2.props.pageIndex : _this2.state.pageIndex\n          }), {\n            className: _this2.className,\n            pageIndex: _this2.pageIndex,\n            pageIndexChange: function pageIndexChange(pageIndex) {\n              return _this2.pageIndexChange(pageIndex);\n            },\n            pageSizeChange: function pageSizeChange(pageSize) {\n              return _this2.pageSizeChange(pageSize);\n            }\n          });\n        }();\n      }\n    }, {\n      key: \"restAttributes\",\n      get: function get() {\n        var _this$props$pageSize$ = _extends({}, this.props, {\n          pageSize: void 0 !== this.props.pageSize ? this.props.pageSize : this.state.pageSize,\n          pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex\n        }),\n            restProps = _objectWithoutPropertiesLoose(_this$props$pageSize$, _excluded);\n\n        return restProps;\n      }\n    }, {\n      key: \"componentWillUpdate\",\n      value: function componentWillUpdate(nextProps, nextState, context) {\n        _get(_getPrototypeOf(Pager.prototype), \"componentWillUpdate\", this).call(this);\n\n        if (this.props !== nextProps || this.props.gridCompatibility !== nextProps.gridCompatibility || this.props.className !== nextProps.className || this.state.pageIndex !== nextState.pageIndex || this.props.pageIndex !== nextProps.pageIndex || this.props.pageIndexChange !== nextProps.pageIndexChange || this.props.pageSizeChange !== nextProps.pageSizeChange) {\n          this.__getterCache.pagerProps = void 0;\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this.props;\n        return viewFunction({\n          props: _extends({}, props, {\n            pageSize: void 0 !== this.props.pageSize ? this.props.pageSize : this.state.pageSize,\n            pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex\n          }),\n          pageIndexChange: this.pageIndexChange,\n          pageIndex: this.pageIndex,\n          pageSizeChange: this.pageSizeChange,\n          className: this.className,\n          pagerProps: this.pagerProps,\n          restAttributes: this.restAttributes\n        });\n      }\n    }]);\n\n    return Pager;\n  }(InfernoWrapperComponent);\n\n  Pager.defaultProps = PagerProps;\n  return Pager;\n})();","map":null,"metadata":{},"sourceType":"module"}