{"ast":null,"code":"import _get from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _objectDestructuringEmpty from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js\";\nimport _createForOfIteratorHelper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { EventEmitter, Injectable, TemplateRef, ViewContainerRef, Renderer2, NgZone, Input, Directive, NgModule, Inject, PLATFORM_ID, ElementRef, VERSION, Optional, IterableDiffers } from '@angular/core';\nimport { isPlatformServer, DOCUMENT } from '@angular/common';\nimport { makeStateKey, TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { equalByValue } from 'devextreme/core/utils/common';\nimport domAdapter from 'devextreme/core/dom_adapter';\nimport { one, triggerHandler } from 'devextreme/events';\nimport render from 'devextreme/core/renderer';\nimport { XhrFactory } from '@angular/common/http';\nimport httpRequest from 'devextreme/core/http_request';\nimport readyCallbacks from 'devextreme/core/utils/ready_callbacks';\nimport eventsEngine from 'devextreme/events/core/events_engine';\nimport ajax from 'devextreme/core/utils/ajax';\nimport { Deferred } from 'devextreme/core/utils/deferred';\n/*!\r\n * devextreme-angular\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nimport * as ɵngcc2 from '@angular/common/http';\n;\n\nvar DxTemplateHost = /*#__PURE__*/function () {\n  function DxTemplateHost() {\n    _classCallCheck(this, DxTemplateHost);\n  }\n\n  _createClass(DxTemplateHost, [{\n    key: \"setHost\",\n    value: function setHost(host) {\n      this.host = host;\n    }\n  }, {\n    key: \"setTemplate\",\n    value: function setTemplate(template) {\n      this.host.setTemplate(template);\n    }\n  }]);\n\n  return DxTemplateHost;\n}();\n/*!\r\n * devextreme-angular\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\n\n\nvar NgEventsStrategy = /*#__PURE__*/function () {\n  function NgEventsStrategy(instance, zone) {\n    _classCallCheck(this, NgEventsStrategy);\n\n    this.instance = instance;\n    this.zone = zone;\n    this.subscriptions = {};\n    this.events = {};\n  }\n\n  _createClass(NgEventsStrategy, [{\n    key: \"hasEvent\",\n    value: function hasEvent(name) {\n      return this.getEmitter(name).observers.length !== 0;\n    }\n  }, {\n    key: \"fireEvent\",\n    value: function fireEvent(name, args) {\n      var emitter = this.getEmitter(name);\n\n      if (emitter.observers.length) {\n        var internalSubs = this.subscriptions[name] || [];\n\n        if (internalSubs.length === emitter.observers.length) {\n          emitter.next(args && args[0]);\n        } else {\n          this.zone.run(function () {\n            return emitter.next(args && args[0]);\n          });\n        }\n      }\n    }\n  }, {\n    key: \"on\",\n    value: function on(name, handler) {\n      var _this = this;\n\n      if (typeof name === 'string') {\n        var eventSubscriptions = this.subscriptions[name] || [],\n            subcription = this.getEmitter(name).subscribe(handler.bind(this.instance)),\n            unsubscribe = subcription.unsubscribe.bind(subcription);\n        eventSubscriptions.push({\n          handler: handler,\n          unsubscribe: unsubscribe\n        });\n        this.subscriptions[name] = eventSubscriptions;\n      } else {\n        var handlersObj = name;\n        Object.keys(handlersObj).forEach(function (event) {\n          return _this.on(event, handlersObj[event]);\n        });\n      }\n    }\n  }, {\n    key: \"off\",\n    value: function off(name, handler) {\n      var eventSubscriptions = this.subscriptions[name] || [];\n\n      if (handler) {\n        eventSubscriptions.some(function (subscription, i) {\n          if (subscription.handler === handler) {\n            subscription.unsubscribe();\n            eventSubscriptions.splice(i, 1);\n            return true;\n          }\n        });\n      } else {\n        eventSubscriptions.forEach(function (subscription) {\n          subscription.unsubscribe();\n        });\n        eventSubscriptions.splice(0, eventSubscriptions.length);\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {}\n  }, {\n    key: \"addEmitter\",\n    value: function addEmitter(eventName, emitter) {\n      this.events[eventName] = emitter;\n    }\n  }, {\n    key: \"getEmitter\",\n    value: function getEmitter(eventName) {\n      if (!this.events[eventName]) {\n        this.events[eventName] = new EventEmitter();\n      }\n\n      return this.events[eventName];\n    }\n  }]);\n\n  return NgEventsStrategy;\n}();\n\nvar EmitterHelper = /*#__PURE__*/function () {\n  function EmitterHelper(zone, component) {\n    _classCallCheck(this, EmitterHelper);\n\n    this.zone = zone;\n    this.component = component;\n    this.lockedValueChangeEvent = false;\n  }\n\n  _createClass(EmitterHelper, [{\n    key: \"fireNgEvent\",\n    value: function fireNgEvent(eventName, eventArgs) {\n      if (this.lockedValueChangeEvent && eventName === 'valueChange') {\n        return;\n      }\n\n      var emitter = this.component[eventName];\n\n      if (emitter && emitter.observers.length) {\n        this.zone.run(function () {\n          emitter.next(eventArgs && eventArgs[0]);\n        });\n      }\n    }\n  }, {\n    key: \"createEmitters\",\n    value: function createEmitters(events) {\n      var _this2 = this;\n\n      events.forEach(function (event) {\n        _this2.component[event.emit] = new EventEmitter();\n      });\n    }\n  }]);\n\n  return EmitterHelper;\n}();\n/*!\r\n * devextreme-angular\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\n\n\nvar WatcherHelper = /*#__PURE__*/(function () {\n  var WatcherHelper = /*#__PURE__*/function () {\n    function WatcherHelper() {\n      _classCallCheck(this, WatcherHelper);\n\n      this._watchers = [];\n    }\n\n    _createClass(WatcherHelper, [{\n      key: \"getWatchMethod\",\n      value: function getWatchMethod() {\n        var _this3 = this;\n\n        var watchMethod = function watchMethod(valueGetter, valueChangeCallback, options) {\n          var oldValue = valueGetter();\n          options = options || {};\n\n          if (!options.skipImmediate) {\n            valueChangeCallback(oldValue);\n          }\n\n          var watcher = function watcher() {\n            var newValue = valueGetter();\n\n            if (_this3._isDifferentValues(oldValue, newValue, options.deep)) {\n              valueChangeCallback(newValue);\n              oldValue = newValue;\n            }\n          };\n\n          _this3._watchers.push(watcher);\n\n          return function () {\n            var index = _this3._watchers.indexOf(watcher);\n\n            if (index !== -1) {\n              _this3._watchers.splice(index, 1);\n            }\n          };\n        };\n\n        return watchMethod;\n      }\n    }, {\n      key: \"_isDifferentValues\",\n      value: function _isDifferentValues(oldValue, newValue, deepCheck) {\n        var comparableNewValue = this._toComparable(newValue);\n\n        var comparableOldValue = this._toComparable(oldValue);\n\n        var isObjectValues = comparableNewValue instanceof Object && comparableOldValue instanceof Object;\n\n        if (deepCheck && isObjectValues) {\n          return this._checkObjectsFields(newValue, oldValue);\n        }\n\n        return comparableNewValue !== comparableOldValue;\n      }\n    }, {\n      key: \"_toComparable\",\n      value: function _toComparable(value) {\n        if (value instanceof Date) {\n          return value.getTime();\n        }\n\n        return value;\n      }\n    }, {\n      key: \"_checkObjectsFields\",\n      value: function _checkObjectsFields(checkingFromObject, checkingToObject) {\n        for (var field in checkingFromObject) {\n          var oldValue = this._toComparable(checkingFromObject[field]);\n\n          var newValue = this._toComparable(checkingToObject[field]);\n\n          var isEqualObjects = false;\n\n          if (typeof oldValue === 'object' && typeof newValue === 'object') {\n            isEqualObjects = equalByValue(oldValue, newValue);\n          }\n\n          if (oldValue !== newValue && !isEqualObjects) {\n            return true;\n          }\n        }\n      }\n    }, {\n      key: \"checkWatchers\",\n      value: function checkWatchers() {\n        var _iterator = _createForOfIteratorHelper(this._watchers),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var watcher = _step.value;\n            watcher();\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }]);\n\n    return WatcherHelper;\n  }();\n\n  WatcherHelper.ɵfac = function WatcherHelper_Factory(t) {\n    return new (t || WatcherHelper)();\n  };\n\n  WatcherHelper.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: WatcherHelper,\n    factory: function factory(t) {\n      return WatcherHelper.ɵfac(t);\n    }\n  });\n  /*!\r\n   * devextreme-angular\r\n   * Version: 21.2.6\r\n   * Build date: Tue Mar 01 2022\r\n   *\r\n   * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n   *\r\n   * This software may be modified and distributed under the terms\r\n   * of the MIT license. See the LICENSE file in the root of the project for details.\r\n   *\r\n   * https://github.com/DevExpress/devextreme-angular\r\n   */\n\n  return WatcherHelper;\n})();\n\nfunction getElement(element) {\n  return element.get ? element.get(0) : element;\n}\n\n;\n/*!\r\n * devextreme-angular\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\n\nvar DX_TEMPLATE_WRAPPER_CLASS = 'dx-template-wrapper';\n\nvar RenderData = /*#__PURE__*/_createClass(function RenderData() {\n  _classCallCheck(this, RenderData);\n});\n\nvar DxTemplateDirective = /*#__PURE__*/(function () {\n  var DxTemplateDirective = /*#__PURE__*/function () {\n    function DxTemplateDirective(templateRef, viewContainerRef, templateHost, renderer, zone) {\n      _classCallCheck(this, DxTemplateDirective);\n\n      this.templateRef = templateRef;\n      this.viewContainerRef = viewContainerRef;\n      this.renderer = renderer;\n      this.zone = zone;\n      templateHost.setTemplate(this);\n    }\n\n    _createClass(DxTemplateDirective, [{\n      key: \"dxTemplateOf\",\n      set: function set(value) {\n        this.name = value;\n      }\n    }, {\n      key: \"renderTemplate\",\n      value: function renderTemplate(renderData) {\n        var _this4 = this;\n\n        var childView = this.viewContainerRef.createEmbeddedView(this.templateRef, {\n          '$implicit': renderData.model,\n          index: renderData.index\n        });\n        var container = getElement(renderData.container);\n\n        if (renderData.container) {\n          childView.rootNodes.forEach(function (element) {\n            _this4.renderer.appendChild(container, element);\n          });\n        }\n\n        return childView;\n      }\n    }, {\n      key: \"render\",\n      value: function render(renderData) {\n        var _this5 = this;\n\n        var childView;\n\n        if (this.zone.isStable) {\n          childView = this.zone.run(function () {\n            return _this5.renderTemplate(renderData);\n          });\n        } else {\n          childView = this.renderTemplate(renderData);\n        } // =========== WORKAROUND =============\n        // https://github.com/angular/angular/issues/12243\n\n\n        childView['detectChanges'](); // =========== /WORKAROUND =============\n\n        childView.rootNodes.forEach(function (element) {\n          if (element.nodeType === 1) {\n            domAdapter.setClass(element, DX_TEMPLATE_WRAPPER_CLASS, true);\n          }\n\n          one(element, 'dxremove', function (_ref, params) {\n            _objectDestructuringEmpty(_ref);\n\n            if (!params || !params._angularIntegration) {\n              childView.destroy();\n            }\n          });\n        });\n        return childView.rootNodes;\n      }\n    }]);\n\n    return DxTemplateDirective;\n  }();\n\n  DxTemplateDirective.ɵfac = function DxTemplateDirective_Factory(t) {\n    return new (t || DxTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  DxTemplateDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: DxTemplateDirective,\n    selectors: [[\"\", \"dxTemplate\", \"\"]],\n    inputs: {\n      dxTemplateOf: \"dxTemplateOf\"\n    }\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxTemplateDirective.prototype, \"dxTemplateOf\", null);\n\n  DxTemplateDirective = __decorate([__metadata(\"design:paramtypes\", [TemplateRef, ViewContainerRef, DxTemplateHost, Renderer2, NgZone])], DxTemplateDirective);\n  return DxTemplateDirective;\n})();\nvar DxTemplateModule = /*#__PURE__*/(function () {\n  var DxTemplateModule = /*#__PURE__*/_createClass(function DxTemplateModule() {\n    _classCallCheck(this, DxTemplateModule);\n  });\n\n  DxTemplateModule.ɵfac = function DxTemplateModule_Factory(t) {\n    return new (t || DxTemplateModule)();\n  };\n\n  DxTemplateModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DxTemplateModule\n  });\n  DxTemplateModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  /*!\r\n   * devextreme-angular\r\n   * Version: 21.2.6\r\n   * Build date: Tue Mar 01 2022\r\n   *\r\n   * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n   *\r\n   * This software may be modified and distributed under the terms\r\n   * of the MIT license. See the LICENSE file in the root of the project for details.\r\n   *\r\n   * https://github.com/DevExpress/devextreme-angular\r\n   */\n\n  return DxTemplateModule;\n})();\nvar VISIBILITY_CHANGE_SELECTOR = 'dx-visibility-change-handler';\n\nvar BaseNestedOption = /*#__PURE__*/function () {\n  function BaseNestedOption() {\n    _classCallCheck(this, BaseNestedOption);\n\n    this._initialOptions = {};\n    this._collectionContainerImpl = new CollectionNestedOptionContainerImpl(this._setOption.bind(this), this._filterItems.bind(this));\n  }\n\n  _createClass(BaseNestedOption, [{\n    key: \"_optionChangedHandler\",\n    value: function _optionChangedHandler(e) {\n      var fullOptionPath = this._fullOptionPath();\n\n      if (e.fullName.indexOf(fullOptionPath) === 0) {\n        var optionName = e.fullName.slice(fullOptionPath.length);\n        var emitter = this[optionName + 'Change'];\n\n        if (emitter) {\n          emitter.next(e.value);\n        }\n      }\n    }\n  }, {\n    key: \"_createEventEmitters\",\n    value: function _createEventEmitters(events) {\n      var _this6 = this;\n\n      events.forEach(function (event) {\n        _this6[event.emit] = new EventEmitter();\n      });\n    }\n  }, {\n    key: \"_getOption\",\n    value: function _getOption(name) {\n      if (this.isLinked) {\n        return this.instance.option(this._fullOptionPath() + name);\n      } else {\n        return this._initialOptions[name];\n      }\n    }\n  }, {\n    key: \"_setOption\",\n    value: function _setOption(name, value) {\n      if (this.isLinked) {\n        var fullPath = this._fullOptionPath() + name;\n        this.instance.option(fullPath, value);\n      } else {\n        this._initialOptions[name] = value;\n      }\n    }\n  }, {\n    key: \"_addRemovedOption\",\n    value: function _addRemovedOption(name) {\n      if (this.instance && this.removedNestedComponents) {\n        this.removedNestedComponents.push(name);\n      }\n    }\n  }, {\n    key: \"_deleteRemovedOptions\",\n    value: function _deleteRemovedOptions(name) {\n      if (this.instance && this.removedNestedComponents) {\n        this.removedNestedComponents = this.removedNestedComponents.filter(function (x) {\n          return !x.startsWith(name);\n        });\n      }\n    }\n  }, {\n    key: \"_addRecreatedComponent\",\n    value: function _addRecreatedComponent() {\n      var _this7 = this;\n\n      if (this.instance && this.recreatedNestedComponents) {\n        this.recreatedNestedComponents.push({\n          getOptionPath: function getOptionPath() {\n            return _this7._getOptionPath();\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_getOptionPath\",\n    value: function _getOptionPath() {\n      return this._hostOptionPath() + this._optionPath;\n    }\n  }, {\n    key: \"setHost\",\n    value: function setHost(host, optionPath) {\n      this._host = host;\n      this._hostOptionPath = optionPath;\n      this.optionChangedHandlers.subscribe(this._optionChangedHandler.bind(this));\n    }\n  }, {\n    key: \"setChildren\",\n    value: function setChildren(propertyName, items) {\n      this.resetOptions(propertyName);\n      return this._collectionContainerImpl.setChildren(propertyName, items);\n    }\n  }, {\n    key: \"_filterItems\",\n    value: function _filterItems(items) {\n      var _this8 = this;\n\n      return items.filter(function (item) {\n        return item !== _this8;\n      });\n    }\n  }, {\n    key: \"instance\",\n    get: function get() {\n      return this._host && this._host.instance;\n    }\n  }, {\n    key: \"resetOptions\",\n    get: function get() {\n      return this._host && this._host.resetOptions;\n    }\n  }, {\n    key: \"isRecreated\",\n    get: function get() {\n      return this._host && this._host.isRecreated;\n    }\n  }, {\n    key: \"removedNestedComponents\",\n    get: function get() {\n      return this._host && this._host.removedNestedComponents;\n    },\n    set: function set(value) {\n      this._host.removedNestedComponents = value;\n    }\n  }, {\n    key: \"recreatedNestedComponents\",\n    get: function get() {\n      return this._host && this._host.recreatedNestedComponents;\n    },\n    set: function set(value) {\n      this._host.recreatedNestedComponents = value;\n    }\n  }, {\n    key: \"isLinked\",\n    get: function get() {\n      return !!this.instance && this._host.isLinked;\n    }\n  }, {\n    key: \"optionChangedHandlers\",\n    get: function get() {\n      return this._host && this._host.optionChangedHandlers;\n    }\n  }]);\n\n  return BaseNestedOption;\n}();\n\nvar CollectionNestedOptionContainerImpl = /*#__PURE__*/function () {\n  function CollectionNestedOptionContainerImpl(_setOption, _filterItems) {\n    _classCallCheck(this, CollectionNestedOptionContainerImpl);\n\n    this._setOption = _setOption;\n    this._filterItems = _filterItems;\n    this._activatedQueries = {};\n  }\n\n  _createClass(CollectionNestedOptionContainerImpl, [{\n    key: \"setChildren\",\n    value: function setChildren(propertyName, items) {\n      if (this._filterItems) {\n        items = this._filterItems(items);\n      }\n\n      if (items.length) {\n        this._activatedQueries[propertyName] = true;\n      }\n\n      if (this._activatedQueries[propertyName]) {\n        var widgetItems = items.map(function (item, index) {\n          item._index = index;\n          return item._value;\n        });\n\n        this._setOption(propertyName, widgetItems);\n      }\n    }\n  }]);\n\n  return CollectionNestedOptionContainerImpl;\n}();\n\nvar NestedOption = /*#__PURE__*/function (_BaseNestedOption) {\n  _inherits(NestedOption, _BaseNestedOption);\n\n  var _super = _createSuper(NestedOption);\n\n  function NestedOption() {\n    _classCallCheck(this, NestedOption);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NestedOption, [{\n    key: \"setHost\",\n    value: function setHost(host, optionPath) {\n      _get(_getPrototypeOf(NestedOption.prototype), \"setHost\", this).call(this, host, optionPath);\n\n      this._host[this._optionPath] = this._initialOptions;\n    }\n  }, {\n    key: \"_fullOptionPath\",\n    value: function _fullOptionPath() {\n      return this._getOptionPath() + '.';\n    }\n  }]);\n\n  return NestedOption;\n}(BaseNestedOption);\n\nvar CollectionNestedOption = /*#__PURE__*/function (_BaseNestedOption2) {\n  _inherits(CollectionNestedOption, _BaseNestedOption2);\n\n  var _super2 = _createSuper(CollectionNestedOption);\n\n  function CollectionNestedOption() {\n    _classCallCheck(this, CollectionNestedOption);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(CollectionNestedOption, [{\n    key: \"_fullOptionPath\",\n    value: function _fullOptionPath() {\n      return \"\".concat(this._getOptionPath(), \"[\").concat(this._index, \"].\");\n    }\n  }, {\n    key: \"_value\",\n    get: function get() {\n      return this._initialOptions;\n    }\n  }, {\n    key: \"isLinked\",\n    get: function get() {\n      return this._index !== undefined && !!this.instance && this._host.isLinked;\n    }\n  }]);\n\n  return CollectionNestedOption;\n}(BaseNestedOption);\n\nvar triggerShownEvent = function triggerShownEvent(element) {\n  var changeHandlers = [];\n\n  if (!render(element).hasClass(VISIBILITY_CHANGE_SELECTOR)) {\n    changeHandlers.push(element);\n  }\n\n  changeHandlers.push.apply(changeHandlers, element.querySelectorAll('.' + VISIBILITY_CHANGE_SELECTOR));\n\n  for (var i = 0; i < changeHandlers.length; i++) {\n    triggerHandler(changeHandlers[i], 'dxshown');\n  }\n};\n\nvar ɵ0 = triggerShownEvent;\n\nfunction extractTemplate(option, element, renderer, document) {\n  if (!option.template === undefined || !element.nativeElement.hasChildNodes()) {\n    return;\n  }\n\n  var childNodes = [].slice.call(element.nativeElement.childNodes);\n  var userContent = childNodes.filter(function (n) {\n    if (n.tagName) {\n      var tagNamePrefix = n.tagName.toLowerCase().substr(0, 3);\n      return !(tagNamePrefix === 'dxi' || tagNamePrefix === 'dxo');\n    } else {\n      return n.nodeName !== '#comment' && n.textContent.replace(/\\s/g, '').length;\n    }\n  });\n\n  if (!userContent.length) {\n    return;\n  }\n\n  option.template = {\n    render: function render(renderData) {\n      var result = element.nativeElement;\n      domAdapter.setClass(result, DX_TEMPLATE_WRAPPER_CLASS, true);\n\n      if (renderData.container) {\n        var container = getElement(renderData.container);\n        var resultInContainer = container.contains(element.nativeElement);\n        renderer.appendChild(container, element.nativeElement);\n\n        if (!resultInContainer) {\n          var resultInBody = document.body.contains(container);\n\n          if (resultInBody) {\n            triggerShownEvent(result);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n}\n\nvar NestedOptionHost = /*#__PURE__*/function () {\n  function NestedOptionHost() {\n    _classCallCheck(this, NestedOptionHost);\n  }\n\n  _createClass(NestedOptionHost, [{\n    key: \"getHost\",\n    value: function getHost() {\n      return this._host;\n    }\n  }, {\n    key: \"setHost\",\n    value: function setHost(host, optionPath) {\n      this._host = host;\n\n      this._optionPath = optionPath || function () {\n        return '';\n      };\n    }\n  }, {\n    key: \"setNestedOption\",\n    value: function setNestedOption(nestedOption) {\n      nestedOption.setHost(this._host, this._optionPath);\n    }\n  }]);\n\n  return NestedOptionHost;\n}();\n/*!\r\n * devextreme-angular\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\n\n\nvar serverStateKey;\n\nvar getServerStateKey = function getServerStateKey() {\n  if (!serverStateKey) {\n    serverStateKey = makeStateKey('DX_isPlatformServer');\n  }\n\n  return serverStateKey;\n};\n\nvar DxComponent = /*#__PURE__*/(function () {\n  var DxComponent = /*#__PURE__*/function () {\n    function DxComponent(element, ngZone, templateHost, watcherHelper, transferState, platformId) {\n      _classCallCheck(this, DxComponent);\n\n      this.element = element;\n      this.ngZone = ngZone;\n      this.watcherHelper = watcherHelper;\n      this.transferState = transferState;\n      this.platformId = platformId;\n      this._initialOptions = {};\n      this._optionsToUpdate = {};\n      this.optionChangedHandlers = new EventEmitter();\n      this.isLinked = true;\n      this.changedOptions = {};\n      this.removedNestedComponents = [];\n      this.widgetUpdateLocked = false;\n      this.templates = [];\n      templateHost.setHost(this);\n      this._collectionContainerImpl = new CollectionNestedOptionContainerImpl(this._setOption.bind(this));\n      this.eventHelper = new EmitterHelper(ngZone, this);\n    }\n\n    _createClass(DxComponent, [{\n      key: \"_initTemplates\",\n      value: function _initTemplates() {\n        if (this.templates.length) {\n          var initialTemplates = {};\n          this.templates.forEach(function (template) {\n            initialTemplates[template.name] = template;\n          });\n          this.instance.option('integrationOptions.templates', initialTemplates);\n        }\n      }\n    }, {\n      key: \"_initEvents\",\n      value: function _initEvents() {\n        var _this9 = this;\n\n        this.instance.on('optionChanged', function (e) {\n          _this9.changedOptions[e.name] = e.value;\n          var value = e.name === e.fullName ? e.value : e.component.option(e.name);\n\n          _this9.eventHelper.fireNgEvent(e.name + 'Change', [value]);\n\n          _this9.optionChangedHandlers.emit(e);\n        });\n      }\n    }, {\n      key: \"_initOptions\",\n      value: function _initOptions() {\n        this._initialOptions.integrationOptions.watchMethod = this.watcherHelper.getWatchMethod();\n      }\n    }, {\n      key: \"_initPlatform\",\n      value: function _initPlatform() {\n        if (this.transferState.hasKey(getServerStateKey())) {\n          this._initialOptions.integrationOptions.renderedOnServer = this.transferState.get(getServerStateKey(), null);\n        } else if (isPlatformServer(this.platformId)) {\n          this.transferState.set(getServerStateKey(), true);\n        }\n      }\n    }, {\n      key: \"_createEventEmitters\",\n      value: function _createEventEmitters(events) {\n        var _this10 = this;\n\n        var zone = this.ngZone;\n        this.eventHelper.createEmitters(events);\n\n        this._initialOptions.eventsStrategy = function (instance) {\n          var strategy = new NgEventsStrategy(instance, zone);\n          events.filter(function (event) {\n            return event.subscribe;\n          }).forEach(function (event) {\n            strategy.addEmitter(event.subscribe, _this10[event.emit]);\n          });\n          return strategy;\n        };\n\n        this._initialOptions.nestedComponentOptions = function (component) {\n          return {\n            eventsStrategy: function eventsStrategy(instance) {\n              return new NgEventsStrategy(instance, zone);\n            },\n            nestedComponentOptions: component.option('nestedComponentOptions')\n          };\n        };\n      }\n    }, {\n      key: \"_shouldOptionChange\",\n      value: function _shouldOptionChange(name, value) {\n        if (this.changedOptions.hasOwnProperty(name)) {\n          var prevValue = this.changedOptions[name];\n          delete this.changedOptions[name];\n          return value !== prevValue;\n        }\n\n        return true;\n      }\n    }, {\n      key: \"clearChangedOptions\",\n      value: function clearChangedOptions() {\n        this.changedOptions = {};\n      }\n    }, {\n      key: \"_getOption\",\n      value: function _getOption(name) {\n        return this.instance ? this.instance.option(name) : this._initialOptions[name];\n      }\n    }, {\n      key: \"lockWidgetUpdate\",\n      value: function lockWidgetUpdate() {\n        if (!this.widgetUpdateLocked && this.instance) {\n          this.instance.beginUpdate();\n          this.widgetUpdateLocked = true;\n        }\n      }\n    }, {\n      key: \"unlockWidgetUpdate\",\n      value: function unlockWidgetUpdate() {\n        if (this.widgetUpdateLocked) {\n          this.widgetUpdateLocked = false;\n          this.instance.endUpdate();\n        }\n      }\n    }, {\n      key: \"_setOption\",\n      value: function _setOption(name, value) {\n        this.lockWidgetUpdate();\n\n        if (!this._shouldOptionChange(name, value)) {\n          return;\n        }\n\n        if (this.instance) {\n          this.instance.option(name, value);\n        } else {\n          this._initialOptions[name] = value;\n        }\n      }\n    }, {\n      key: \"_createWidget\",\n      value: function _createWidget(element) {\n        this._initialOptions.integrationOptions = {};\n\n        this._initPlatform();\n\n        this._initOptions();\n\n        this._initialOptions.onInitializing = function () {\n          this.beginUpdate();\n        };\n\n        this.instance = this._createInstance(element, this._initialOptions);\n\n        this._initEvents();\n\n        this._initialOptions = {};\n      }\n    }, {\n      key: \"_destroyWidget\",\n      value: function _destroyWidget() {\n        this.removedNestedComponents = [];\n\n        if (this.instance) {\n          var element = this.instance.element();\n          triggerHandler(element, 'dxremove', {\n            _angularIntegration: true\n          });\n          this.instance.dispose();\n          domAdapter.removeElement(element);\n        }\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        for (var key in changes) {\n          var change = changes[key];\n\n          if (change.currentValue !== this[key]) {\n            this._optionsToUpdate[key] = changes[key].currentValue;\n          }\n        }\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this._createWidget(this.element.nativeElement);\n      }\n    }, {\n      key: \"ngDoCheck\",\n      value: function ngDoCheck() {\n        this.applyOptions();\n      }\n    }, {\n      key: \"ngAfterContentChecked\",\n      value: function ngAfterContentChecked() {\n        this.applyOptions();\n        this.resetOptions();\n        this.unlockWidgetUpdate();\n      }\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        this._initTemplates();\n\n        this.instance.endUpdate();\n        this.recreatedNestedComponents = [];\n      }\n    }, {\n      key: \"applyOptions\",\n      value: function applyOptions() {\n        if (Object.keys(this._optionsToUpdate).length) {\n          if (this.instance) {\n            this.instance.option(this._optionsToUpdate);\n          }\n\n          this._optionsToUpdate = {};\n        }\n      }\n    }, {\n      key: \"resetOptions\",\n      value: function resetOptions(collectionName) {\n        var _this11 = this;\n\n        if (this.instance) {\n          this.removedNestedComponents.filter(function (option) {\n            return option && !_this11.isRecreated(option) && collectionName ? option.startsWith(collectionName) : true;\n          }).forEach(function (option) {\n            _this11.instance.resetOption(option);\n          });\n          this.removedNestedComponents = [];\n          this.recreatedNestedComponents = [];\n        }\n      }\n    }, {\n      key: \"isRecreated\",\n      value: function isRecreated(name) {\n        return this.recreatedNestedComponents && this.recreatedNestedComponents.some(function (nestedComponent) {\n          return nestedComponent.getOptionPath() === name;\n        });\n      }\n    }, {\n      key: \"setTemplate\",\n      value: function setTemplate(template) {\n        this.templates.push(template);\n      }\n    }, {\n      key: \"setChildren\",\n      value: function setChildren(propertyName, items) {\n        this.resetOptions(propertyName);\n        return this._collectionContainerImpl.setChildren(propertyName, items);\n      }\n    }]);\n\n    return DxComponent;\n  }();\n\n  DxComponent.ɵfac = function DxComponent_Factory(t) {\n    return new (t || DxComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(WatcherHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.TransferState), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n\n  DxComponent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: DxComponent,\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  DxComponent = __decorate([__param(5, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost, WatcherHelper, TransferState, Object])], DxComponent);\n  return DxComponent;\n})();\nvar DxComponentExtension = /*#__PURE__*/(function () {\n  var DxComponentExtension = /*#__PURE__*/function (_DxComponent) {\n    _inherits(DxComponentExtension, _DxComponent);\n\n    var _super3 = _createSuper(DxComponentExtension);\n\n    function DxComponentExtension() {\n      _classCallCheck(this, DxComponentExtension);\n\n      return _super3.apply(this, arguments);\n    }\n\n    _createClass(DxComponentExtension, [{\n      key: \"createInstance\",\n      value: function createInstance(element) {\n        this._createWidget(element);\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {}\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {\n        this._createWidget(this.element.nativeElement);\n\n        this.instance.endUpdate();\n      }\n    }]);\n\n    return DxComponentExtension;\n  }(DxComponent);\n\n  DxComponentExtension.ɵfac = /*@__PURE__*/function () {\n    var ɵDxComponentExtension_BaseFactory;\n    return function DxComponentExtension_Factory(t) {\n      return (ɵDxComponentExtension_BaseFactory || (ɵDxComponentExtension_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(DxComponentExtension)))(t || DxComponentExtension);\n    };\n  }();\n\n  DxComponentExtension.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: DxComponentExtension,\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n  });\n  /*!\r\n   * devextreme-angular\r\n   * Version: 21.2.6\r\n   * Build date: Tue Mar 01 2022\r\n   *\r\n   * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n   *\r\n   * This software may be modified and distributed under the terms\r\n   * of the MIT license. See the LICENSE file in the root of the project for details.\r\n   *\r\n   * https://github.com/DevExpress/devextreme-angular\r\n   */\n\n  return DxComponentExtension;\n})();\nvar outsideZoneEvents = ['mousemove', 'mouseover', 'mouseout'];\nvar insideZoneEvents = ['mouseup', 'click', 'mousedown', 'transitionend', 'wheel'];\nvar originalAdd;\nvar callbacks = [];\n\nvar readyCallbackAdd = function readyCallbackAdd(callback) {\n  if (!originalAdd) {\n    originalAdd = this.callBase.bind(this);\n  }\n\n  callbacks.push(callback);\n};\n\nvar ɵ0$1 = readyCallbackAdd;\nreadyCallbacks.inject({\n  add: function add(callback) {\n    return readyCallbackAdd.call(this, callback);\n  }\n});\n\nvar _doInjections = function doInjections(document, ngZone, xhrFactory) {\n  if (Number(VERSION.major) < 7) {\n    console.warn(\"Your version of Angular is not supported (https://supportcenter.devexpress.com/ticket/details/t879496). Please update your project to version 7 or later. Please refer to the Angular Update Guide for more information: https://update.angular.io\");\n  }\n\n  domAdapter.inject({\n    _document: document,\n    listen: function listen() {\n      var _this12 = this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var eventName = args[1];\n\n      if (outsideZoneEvents.indexOf(eventName) !== -1) {\n        return ngZone.runOutsideAngular(function () {\n          return _this12.callBase.apply(_this12, args);\n        });\n      }\n\n      if (ngZone.isStable && insideZoneEvents.indexOf(eventName) !== -1) {\n        return ngZone.run(function () {\n          return _this12.callBase.apply(_this12, args);\n        });\n      }\n\n      return this.callBase.apply(this, args);\n    },\n    isElementNode: function isElementNode(element) {\n      return element && element.nodeType === 1;\n    },\n    isTextNode: function isTextNode(element) {\n      return element && element.nodeType === 3;\n    },\n    isDocument: function isDocument(element) {\n      return element && element.nodeType === 9;\n    }\n  });\n  httpRequest.inject({\n    getXhr: function getXhr() {\n      if (!xhrFactory) {\n        return this.callBase.apply(this);\n      }\n\n      var _xhr = xhrFactory.build();\n\n      if (!('withCredentials' in _xhr)) {\n        _xhr['withCredentials'] = false;\n      }\n\n      return _xhr;\n    }\n  });\n\n  var runReadyCallbacksInZone = function runReadyCallbacksInZone() {\n    ngZone.run(function () {\n      eventsEngine.set({});\n      callbacks.forEach(function (callback) {\n        return originalAdd.call(null, callback);\n      });\n      callbacks = [];\n      readyCallbacks.fire();\n    });\n  };\n\n  runReadyCallbacksInZone();\n\n  readyCallbackAdd = function readyCallbackAdd(callback) {\n    return ngZone.run(function () {\n      return callback();\n    });\n  };\n\n  _doInjections = runReadyCallbacksInZone;\n};\n\nvar ɵ1 = _doInjections;\nvar DxIntegrationModule = /*#__PURE__*/(function () {\n  var DxIntegrationModule = /*#__PURE__*/_createClass(function DxIntegrationModule(document, ngZone, xhrFactory) {\n    _classCallCheck(this, DxIntegrationModule);\n\n    _doInjections(document, ngZone, xhrFactory);\n  });\n\n  DxIntegrationModule.ɵfac = function DxIntegrationModule_Factory(t) {\n    return new (t || DxIntegrationModule)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc2.XhrFactory, 8));\n  };\n\n  DxIntegrationModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DxIntegrationModule\n  });\n  DxIntegrationModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  DxIntegrationModule = __decorate([__param(0, Inject(DOCUMENT)), __param(2, Optional()), __metadata(\"design:paramtypes\", [Object, NgZone, XhrFactory])], DxIntegrationModule);\n  /*!\r\n   * devextreme-angular\r\n   * Version: 21.2.6\r\n   * Build date: Tue Mar 01 2022\r\n   *\r\n   * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n   *\r\n   * This software may be modified and distributed under the terms\r\n   * of the MIT license. See the LICENSE file in the root of the project for details.\r\n   *\r\n   * https://github.com/DevExpress/devextreme-angular\r\n   */\n\n  return DxIntegrationModule;\n})();\nvar IterableDifferHelper = /*#__PURE__*/(function () {\n  var IterableDifferHelper = /*#__PURE__*/function () {\n    function IterableDifferHelper(_differs) {\n      _classCallCheck(this, IterableDifferHelper);\n\n      this._differs = _differs;\n      this._propertyDiffers = {};\n    }\n\n    _createClass(IterableDifferHelper, [{\n      key: \"setHost\",\n      value: function setHost(host) {\n        this._host = host;\n      }\n    }, {\n      key: \"setup\",\n      value: function setup(prop, changes) {\n        if (prop in changes) {\n          var value = changes[prop].currentValue;\n          this.setupSingle(prop, value);\n        }\n      }\n    }, {\n      key: \"setupSingle\",\n      value: function setupSingle(prop, value) {\n        if (value && Array.isArray(value)) {\n          if (!this._propertyDiffers[prop]) {\n            try {\n              this._propertyDiffers[prop] = this._differs.find(value).create(null);\n              return true;\n            } catch (e) {}\n          }\n        } else {\n          delete this._propertyDiffers[prop];\n        }\n\n        return false;\n      }\n    }, {\n      key: \"getChanges\",\n      value: function getChanges(prop, value) {\n        if (this._propertyDiffers[prop]) {\n          return this._propertyDiffers[prop].diff(value);\n        }\n      }\n    }, {\n      key: \"checkChangedOptions\",\n      value: function checkChangedOptions(propName, hostValue) {\n        return this._host.changedOptions[propName] === hostValue;\n      }\n    }, {\n      key: \"doCheck\",\n      value: function doCheck(prop) {\n        if (this._propertyDiffers[prop]) {\n          var hostValue = this._host[prop],\n              isChangedOption = this.checkChangedOptions(prop, hostValue);\n          var changes = this.getChanges(prop, hostValue);\n\n          if (changes && this._host.instance && !isChangedOption) {\n            this._host.lockWidgetUpdate();\n\n            this._host.instance.option(prop, hostValue);\n          }\n        }\n      }\n    }]);\n\n    return IterableDifferHelper;\n  }();\n\n  IterableDifferHelper.ɵfac = function IterableDifferHelper_Factory(t) {\n    return new (t || IterableDifferHelper)(ɵngcc0.ɵɵinject(ɵngcc0.IterableDiffers));\n  };\n\n  IterableDifferHelper.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: IterableDifferHelper,\n    factory: function factory(t) {\n      return IterableDifferHelper.ɵfac(t);\n    }\n  });\n  IterableDifferHelper = __decorate([__metadata(\"design:paramtypes\", [IterableDiffers])], IterableDifferHelper);\n  /*!\r\n   * devextreme-angular\r\n   * Version: 21.2.6\r\n   * Build date: Tue Mar 01 2022\r\n   *\r\n   * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n   *\r\n   * This software may be modified and distributed under the terms\r\n   * of the MIT license. See the LICENSE file in the root of the project for details.\r\n   *\r\n   * https://github.com/DevExpress/devextreme-angular\r\n   */\n\n  return IterableDifferHelper;\n})();\nvar DxServerTransferStateModule = /*#__PURE__*/(function () {\n  var DxServerTransferStateModule = /*#__PURE__*/function () {\n    function DxServerTransferStateModule(state, platformId) {\n      _classCallCheck(this, DxServerTransferStateModule);\n\n      this.state = state;\n      this.platformId = platformId;\n      var that = this;\n      ajax.inject({\n        sendRequest: function sendRequest() {\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          var key = makeStateKey(that.generateKey(args)),\n              cachedData = that.state.get(key, null);\n\n          if (isPlatformServer(that.platformId)) {\n            var result = this.callBase.apply(this, args);\n            result.always(function (data, status) {\n              var dataForCache = {\n                data: data,\n                status: status\n              };\n              that.state.set(key, dataForCache);\n            });\n            return result;\n          } else {\n            if (cachedData) {\n              var d = Deferred();\n              d.resolve(cachedData.data, cachedData.status);\n              that.state.set(key, null);\n              return d.promise();\n            }\n\n            return this.callBase.apply(this, args);\n          }\n        }\n      });\n    }\n\n    _createClass(DxServerTransferStateModule, [{\n      key: \"generateKey\",\n      value: function generateKey(args) {\n        var keyValue = '';\n\n        for (var key in args) {\n          if (typeof args[key] === 'object') {\n            var objKey = this.generateKey(args[key]);\n            keyValue += key + objKey;\n          } else {\n            keyValue += key + args[key];\n          }\n        }\n\n        return keyValue;\n      }\n    }]);\n\n    return DxServerTransferStateModule;\n  }();\n\n  DxServerTransferStateModule.ɵfac = function DxServerTransferStateModule_Factory(t) {\n    return new (t || DxServerTransferStateModule)(ɵngcc0.ɵɵinject(ɵngcc1.TransferState), ɵngcc0.ɵɵinject(PLATFORM_ID));\n  };\n\n  DxServerTransferStateModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DxServerTransferStateModule\n  });\n  DxServerTransferStateModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[BrowserTransferStateModule]]\n  });\n  DxServerTransferStateModule = __decorate([__param(1, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [TransferState, Object])], DxServerTransferStateModule);\n  return DxServerTransferStateModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxTemplateModule, {\n    declarations: [DxTemplateDirective],\n    exports: [DxTemplateDirective]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxServerTransferStateModule, {\n    imports: function imports() {\n      return [BrowserTransferStateModule];\n    }\n  });\n})();\n/*!\r\n * devextreme-angular\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { BaseNestedOption, CollectionNestedOption, CollectionNestedOptionContainerImpl, DX_TEMPLATE_WRAPPER_CLASS, DxComponent, DxComponentExtension, DxIntegrationModule, DxServerTransferStateModule, DxTemplateDirective, DxTemplateHost, DxTemplateModule, EmitterHelper, IterableDifferHelper, NestedOption, NestedOptionHost, NgEventsStrategy, RenderData, WatcherHelper, extractTemplate, getElement, getServerStateKey, ɵ0$1 as ɵ0, ɵ1 }; //# sourceMappingURL=devextreme-angular-core.js.map","map":null,"metadata":{},"sourceType":"module"}