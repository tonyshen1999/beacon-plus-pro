{"ast":null,"code":"/**\r\n * DevExtreme (esm/exporter/excel/excel.fill_helper.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isDefined } from \"../../core/utils/type\";\nimport tagHelper from \"./excel.tag_helper\";\nimport patternFillHelper from \"./excel.pattern_fill_helper\";\nvar fillHelper = {\n  tryCreateTag: function tryCreateTag(sourceObj) {\n    var result = null;\n\n    if (isDefined(sourceObj)) {\n      result = {\n        patternFill: patternFillHelper.tryCreateTag(sourceObj.patternFill)\n      };\n\n      if (fillHelper.isEmpty(result)) {\n        result = null;\n      }\n    }\n\n    return result;\n  },\n  tryCreateFillFromSimpleFormat: function tryCreateFillFromSimpleFormat() {\n    var _ref = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n        backgroundColor = _ref.backgroundColor,\n        fillPatternType = _ref.fillPatternType,\n        fillPatternColor = _ref.fillPatternColor;\n\n    if (isDefined(backgroundColor) && !(isDefined(fillPatternType) && isDefined(fillPatternColor))) {\n      return {\n        patternFill: {\n          patternType: \"solid\",\n          foregroundColor: {\n            rgb: backgroundColor\n          }\n        }\n      };\n    } else if (isDefined(fillPatternType) && isDefined(fillPatternColor)) {\n      return {\n        patternFill: {\n          patternType: fillPatternType,\n          foregroundColor: {\n            rgb: fillPatternColor\n          },\n          backgroundColor: {\n            rgb: backgroundColor\n          }\n        }\n      };\n    }\n  },\n  copySimpleFormat: function copySimpleFormat(source, target) {\n    if (void 0 !== source.backgroundColor) {\n      target.backgroundColor = source.backgroundColor;\n    }\n\n    if (void 0 !== source.fillPatternType) {\n      target.fillPatternType = source.fillPatternType;\n    }\n\n    if (void 0 !== source.fillPatternColor) {\n      target.fillPatternColor = source.fillPatternColor;\n    }\n  },\n  copy: function copy(source) {\n    var result = null;\n\n    if (isDefined(source)) {\n      result = {};\n\n      if (void 0 !== source.patternFill) {\n        result.patternFill = patternFillHelper.copy(source.patternFill);\n      }\n    }\n\n    return result;\n  },\n  areEqual: function areEqual(leftTag, rightTag) {\n    return fillHelper.isEmpty(leftTag) && fillHelper.isEmpty(rightTag) || isDefined(leftTag) && isDefined(rightTag) && patternFillHelper.areEqual(leftTag.patternFill, rightTag.patternFill);\n  },\n  isEmpty: function isEmpty(tag) {\n    return !isDefined(tag) || patternFillHelper.isEmpty(tag.patternFill);\n  },\n  toXml: function toXml(tag) {\n    return tagHelper.toXml(\"fill\", {}, patternFillHelper.toXml(tag.patternFill));\n  }\n};\nexport default fillHelper;","map":null,"metadata":{},"sourceType":"module"}