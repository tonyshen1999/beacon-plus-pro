{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/table.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bottomVirtualRowHeight\", \"children\", \"className\", \"height\", \"leftVirtualCellCount\", \"leftVirtualCellWidth\", \"rightVirtualCellCount\", \"rightVirtualCellWidth\", \"tableRef\", \"topVirtualRowHeight\", \"virtualCellsCount\", \"width\"];\nimport { createVNode, createComponentVNode } from \"inferno\";\nimport { BaseInfernoComponent, normalizeStyles } from \"@devextreme/runtime/inferno\";\nimport { addHeightToStyle, addWidthToStyle } from \"../utils\";\nimport { VirtualRow } from \"./virtual_row\";\nexport var viewFunction = function viewFunction(_ref) {\n  var hasBottomVirtualRow = _ref.hasBottomVirtualRow,\n      hasTopVirtualRow = _ref.hasTopVirtualRow,\n      _ref$props = _ref.props,\n      bottomVirtualRowHeight = _ref$props.bottomVirtualRowHeight,\n      children = _ref$props.children,\n      className = _ref$props.className,\n      leftVirtualCellCount = _ref$props.leftVirtualCellCount,\n      leftVirtualCellWidth = _ref$props.leftVirtualCellWidth,\n      rightVirtualCellCount = _ref$props.rightVirtualCellCount,\n      rightVirtualCellWidth = _ref$props.rightVirtualCellWidth,\n      tableRef = _ref$props.tableRef,\n      topVirtualRowHeight = _ref$props.topVirtualRowHeight,\n      virtualCellsCount = _ref$props.virtualCellsCount,\n      style = _ref.style;\n  return createVNode(1, \"table\", className, createVNode(1, \"tbody\", null, [hasTopVirtualRow && createComponentVNode(2, VirtualRow, {\n    height: topVirtualRowHeight,\n    cellsCount: virtualCellsCount,\n    leftVirtualCellWidth: leftVirtualCellWidth,\n    rightVirtualCellWidth: rightVirtualCellWidth,\n    leftVirtualCellCount: leftVirtualCellCount,\n    rightVirtualCellCount: rightVirtualCellCount\n  }), children, hasBottomVirtualRow && createComponentVNode(2, VirtualRow, {\n    height: bottomVirtualRowHeight,\n    cellsCount: virtualCellsCount,\n    leftVirtualCellWidth: leftVirtualCellWidth,\n    rightVirtualCellWidth: rightVirtualCellWidth,\n    leftVirtualCellCount: leftVirtualCellCount,\n    rightVirtualCellCount: rightVirtualCellCount\n  })], 0), 2, {\n    style: normalizeStyles(style)\n  }, null, tableRef);\n};\nexport var TableProps = {\n  className: \"\",\n  topVirtualRowHeight: 0,\n  bottomVirtualRowHeight: 0,\n  leftVirtualCellWidth: 0,\n  rightVirtualCellWidth: 0,\n  virtualCellsCount: 0\n};\nimport { createRef as infernoCreateRef } from \"inferno\";\nexport var Table = /*#__PURE__*/(function () {\n  var Table = /*#__PURE__*/function (_BaseInfernoComponent) {\n    _inherits(Table, _BaseInfernoComponent);\n\n    var _super = _createSuper(Table);\n\n    function Table(props) {\n      var _this;\n\n      _classCallCheck(this, Table);\n\n      _this = _super.call(this, props);\n      _this.state = {};\n      _this.elementRef = infernoCreateRef();\n      return _this;\n    }\n\n    _createClass(Table, [{\n      key: \"style\",\n      get: function get() {\n        var _this$props2 = this.props,\n            height = _this$props2.height,\n            width = _this$props2.width;\n        var style = this.restAttributes.style;\n        var heightAdded = addHeightToStyle(height, style);\n        return addWidthToStyle(width, heightAdded);\n      }\n    }, {\n      key: \"hasTopVirtualRow\",\n      get: function get() {\n        var topVirtualRowHeight = this.props.topVirtualRowHeight;\n        return !!topVirtualRowHeight;\n      }\n    }, {\n      key: \"hasBottomVirtualRow\",\n      get: function get() {\n        var bottomVirtualRowHeight = this.props.bottomVirtualRowHeight;\n        return !!bottomVirtualRowHeight;\n      }\n    }, {\n      key: \"restAttributes\",\n      get: function get() {\n        var _this$props = this.props,\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n        return restProps;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this.props;\n        return viewFunction({\n          props: _extends({}, props),\n          elementRef: this.elementRef,\n          style: this.style,\n          hasTopVirtualRow: this.hasTopVirtualRow,\n          hasBottomVirtualRow: this.hasBottomVirtualRow,\n          restAttributes: this.restAttributes\n        });\n      }\n    }]);\n\n    return Table;\n  }(BaseInfernoComponent);\n\n  Table.defaultProps = TableProps;\n  return Table;\n})();","map":null,"metadata":{},"sourceType":"module"}