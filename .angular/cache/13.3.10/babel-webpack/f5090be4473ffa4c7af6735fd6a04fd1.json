{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/ui/diagram/diagram.items_option.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { extend } from \"../../core/utils/extend\";\nimport { Component } from \"../../core/component\";\nimport DataHelperMixin from \"../../data_helper\";\nvar ItemsOptionBase = Component.inherit({}).include(DataHelperMixin);\n\nvar ItemsOption = /*#__PURE__*/function (_ItemsOptionBase) {\n  _inherits(ItemsOption, _ItemsOptionBase);\n\n  var _super = _createSuper(ItemsOption);\n\n  function ItemsOption(diagramWidget) {\n    var _this;\n\n    _classCallCheck(this, ItemsOption);\n\n    _this = _super.call(this);\n    _this._diagramWidget = diagramWidget;\n\n    _this._resetCache();\n\n    return _this;\n  }\n\n  _createClass(ItemsOption, [{\n    key: \"_dataSourceChangedHandler\",\n    value: function _dataSourceChangedHandler(newItems, e) {\n      this._resetCache();\n\n      this._items = newItems.map(function (item) {\n        return extend(true, {}, item);\n      });\n      this._dataSourceItems = newItems.slice();\n\n      if (e && e.changes) {\n        var internalChanges = e.changes.filter(function (change) {\n          return change.internalChange;\n        });\n        var externalChanges = e.changes.filter(function (change) {\n          return !change.internalChange;\n        });\n\n        if (internalChanges.length) {\n          this._reloadContentByChanges(internalChanges, false);\n        }\n\n        if (externalChanges.length) {\n          this._reloadContentByChanges(externalChanges, true);\n        }\n      } else {\n        this._diagramWidget._onDataSourceChanged();\n      }\n    }\n  }, {\n    key: \"_dataSourceLoadingChangedHandler\",\n    value: function _dataSourceLoadingChangedHandler(isLoading) {\n      if (isLoading && !this._dataSource.isLoaded()) {\n        this._diagramWidget._showLoadingIndicator();\n      } else {\n        this._diagramWidget._hideLoadingIndicator();\n      }\n    }\n  }, {\n    key: \"_prepareData\",\n    value: function _prepareData(dataObj) {\n      for (var key in dataObj) {\n        if (!Object.prototype.hasOwnProperty.call(dataObj, key)) {\n          continue;\n        }\n\n        if (void 0 === dataObj[key]) {\n          dataObj[key] = null;\n        }\n      }\n\n      return dataObj;\n    }\n  }, {\n    key: \"insert\",\n    value: function insert(data, callback, errorCallback) {\n      var _this2 = this;\n\n      this._resetCache();\n\n      var store = this._getStore();\n\n      store.insert(this._prepareData(data)).done(function (data, key) {\n        store.push([{\n          type: \"insert\",\n          key: key,\n          data: data,\n          internalChange: true\n        }]);\n\n        if (callback) {\n          callback(data);\n        }\n\n        _this2._resetCache();\n      }).fail(function (error) {\n        if (errorCallback) {\n          errorCallback(error);\n        }\n\n        _this2._resetCache();\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update(key, data, callback, errorCallback) {\n      var store = this._getStore();\n\n      var storeKey = this._getStoreKey(store, key, data);\n\n      store.update(storeKey, this._prepareData(data)).done(function (data, key) {\n        store.push([{\n          type: \"update\",\n          key: key,\n          data: data,\n          internalChange: true\n        }]);\n\n        if (callback) {\n          callback(key, data);\n        }\n      }).fail(function (error) {\n        if (errorCallback) {\n          errorCallback(error);\n        }\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(key, data, callback, errorCallback) {\n      var _this3 = this;\n\n      this._resetCache();\n\n      var store = this._getStore();\n\n      var storeKey = this._getStoreKey(store, key, data);\n\n      store.remove(storeKey).done(function (key) {\n        store.push([{\n          type: \"remove\",\n          key: key,\n          internalChange: true\n        }]);\n\n        if (callback) {\n          callback(key);\n        }\n\n        _this3._resetCache();\n      }).fail(function (error) {\n        if (errorCallback) {\n          errorCallback(error);\n        }\n\n        _this3._resetCache();\n      });\n    }\n  }, {\n    key: \"findItem\",\n    value: function findItem(itemKey) {\n      if (!this._items) {\n        return null;\n      }\n\n      return this._getItemByKey(itemKey);\n    }\n  }, {\n    key: \"getItems\",\n    value: function getItems() {\n      return this._items;\n    }\n  }, {\n    key: \"hasItems\",\n    value: function hasItems() {\n      return !!this._items;\n    }\n  }, {\n    key: \"_reloadContentByChanges\",\n    value: function _reloadContentByChanges(changes, isExternalChanges) {\n      var _this4 = this;\n\n      changes = changes.map(function (change) {\n        return extend(change, {\n          internalKey: _this4._getInternalKey(change.key)\n        });\n      });\n\n      this._diagramWidget._reloadContentByChanges(changes, isExternalChanges);\n    }\n  }, {\n    key: \"_getItemByKey\",\n    value: function _getItemByKey(key) {\n      this._ensureCache();\n\n      var cache = this._cache;\n\n      var index = this._getIndexByKey(key);\n\n      return cache.items[index];\n    }\n  }, {\n    key: \"_getIndexByKey\",\n    value: function _getIndexByKey(key) {\n      this._ensureCache();\n\n      var cache = this._cache;\n\n      if (\"object\" === typeof key) {\n        for (var i = 0, length = cache.keys.length; i < length; i++) {\n          if (cache.keys[i] === key) {\n            return i;\n          }\n        }\n      } else {\n        var keySet = cache.keySet || cache.keys.reduce(function (accumulator, key, index) {\n          accumulator[key] = index;\n          return accumulator;\n        }, {});\n\n        if (!cache.keySet) {\n          cache.keySet = keySet;\n        }\n\n        return keySet[key];\n      }\n\n      return -1;\n    }\n  }, {\n    key: \"_ensureCache\",\n    value: function _ensureCache() {\n      var cache = this._cache;\n\n      if (!cache.keys) {\n        cache.keys = [];\n        cache.items = [];\n\n        this._fillCache(cache, this._items);\n      }\n    }\n  }, {\n    key: \"_fillCache\",\n    value: function _fillCache(cache, items) {\n      var _this5 = this;\n\n      if (!items || !items.length) {\n        return;\n      }\n\n      var keyExpr = this._getKeyExpr();\n\n      if (keyExpr) {\n        items.forEach(function (item) {\n          cache.keys.push(keyExpr(item));\n          cache.items.push(item);\n        });\n      }\n\n      var itemsExpr = this._getItemsExpr();\n\n      if (itemsExpr) {\n        items.forEach(function (item) {\n          return _this5._fillCache(cache, itemsExpr(item));\n        });\n      }\n\n      var containerChildrenExpr = this._getContainerChildrenExpr();\n\n      if (containerChildrenExpr) {\n        items.forEach(function (item) {\n          return _this5._fillCache(cache, containerChildrenExpr(item));\n        });\n      }\n    }\n  }, {\n    key: \"_getKeyExpr\",\n    value: function _getKeyExpr() {\n      throw \"Not Implemented\";\n    }\n  }, {\n    key: \"_getItemsExpr\",\n    value: function _getItemsExpr() {}\n  }, {\n    key: \"_getContainerChildrenExpr\",\n    value: function _getContainerChildrenExpr() {}\n  }, {\n    key: \"_initDataSource\",\n    value: function _initDataSource() {\n      _get(_getPrototypeOf(ItemsOption.prototype), \"_initDataSource\", this).call(this);\n\n      this._dataSource && this._dataSource.paginate(false);\n    }\n  }, {\n    key: \"_dataSourceOptions\",\n    value: function _dataSourceOptions() {\n      return {\n        paginate: false\n      };\n    }\n  }, {\n    key: \"_getStore\",\n    value: function _getStore() {\n      return this._dataSource && this._dataSource.store();\n    }\n  }, {\n    key: \"_getStoreKey\",\n    value: function _getStoreKey(store, internalKey, data) {\n      var storeKey = store.keyOf(data);\n\n      if (storeKey === data) {\n        var keyExpr = this._getKeyExpr();\n\n        this._dataSourceItems.forEach(function (item) {\n          if (keyExpr(item) === internalKey) {\n            storeKey = item;\n          }\n        });\n      }\n\n      return storeKey;\n    }\n  }, {\n    key: \"_getInternalKey\",\n    value: function _getInternalKey(storeKey) {\n      if (\"object\" === typeof storeKey) {\n        var keyExpr = this._getKeyExpr();\n\n        return keyExpr(storeKey);\n      }\n\n      return storeKey;\n    }\n  }, {\n    key: \"_resetCache\",\n    value: function _resetCache() {\n      this._cache = {};\n    }\n  }]);\n\n  return ItemsOption;\n}(ItemsOptionBase);\n\nexport default ItemsOption;","map":null,"metadata":{},"sourceType":"module"}