{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.data.option.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { Component } from \"../../core/component\";\nimport DataHelperMixin from \"../../data_helper\";\n\nvar DataOption = /*#__PURE__*/function (_Component) {\n  _inherits(DataOption, _Component);\n\n  var _super = _createSuper(DataOption);\n\n  function DataOption(optionName, getLoadPanel, dataSourceChangedCallback) {\n    var _this;\n\n    _classCallCheck(this, DataOption);\n\n    _this = _super.call(this);\n    _this._optionName = optionName;\n    _this._getLoadPanel = getLoadPanel;\n    _this._dataSourceChangedCallback = dataSourceChangedCallback;\n    return _this;\n  }\n\n  _createClass(DataOption, [{\n    key: \"insert\",\n    value: function insert(data, callback, errorCallback) {\n      var _this2 = this;\n\n      this._showLoadPanel();\n\n      this._getStore().insert(data).done(function (response) {\n        if (callback) {\n          callback(response);\n        }\n\n        _this2._hideLoadPanel();\n      }).fail(function (error) {\n        if (errorCallback) {\n          errorCallback(error);\n        }\n\n        _this2._hideLoadPanel();\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update(key, data, callback, errorCallback) {\n      var _this3 = this;\n\n      this._showLoadPanel();\n\n      this._getStore().update(key, data).done(function (data, key) {\n        if (callback) {\n          callback(data, key);\n        }\n\n        _this3._hideLoadPanel();\n      }).fail(function (error) {\n        if (errorCallback) {\n          errorCallback(error);\n        }\n\n        _this3._hideLoadPanel();\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(key, callback, errorCallback) {\n      var _this4 = this;\n\n      this._showLoadPanel();\n\n      this._getStore().remove(key).done(function (key) {\n        if (callback) {\n          callback(key);\n        }\n\n        _this4._hideLoadPanel();\n      }).fail(function (error) {\n        if (errorCallback) {\n          errorCallback(error);\n        }\n\n        _this4._hideLoadPanel();\n      });\n    }\n  }, {\n    key: \"_dataSourceChangedHandler\",\n    value: function _dataSourceChangedHandler(newItems, e) {\n      this._dataSourceChangedCallback(this._optionName, newItems);\n    }\n  }, {\n    key: \"_dataSourceOptions\",\n    value: function _dataSourceOptions() {\n      return {\n        paginate: false\n      };\n    }\n  }, {\n    key: \"_dataSourceLoadingChangedHandler\",\n    value: function _dataSourceLoadingChangedHandler(isLoading) {\n      if (isLoading && !this._dataSource.isLoaded()) {\n        this._showLoadPanel();\n      } else {\n        this._hideLoadPanel();\n      }\n    }\n  }, {\n    key: \"_showLoadPanel\",\n    value: function _showLoadPanel() {\n      var _this$_getLoadPanel;\n\n      null === (_this$_getLoadPanel = this._getLoadPanel()) || void 0 === _this$_getLoadPanel ? void 0 : _this$_getLoadPanel.show();\n    }\n  }, {\n    key: \"_hideLoadPanel\",\n    value: function _hideLoadPanel() {\n      var _this$_getLoadPanel2;\n\n      null === (_this$_getLoadPanel2 = this._getLoadPanel()) || void 0 === _this$_getLoadPanel2 ? void 0 : _this$_getLoadPanel2.hide();\n    }\n  }, {\n    key: \"_getStore\",\n    value: function _getStore() {\n      return this._dataSource.store();\n    }\n  }, {\n    key: \"_getItems\",\n    value: function _getItems() {\n      return this._getStore()._array || this._dataSource.items();\n    }\n  }, {\n    key: \"_reloadDataSource\",\n    value: function _reloadDataSource() {\n      return this._dataSource.load();\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this._disposeDataSource();\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function _optionChanged(args) {\n      args.name;\n    }\n  }]);\n\n  return DataOption;\n}(Component);\n\nDataOption.include(DataHelperMixin);\nexport default DataOption;","map":null,"metadata":{},"sourceType":"module"}