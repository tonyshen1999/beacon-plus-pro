{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/table_body.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"addDateTableClass\", \"addVerticalSizesClassToRows\", \"bottomVirtualRowHeight\", \"cellTemplate\", \"dataCellTemplate\", \"groupOrientation\", \"leftVirtualCellWidth\", \"rightVirtualCellWidth\", \"topVirtualRowHeight\", \"viewData\", \"width\"];\nimport { createFragment, createComponentVNode, normalizeProps } from \"inferno\";\nimport { Fragment } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { Row } from \"../row\";\nimport { getKeyByGroup, getIsGroupedAllDayPanel } from \"../../utils\";\nimport { AllDayPanelTableBody } from \"./all_day_panel/table_body\";\nimport { LayoutProps } from \"../layout_props\";\nimport { DateTableCellBase } from \"./cell\";\nimport { combineClasses } from \"../../../../../utils/combine_classes\";\nexport var viewFunction = function viewFunction(_ref) {\n  var _ref$props = _ref.props,\n      Cell = _ref$props.cellTemplate,\n      dataCellTemplate = _ref$props.dataCellTemplate,\n      groupOrientation = _ref$props.groupOrientation,\n      viewData = _ref$props.viewData,\n      rowClasses = _ref.rowClasses;\n  return createFragment(viewData.groupedData.map(function (_ref2, index) {\n    var allDayPanel = _ref2.allDayPanel,\n        dateTable = _ref2.dateTable,\n        groupIndex = _ref2.groupIndex;\n    return createFragment([getIsGroupedAllDayPanel(viewData, index) && createComponentVNode(2, AllDayPanelTableBody, {\n      viewData: allDayPanel,\n      dataCellTemplate: dataCellTemplate,\n      isVerticalGroupOrientation: true,\n      leftVirtualCellWidth: viewData.leftVirtualCellWidth,\n      rightVirtualCellWidth: viewData.rightVirtualCellWidth,\n      leftVirtualCellCount: viewData.leftVirtualCellCount,\n      rightVirtualCellCount: viewData.rightVirtualCellCount\n    }), dateTable.map(function (cellsRow) {\n      return createComponentVNode(2, Row, {\n        className: rowClasses,\n        leftVirtualCellWidth: viewData.leftVirtualCellWidth,\n        rightVirtualCellWidth: viewData.rightVirtualCellWidth,\n        leftVirtualCellCount: viewData.leftVirtualCellCount,\n        rightVirtualCellCount: viewData.rightVirtualCellCount,\n        children: cellsRow.map(function (_ref3) {\n          var endDate = _ref3.endDate,\n              firstDayOfMonth = _ref3.firstDayOfMonth,\n              cellGroupIndex = _ref3.groupIndex,\n              groups = _ref3.groups,\n              cellIndex = _ref3.index,\n              isFirstGroupCell = _ref3.isFirstGroupCell,\n              isFocused = _ref3.isFocused,\n              isLastGroupCell = _ref3.isLastGroupCell,\n              isSelected = _ref3.isSelected,\n              key = _ref3.key,\n              otherMonth = _ref3.otherMonth,\n              startDate = _ref3.startDate,\n              text = _ref3.text,\n              today = _ref3.today;\n          return Cell({\n            isFirstGroupCell: isFirstGroupCell,\n            isLastGroupCell: isLastGroupCell,\n            startDate: startDate,\n            endDate: endDate,\n            groups: groups,\n            groupIndex: cellGroupIndex,\n            index: cellIndex,\n            dataCellTemplate: dataCellTemplate,\n            key: key,\n            text: text,\n            today: today,\n            otherMonth: otherMonth,\n            firstDayOfMonth: firstDayOfMonth,\n            isSelected: isSelected,\n            isFocused: isFocused\n          });\n        })\n      }, cellsRow[0].key - viewData.leftVirtualCellCount);\n    })], 0, getKeyByGroup(groupIndex, groupOrientation));\n  }), 0);\n};\nexport var DateTableBodyProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(LayoutProps), Object.getOwnPropertyDescriptors({\n  cellTemplate: DateTableCellBase\n})));\n\nvar getTemplate = function getTemplate(TemplateProp) {\n  return TemplateProp && (TemplateProp.defaultProps ? function (props) {\n    return normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props)));\n  } : TemplateProp);\n};\n\nexport var DateTableBody = /*#__PURE__*/(function () {\n  var DateTableBody = /*#__PURE__*/function (_BaseInfernoComponent) {\n    _inherits(DateTableBody, _BaseInfernoComponent);\n\n    var _super = _createSuper(DateTableBody);\n\n    function DateTableBody(props) {\n      var _this;\n\n      _classCallCheck(this, DateTableBody);\n\n      _this = _super.call(this, props);\n      _this.state = {};\n      return _this;\n    }\n\n    _createClass(DateTableBody, [{\n      key: \"rowClasses\",\n      get: function get() {\n        var addVerticalSizesClassToRows = this.props.addVerticalSizesClassToRows;\n        return combineClasses({\n          \"dx-scheduler-date-table-row\": true,\n          \"dx-scheduler-cell-sizes-vertical\": addVerticalSizesClassToRows\n        });\n      }\n    }, {\n      key: \"restAttributes\",\n      get: function get() {\n        var _this$props = this.props,\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n        return restProps;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this.props;\n        return viewFunction({\n          props: _extends({}, props, {\n            cellTemplate: getTemplate(props.cellTemplate),\n            dataCellTemplate: getTemplate(props.dataCellTemplate)\n          }),\n          rowClasses: this.rowClasses,\n          restAttributes: this.restAttributes\n        });\n      }\n    }]);\n\n    return DateTableBody;\n  }(BaseInfernoComponent);\n\n  DateTableBody.defaultProps = DateTableBodyProps;\n  return DateTableBody;\n})();","map":null,"metadata":{},"sourceType":"module"}