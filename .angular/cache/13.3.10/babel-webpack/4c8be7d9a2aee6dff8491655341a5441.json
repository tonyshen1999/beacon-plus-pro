{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/renovation/component_wrapper/editors/editor.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isDefined } from \"../../../core/utils/type\";\nimport Component from \"../common/component\";\nimport ValidationEngine from \"../../../ui/validation_engine\";\nimport { extend } from \"../../../core/utils/extend\";\nimport $ from \"../../../core/renderer\";\nimport { data } from \"../../../core/element_data\";\nimport Callbacks from \"../../../core/utils/callbacks\";\nimport OldEditor from \"../../../ui/editor/editor\";\nvar INVALID_MESSAGE_AUTO = \"dx-invalid-message-auto\";\nvar VALIDATION_TARGET = \"dx-validation-target\";\n\nvar Editor = /*#__PURE__*/function (_Component) {\n  _inherits(Editor, _Component);\n\n  var _super = _createSuper(Editor);\n\n  function Editor() {\n    _classCallCheck(this, Editor);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Editor, [{\n    key: \"getProps\",\n    value: function getProps() {\n      var _this = this;\n\n      var props = _get(_getPrototypeOf(Editor.prototype), \"getProps\", this).call(this);\n\n      props.onFocusIn = function () {\n        var isValidationMessageShownOnFocus = \"auto\" === _this.option(\"validationMessageMode\");\n\n        if (isValidationMessageShownOnFocus) {\n          var $validationMessageWrapper = $(\".dx-invalid-message.dx-overlay-wrapper\");\n          null === $validationMessageWrapper || void 0 === $validationMessageWrapper ? void 0 : $validationMessageWrapper.removeClass(INVALID_MESSAGE_AUTO);\n\n          if (_this.showValidationMessageTimeout) {\n            clearTimeout(_this.showValidationMessageTimeout);\n          }\n\n          _this.showValidationMessageTimeout = setTimeout(function () {\n            null === $validationMessageWrapper || void 0 === $validationMessageWrapper ? void 0 : $validationMessageWrapper.addClass(INVALID_MESSAGE_AUTO);\n          }, 150);\n        }\n      };\n\n      props.saveValueChangeEvent = function (e) {\n        _this._valueChangeEventInstance = e;\n      };\n\n      return props;\n    }\n  }, {\n    key: \"_createElement\",\n    value: function _createElement(element) {\n      _get(_getPrototypeOf(Editor.prototype), \"_createElement\", this).call(this, element);\n\n      this.showValidationMessageTimeout = void 0;\n      this.validationRequest = Callbacks();\n      data(this.$element()[0], VALIDATION_TARGET, this);\n    }\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      var _this$option;\n\n      null === (_this$option = this.option(\"_onMarkupRendered\")) || void 0 === _this$option ? void 0 : _this$option();\n    }\n  }, {\n    key: \"_initializeComponent\",\n    value: function _initializeComponent() {\n      _get(_getPrototypeOf(Editor.prototype), \"_initializeComponent\", this).call(this);\n\n      this._valueChangeAction = this._createActionByOption(\"onValueChanged\", {\n        excludeValidators: [\"disabled\", \"readOnly\"]\n      });\n    }\n  }, {\n    key: \"_initOptions\",\n    value: function _initOptions(options) {\n      _get(_getPrototypeOf(Editor.prototype), \"_initOptions\", this).call(this, options);\n\n      this.option(ValidationEngine.initValidationOptions(options));\n    }\n  }, {\n    key: \"_getDefaultOptions\",\n    value: function _getDefaultOptions() {\n      return extend(_get(_getPrototypeOf(Editor.prototype), \"_getDefaultOptions\", this).call(this), {\n        validationMessageOffset: {\n          h: 0,\n          v: 0\n        },\n        validationTooltipOptions: {}\n      });\n    }\n  }, {\n    key: \"_bindInnerWidgetOptions\",\n    value: function _bindInnerWidgetOptions(innerWidget, optionsContainer) {\n      var _this2 = this;\n\n      var innerWidgetOptions = extend({}, innerWidget.option());\n\n      var syncOptions = function syncOptions() {\n        return _this2._silent(optionsContainer, innerWidgetOptions);\n      };\n\n      syncOptions();\n      innerWidget.on(\"optionChanged\", syncOptions);\n    }\n  }, {\n    key: \"_raiseValidation\",\n    value: function _raiseValidation(value, previousValue) {\n      var areValuesEmpty = !isDefined(value) && !isDefined(previousValue);\n\n      if (value !== previousValue && !areValuesEmpty) {\n        this.validationRequest.fire({\n          value: value,\n          editor: this\n        });\n      }\n    }\n  }, {\n    key: \"_raiseValueChangeAction\",\n    value: function _raiseValueChangeAction(value, previousValue) {\n      var _this$_valueChangeAct;\n\n      null === (_this$_valueChangeAct = this._valueChangeAction) || void 0 === _this$_valueChangeAct ? void 0 : _this$_valueChangeAct.call(this, {\n        element: this.$element(),\n        previousValue: previousValue,\n        value: value,\n        event: this._valueChangeEventInstance\n      });\n      this._valueChangeEventInstance = void 0;\n    }\n  }, {\n    key: \"_optionChanged\",\n    value: function _optionChanged(option) {\n      var name = option.name,\n          previousValue = option.previousValue,\n          value = option.value;\n\n      if (name && void 0 !== this._getActionConfigs()[name]) {\n        this._addAction(name);\n      }\n\n      switch (name) {\n        case \"value\":\n          this._raiseValidation(value, previousValue);\n\n          this._raiseValueChangeAction(value, previousValue);\n\n          break;\n\n        case \"onValueChanged\":\n          this._valueChangeAction = this._createActionByOption(\"onValueChanged\", {\n            excludeValidators: [\"disabled\", \"readOnly\"]\n          });\n          break;\n\n        case \"isValid\":\n        case \"validationError\":\n        case \"validationErrors\":\n        case \"validationStatus\":\n          this.option(ValidationEngine.synchronizeValidationOptions(option, this.option()));\n      }\n\n      _get(_getPrototypeOf(Editor.prototype), \"_optionChanged\", this).call(this, option);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var _this$_getDefaultOpti = this._getDefaultOptions(),\n          value = _this$_getDefaultOpti.value;\n\n      this.option({\n        value: value\n      });\n    }\n  }, {\n    key: \"_dispose\",\n    value: function _dispose() {\n      _get(_getPrototypeOf(Editor.prototype), \"_dispose\", this).call(this);\n\n      data(this.element(), VALIDATION_TARGET, null);\n\n      if (this.showValidationMessageTimeout) {\n        clearTimeout(this.showValidationMessageTimeout);\n      }\n    }\n  }]);\n\n  return Editor;\n}(Component);\n\nexport { Editor as default };\nvar prevIsEditor = OldEditor.isEditor;\n\nvar newIsEditor = function newIsEditor(instance) {\n  return prevIsEditor(instance) || instance instanceof Editor;\n};\n\nEditor.isEditor = newIsEditor;\nOldEditor.isEditor = newIsEditor;","map":null,"metadata":{},"sourceType":"module"}