{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/ui/html_editor/formats/link.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Quill from \"devextreme-quill\";\nimport { isObject } from \"../../../core/utils/type\";\nvar ExtLink = {};\n\nif (Quill) {\n  var Link = Quill.import(\"formats/link\");\n\n  ExtLink = /*#__PURE__*/function (_Link) {\n    _inherits(ExtLink, _Link);\n\n    var _super = _createSuper(ExtLink);\n\n    function ExtLink() {\n      _classCallCheck(this, ExtLink);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(ExtLink, [{\n      key: \"formats\",\n      value: function formats() {\n        var formats = _get(_getPrototypeOf(ExtLink.prototype), \"formats\", this).call(this);\n\n        var _ExtLink$formats = ExtLink.formats(this.domNode),\n            href = _ExtLink$formats.href,\n            target = _ExtLink$formats.target;\n\n        formats.link = href;\n        formats.target = target;\n        return formats;\n      }\n    }, {\n      key: \"format\",\n      value: function format(name, value) {\n        if (\"link\" === name && isObject(value)) {\n          if (value.text) {\n            this.domNode.innerText = value.text;\n          }\n\n          if (value.target) {\n            this.domNode.setAttribute(\"target\", \"_blank\");\n          } else {\n            this.domNode.removeAttribute(\"target\");\n          }\n\n          this.domNode.setAttribute(\"href\", value.href);\n        } else {\n          _get(_getPrototypeOf(ExtLink.prototype), \"format\", this).call(this, name, value);\n        }\n      }\n    }], [{\n      key: \"create\",\n      value: function create(data) {\n        var HREF = data && data.href || data;\n\n        var node = _get(_getPrototypeOf(ExtLink), \"create\", this).call(this, HREF);\n\n        if (isObject(data)) {\n          if (data.text) {\n            node.innerText = data.text;\n          }\n\n          if (!data.target) {\n            node.removeAttribute(\"target\");\n          }\n        }\n\n        return node;\n      }\n    }, {\n      key: \"formats\",\n      value: function formats(domNode) {\n        return {\n          href: domNode.getAttribute(\"href\"),\n          target: domNode.getAttribute(\"target\")\n        };\n      }\n    }, {\n      key: \"value\",\n      value: function value(domNode) {\n        return {\n          href: domNode.getAttribute(\"href\"),\n          text: domNode.innerText,\n          target: !!domNode.getAttribute(\"target\")\n        };\n      }\n    }]);\n\n    return ExtLink;\n  }(Link);\n}\n\nexport default ExtLink;","map":null,"metadata":{},"sourceType":"module"}