{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, ContentChildren, QueryList, Component, NgModule } from '@angular/core';\nimport DxPopup from 'devextreme/ui/popup';\nimport { DxComponent, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxiToolbarItemComponent, DxoAnimationModule, DxoHideModule, DxoFromModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxoToModule, DxoShowModule, DxiToolbarItemModule } from 'devextreme-angular/ui/nested';\n/*!\r\n * devextreme-angular\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\n\n/**\r\n * The Popup UI component is a pop-up window overlaying the current view.\r\n\r\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'devextreme-angular/core';\nimport * as ɵngcc2 from '@angular/platform-browser';\nvar _c0 = [\"*\"];\nvar DxPopupComponent = /*#__PURE__*/(function () {\n  var DxPopupComponent = /*#__PURE__*/function (_DxComponent) {\n    _inherits(DxPopupComponent, _DxComponent);\n\n    var _super = _createSuper(DxPopupComponent);\n\n    function DxPopupComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\n      var _this;\n\n      _classCallCheck(this, DxPopupComponent);\n\n      _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\n      _this._watcherHelper = _watcherHelper;\n      _this._idh = _idh;\n\n      _this._createEventEmitters([{\n        subscribe: 'contentReady',\n        emit: 'onContentReady'\n      }, {\n        subscribe: 'disposing',\n        emit: 'onDisposing'\n      }, {\n        subscribe: 'hidden',\n        emit: 'onHidden'\n      }, {\n        subscribe: 'hiding',\n        emit: 'onHiding'\n      }, {\n        subscribe: 'initialized',\n        emit: 'onInitialized'\n      }, {\n        subscribe: 'optionChanged',\n        emit: 'onOptionChanged'\n      }, {\n        subscribe: 'resize',\n        emit: 'onResize'\n      }, {\n        subscribe: 'resizeEnd',\n        emit: 'onResizeEnd'\n      }, {\n        subscribe: 'resizeStart',\n        emit: 'onResizeStart'\n      }, {\n        subscribe: 'showing',\n        emit: 'onShowing'\n      }, {\n        subscribe: 'shown',\n        emit: 'onShown'\n      }, {\n        subscribe: 'titleRendered',\n        emit: 'onTitleRendered'\n      }, {\n        emit: 'accessKeyChange'\n      }, {\n        emit: 'animationChange'\n      }, {\n        emit: 'closeOnOutsideClickChange'\n      }, {\n        emit: 'containerChange'\n      }, {\n        emit: 'contentTemplateChange'\n      }, {\n        emit: 'copyRootClassesToWrapperChange'\n      }, {\n        emit: 'deferRenderingChange'\n      }, {\n        emit: 'disabledChange'\n      }, {\n        emit: 'dragAndResizeAreaChange'\n      }, {\n        emit: 'dragEnabledChange'\n      }, {\n        emit: 'dragOutsideBoundaryChange'\n      }, {\n        emit: 'elementAttrChange'\n      }, {\n        emit: 'focusStateEnabledChange'\n      }, {\n        emit: 'fullScreenChange'\n      }, {\n        emit: 'heightChange'\n      }, {\n        emit: 'hideOnParentScrollChange'\n      }, {\n        emit: 'hintChange'\n      }, {\n        emit: 'hoverStateEnabledChange'\n      }, {\n        emit: 'maxHeightChange'\n      }, {\n        emit: 'maxWidthChange'\n      }, {\n        emit: 'minHeightChange'\n      }, {\n        emit: 'minWidthChange'\n      }, {\n        emit: 'positionChange'\n      }, {\n        emit: 'resizeEnabledChange'\n      }, {\n        emit: 'restorePositionChange'\n      }, {\n        emit: 'rtlEnabledChange'\n      }, {\n        emit: 'shadingChange'\n      }, {\n        emit: 'shadingColorChange'\n      }, {\n        emit: 'showCloseButtonChange'\n      }, {\n        emit: 'showTitleChange'\n      }, {\n        emit: 'tabIndexChange'\n      }, {\n        emit: 'titleChange'\n      }, {\n        emit: 'titleTemplateChange'\n      }, {\n        emit: 'toolbarItemsChange'\n      }, {\n        emit: 'visibleChange'\n      }, {\n        emit: 'widthChange'\n      }, {\n        emit: 'wrapperAttrChange'\n      }]);\n\n      _this._idh.setHost(_assertThisInitialized(_this));\n\n      optionHost.setHost(_assertThisInitialized(_this));\n      return _this;\n    }\n    /**\r\n     * Specifies the shortcut key that sets focus on the UI component.\r\n    \r\n     */\n\n\n    _createClass(DxPopupComponent, [{\n      key: \"accessKey\",\n      get: function get() {\n        return this._getOption('accessKey');\n      },\n      set: function set(value) {\n        this._setOption('accessKey', value);\n      }\n      /**\r\n       * Configures UI component visibility animations. This object contains two fields: show and hide.\r\n      \r\n       */\n\n    }, {\n      key: \"animation\",\n      get: function get() {\n        return this._getOption('animation');\n      },\n      set: function set(value) {\n        this._setOption('animation', value);\n      }\n      /**\r\n       * Specifies whether to close the UI component if a user clicks outside it.\r\n      \r\n       */\n\n    }, {\n      key: \"closeOnOutsideClick\",\n      get: function get() {\n        return this._getOption('closeOnOutsideClick');\n      },\n      set: function set(value) {\n        this._setOption('closeOnOutsideClick', value);\n      }\n      /**\r\n       * Specifies the container in which to render the UI component.\r\n      \r\n       */\n\n    }, {\n      key: \"container\",\n      get: function get() {\n        return this._getOption('container');\n      },\n      set: function set(value) {\n        this._setOption('container', value);\n      }\n      /**\r\n       * Specifies a custom template for the UI component content.\r\n      \r\n       */\n\n    }, {\n      key: \"contentTemplate\",\n      get: function get() {\n        return this._getOption('contentTemplate');\n      },\n      set: function set(value) {\n        this._setOption('contentTemplate', value);\n      }\n      /**\r\n       * Copies your custom CSS classes from the root element to the wrapper element.\r\n      \r\n       * @deprecated Use the wrapperAttr property instead.\r\n      \r\n       */\n\n    }, {\n      key: \"copyRootClassesToWrapper\",\n      get: function get() {\n        return this._getOption('copyRootClassesToWrapper');\n      },\n      set: function set(value) {\n        this._setOption('copyRootClassesToWrapper', value);\n      }\n      /**\r\n       * Specifies whether to render the UI component&apos;s content when it is displayed. If false, the content is rendered immediately.\r\n      \r\n       */\n\n    }, {\n      key: \"deferRendering\",\n      get: function get() {\n        return this._getOption('deferRendering');\n      },\n      set: function set(value) {\n        this._setOption('deferRendering', value);\n      }\n      /**\r\n       * Specifies whether the UI component responds to user interaction.\r\n      \r\n       */\n\n    }, {\n      key: \"disabled\",\n      get: function get() {\n        return this._getOption('disabled');\n      },\n      set: function set(value) {\n        this._setOption('disabled', value);\n      }\n      /**\r\n       * Specifies an element with boundaries within which users can drag and resize the widget. Ignored if the dragOutsideBoundary property is set to true.\r\n      \r\n       */\n\n    }, {\n      key: \"dragAndResizeArea\",\n      get: function get() {\n        return this._getOption('dragAndResizeArea');\n      },\n      set: function set(value) {\n        this._setOption('dragAndResizeArea', value);\n      }\n      /**\r\n       * Specifies whether or not to allow a user to drag the popup window.\r\n      \r\n       */\n\n    }, {\n      key: \"dragEnabled\",\n      get: function get() {\n        return this._getOption('dragEnabled');\n      },\n      set: function set(value) {\n        this._setOption('dragEnabled', value);\n      }\n      /**\r\n       * Allows users to drag the widget within the browser window or beyond the window&apos;s borders.\r\n      \r\n       */\n\n    }, {\n      key: \"dragOutsideBoundary\",\n      get: function get() {\n        return this._getOption('dragOutsideBoundary');\n      },\n      set: function set(value) {\n        this._setOption('dragOutsideBoundary', value);\n      }\n      /**\r\n       * Specifies the global attributes to be attached to the UI component&apos;s container element.\r\n      \r\n       * @deprecated Use the wrapperAttr option instead.\r\n      \r\n       */\n\n    }, {\n      key: \"elementAttr\",\n      get: function get() {\n        return this._getOption('elementAttr');\n      },\n      set: function set(value) {\n        this._setOption('elementAttr', value);\n      }\n      /**\r\n       * Specifies whether the UI component can be focused using keyboard navigation.\r\n      \r\n       */\n\n    }, {\n      key: \"focusStateEnabled\",\n      get: function get() {\n        return this._getOption('focusStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('focusStateEnabled', value);\n      }\n      /**\r\n       * Specifies whether to display the Popup in full-screen mode.\r\n      \r\n       */\n\n    }, {\n      key: \"fullScreen\",\n      get: function get() {\n        return this._getOption('fullScreen');\n      },\n      set: function set(value) {\n        this._setOption('fullScreen', value);\n      }\n      /**\r\n       * Specifies the UI component&apos;s height.\r\n      \r\n       */\n\n    }, {\n      key: \"height\",\n      get: function get() {\n        return this._getOption('height');\n      },\n      set: function set(value) {\n        this._setOption('height', value);\n      }\n      /**\r\n       * Specifies whether to hide the widget when users scroll one of its parent elements.\r\n      \r\n       */\n\n    }, {\n      key: \"hideOnParentScroll\",\n      get: function get() {\n        return this._getOption('hideOnParentScroll');\n      },\n      set: function set(value) {\n        this._setOption('hideOnParentScroll', value);\n      }\n      /**\r\n       * Specifies text for a hint that appears when a user pauses on the UI component.\r\n      \r\n       */\n\n    }, {\n      key: \"hint\",\n      get: function get() {\n        return this._getOption('hint');\n      },\n      set: function set(value) {\n        this._setOption('hint', value);\n      }\n      /**\r\n       * Specifies whether the UI component changes its state when a user pauses on it.\r\n      \r\n       */\n\n    }, {\n      key: \"hoverStateEnabled\",\n      get: function get() {\n        return this._getOption('hoverStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('hoverStateEnabled', value);\n      }\n      /**\r\n       * Specifies the maximum height the UI component can reach while resizing.\r\n      \r\n       */\n\n    }, {\n      key: \"maxHeight\",\n      get: function get() {\n        return this._getOption('maxHeight');\n      },\n      set: function set(value) {\n        this._setOption('maxHeight', value);\n      }\n      /**\r\n       * Specifies the maximum width the UI component can reach while resizing.\r\n      \r\n       */\n\n    }, {\n      key: \"maxWidth\",\n      get: function get() {\n        return this._getOption('maxWidth');\n      },\n      set: function set(value) {\n        this._setOption('maxWidth', value);\n      }\n      /**\r\n       * Specifies the minimum height the UI component can reach while resizing.\r\n      \r\n       */\n\n    }, {\n      key: \"minHeight\",\n      get: function get() {\n        return this._getOption('minHeight');\n      },\n      set: function set(value) {\n        this._setOption('minHeight', value);\n      }\n      /**\r\n       * Specifies the minimum width the UI component can reach while resizing.\r\n      \r\n       */\n\n    }, {\n      key: \"minWidth\",\n      get: function get() {\n        return this._getOption('minWidth');\n      },\n      set: function set(value) {\n        this._setOption('minWidth', value);\n      }\n      /**\r\n       * Positions the UI component.\r\n      \r\n       */\n\n    }, {\n      key: \"position\",\n      get: function get() {\n        return this._getOption('position');\n      },\n      set: function set(value) {\n        this._setOption('position', value);\n      }\n      /**\r\n       * Specifies whether or not an end user can resize the UI component.\r\n      \r\n       */\n\n    }, {\n      key: \"resizeEnabled\",\n      get: function get() {\n        return this._getOption('resizeEnabled');\n      },\n      set: function set(value) {\n        this._setOption('resizeEnabled', value);\n      }\n      /**\r\n       * Specifies whether to display the widget at the initial position when users reopen it.\r\n      \r\n       */\n\n    }, {\n      key: \"restorePosition\",\n      get: function get() {\n        return this._getOption('restorePosition');\n      },\n      set: function set(value) {\n        this._setOption('restorePosition', value);\n      }\n      /**\r\n       * Switches the UI component to a right-to-left representation.\r\n      \r\n       */\n\n    }, {\n      key: \"rtlEnabled\",\n      get: function get() {\n        return this._getOption('rtlEnabled');\n      },\n      set: function set(value) {\n        this._setOption('rtlEnabled', value);\n      }\n      /**\r\n       * Specifies whether to shade the background when the UI component is active.\r\n      \r\n       */\n\n    }, {\n      key: \"shading\",\n      get: function get() {\n        return this._getOption('shading');\n      },\n      set: function set(value) {\n        this._setOption('shading', value);\n      }\n      /**\r\n       * Specifies the shading color. Applies only if shading is enabled.\r\n      \r\n       */\n\n    }, {\n      key: \"shadingColor\",\n      get: function get() {\n        return this._getOption('shadingColor');\n      },\n      set: function set(value) {\n        this._setOption('shadingColor', value);\n      }\n      /**\r\n       * Specifies whether or not the UI component displays the Close button.\r\n      \r\n       */\n\n    }, {\n      key: \"showCloseButton\",\n      get: function get() {\n        return this._getOption('showCloseButton');\n      },\n      set: function set(value) {\n        this._setOption('showCloseButton', value);\n      }\n      /**\r\n       * A Boolean value specifying whether or not to display the title in the popup window.\r\n      \r\n       */\n\n    }, {\n      key: \"showTitle\",\n      get: function get() {\n        return this._getOption('showTitle');\n      },\n      set: function set(value) {\n        this._setOption('showTitle', value);\n      }\n      /**\r\n       * Specifies the number of the element when the Tab key is used for navigating.\r\n      \r\n       */\n\n    }, {\n      key: \"tabIndex\",\n      get: function get() {\n        return this._getOption('tabIndex');\n      },\n      set: function set(value) {\n        this._setOption('tabIndex', value);\n      }\n      /**\r\n       * The title in the overlay window.\r\n      \r\n       */\n\n    }, {\n      key: \"title\",\n      get: function get() {\n        return this._getOption('title');\n      },\n      set: function set(value) {\n        this._setOption('title', value);\n      }\n      /**\r\n       * Specifies a custom template for the UI component title. Does not apply if the title is defined.\r\n      \r\n       */\n\n    }, {\n      key: \"titleTemplate\",\n      get: function get() {\n        return this._getOption('titleTemplate');\n      },\n      set: function set(value) {\n        this._setOption('titleTemplate', value);\n      }\n      /**\r\n       * Configures toolbar items.\r\n      \r\n       */\n\n    }, {\n      key: \"toolbarItems\",\n      get: function get() {\n        return this._getOption('toolbarItems');\n      },\n      set: function set(value) {\n        this._setOption('toolbarItems', value);\n      }\n      /**\r\n       * A Boolean value specifying whether or not the UI component is visible.\r\n      \r\n       */\n\n    }, {\n      key: \"visible\",\n      get: function get() {\n        return this._getOption('visible');\n      },\n      set: function set(value) {\n        this._setOption('visible', value);\n      }\n      /**\r\n       * Specifies the UI component&apos;s width.\r\n      \r\n       */\n\n    }, {\n      key: \"width\",\n      get: function get() {\n        return this._getOption('width');\n      },\n      set: function set(value) {\n        this._setOption('width', value);\n      }\n      /**\r\n       * Specifies the global attributes for the UI component&apos;s wrapper element.\r\n      \r\n       */\n\n    }, {\n      key: \"wrapperAttr\",\n      get: function get() {\n        return this._getOption('wrapperAttr');\n      },\n      set: function set(value) {\n        this._setOption('wrapperAttr', value);\n      }\n    }, {\n      key: \"toolbarItemsChildren\",\n      get: function get() {\n        return this._getOption('toolbarItems');\n      },\n      set: function set(value) {\n        this.setChildren('toolbarItems', value);\n      }\n    }, {\n      key: \"_createInstance\",\n      value: function _createInstance(element, options) {\n        return new DxPopup(element, options);\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._destroyWidget();\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        _get(_getPrototypeOf(DxPopupComponent.prototype), \"ngOnChanges\", this).call(this, changes);\n\n        this.setupChanges('toolbarItems', changes);\n      }\n    }, {\n      key: \"setupChanges\",\n      value: function setupChanges(prop, changes) {\n        if (!(prop in this._optionsToUpdate)) {\n          this._idh.setup(prop, changes);\n        }\n      }\n    }, {\n      key: \"ngDoCheck\",\n      value: function ngDoCheck() {\n        this._idh.doCheck('toolbarItems');\n\n        this._watcherHelper.checkWatchers();\n\n        _get(_getPrototypeOf(DxPopupComponent.prototype), \"ngDoCheck\", this).call(this);\n\n        _get(_getPrototypeOf(DxPopupComponent.prototype), \"clearChangedOptions\", this).call(this);\n      }\n    }, {\n      key: \"_setOption\",\n      value: function _setOption(name, value) {\n        var isSetup = this._idh.setupSingle(name, value);\n\n        var isChanged = this._idh.getChanges(name, value) !== null;\n\n        if (isSetup || isChanged) {\n          _get(_getPrototypeOf(DxPopupComponent.prototype), \"_setOption\", this).call(this, name, value);\n        }\n      }\n    }]);\n\n    return DxPopupComponent;\n  }(DxComponent);\n\n  DxPopupComponent.ɵfac = function DxPopupComponent_Factory(t) {\n    return new (t || DxPopupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.WatcherHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IterableDifferHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TransferState), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n\n  DxPopupComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DxPopupComponent,\n    selectors: [[\"dx-popup\"]],\n    contentQueries: function DxPopupComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DxiToolbarItemComponent, 4);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.toolbarItemsChildren = _t);\n      }\n    },\n    inputs: {\n      accessKey: \"accessKey\",\n      animation: \"animation\",\n      closeOnOutsideClick: \"closeOnOutsideClick\",\n      container: \"container\",\n      contentTemplate: \"contentTemplate\",\n      copyRootClassesToWrapper: \"copyRootClassesToWrapper\",\n      deferRendering: \"deferRendering\",\n      disabled: \"disabled\",\n      dragAndResizeArea: \"dragAndResizeArea\",\n      dragEnabled: \"dragEnabled\",\n      dragOutsideBoundary: \"dragOutsideBoundary\",\n      elementAttr: \"elementAttr\",\n      focusStateEnabled: \"focusStateEnabled\",\n      fullScreen: \"fullScreen\",\n      height: \"height\",\n      hideOnParentScroll: \"hideOnParentScroll\",\n      hint: \"hint\",\n      hoverStateEnabled: \"hoverStateEnabled\",\n      maxHeight: \"maxHeight\",\n      maxWidth: \"maxWidth\",\n      minHeight: \"minHeight\",\n      minWidth: \"minWidth\",\n      position: \"position\",\n      resizeEnabled: \"resizeEnabled\",\n      restorePosition: \"restorePosition\",\n      rtlEnabled: \"rtlEnabled\",\n      shading: \"shading\",\n      shadingColor: \"shadingColor\",\n      showCloseButton: \"showCloseButton\",\n      showTitle: \"showTitle\",\n      tabIndex: \"tabIndex\",\n      title: \"title\",\n      titleTemplate: \"titleTemplate\",\n      toolbarItems: \"toolbarItems\",\n      visible: \"visible\",\n      width: \"width\",\n      wrapperAttr: \"wrapperAttr\"\n    },\n    outputs: {\n      onContentReady: \"onContentReady\",\n      onDisposing: \"onDisposing\",\n      onHidden: \"onHidden\",\n      onHiding: \"onHiding\",\n      onInitialized: \"onInitialized\",\n      onOptionChanged: \"onOptionChanged\",\n      onResize: \"onResize\",\n      onResizeEnd: \"onResizeEnd\",\n      onResizeStart: \"onResizeStart\",\n      onShowing: \"onShowing\",\n      onShown: \"onShown\",\n      onTitleRendered: \"onTitleRendered\",\n      accessKeyChange: \"accessKeyChange\",\n      animationChange: \"animationChange\",\n      closeOnOutsideClickChange: \"closeOnOutsideClickChange\",\n      containerChange: \"containerChange\",\n      contentTemplateChange: \"contentTemplateChange\",\n      copyRootClassesToWrapperChange: \"copyRootClassesToWrapperChange\",\n      deferRenderingChange: \"deferRenderingChange\",\n      disabledChange: \"disabledChange\",\n      dragAndResizeAreaChange: \"dragAndResizeAreaChange\",\n      dragEnabledChange: \"dragEnabledChange\",\n      dragOutsideBoundaryChange: \"dragOutsideBoundaryChange\",\n      elementAttrChange: \"elementAttrChange\",\n      focusStateEnabledChange: \"focusStateEnabledChange\",\n      fullScreenChange: \"fullScreenChange\",\n      heightChange: \"heightChange\",\n      hideOnParentScrollChange: \"hideOnParentScrollChange\",\n      hintChange: \"hintChange\",\n      hoverStateEnabledChange: \"hoverStateEnabledChange\",\n      maxHeightChange: \"maxHeightChange\",\n      maxWidthChange: \"maxWidthChange\",\n      minHeightChange: \"minHeightChange\",\n      minWidthChange: \"minWidthChange\",\n      positionChange: \"positionChange\",\n      resizeEnabledChange: \"resizeEnabledChange\",\n      restorePositionChange: \"restorePositionChange\",\n      rtlEnabledChange: \"rtlEnabledChange\",\n      shadingChange: \"shadingChange\",\n      shadingColorChange: \"shadingColorChange\",\n      showCloseButtonChange: \"showCloseButtonChange\",\n      showTitleChange: \"showTitleChange\",\n      tabIndexChange: \"tabIndexChange\",\n      titleChange: \"titleChange\",\n      titleTemplateChange: \"titleTemplateChange\",\n      toolbarItemsChange: \"toolbarItemsChange\",\n      visibleChange: \"visibleChange\",\n      widthChange: \"widthChange\",\n      wrapperAttrChange: \"wrapperAttrChange\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([DxTemplateHost, WatcherHelper, NestedOptionHost, IterableDifferHelper]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function DxPopupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxPopupComponent.prototype, \"accessKey\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPopupComponent.prototype, \"animation\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPopupComponent.prototype, \"closeOnOutsideClick\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPopupComponent.prototype, \"container\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPopupComponent.prototype, \"contentTemplate\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPopupComponent.prototype, \"copyRootClassesToWrapper\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPopupComponent.prototype, \"deferRendering\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPopupComponent.prototype, \"disabled\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPopupComponent.prototype, \"dragAndResizeArea\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPopupComponent.prototype, \"dragEnabled\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPopupComponent.prototype, \"dragOutsideBoundary\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPopupComponent.prototype, \"elementAttr\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPopupComponent.prototype, \"focusStateEnabled\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPopupComponent.prototype, \"fullScreen\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPopupComponent.prototype, \"height\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPopupComponent.prototype, \"hideOnParentScroll\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxPopupComponent.prototype, \"hint\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPopupComponent.prototype, \"hoverStateEnabled\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPopupComponent.prototype, \"maxHeight\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPopupComponent.prototype, \"maxWidth\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPopupComponent.prototype, \"minHeight\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPopupComponent.prototype, \"minWidth\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPopupComponent.prototype, \"position\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPopupComponent.prototype, \"resizeEnabled\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPopupComponent.prototype, \"restorePosition\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPopupComponent.prototype, \"rtlEnabled\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPopupComponent.prototype, \"shading\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxPopupComponent.prototype, \"shadingColor\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPopupComponent.prototype, \"showCloseButton\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPopupComponent.prototype, \"showTitle\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], DxPopupComponent.prototype, \"tabIndex\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxPopupComponent.prototype, \"title\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPopupComponent.prototype, \"titleTemplate\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [Array])], DxPopupComponent.prototype, \"toolbarItems\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxPopupComponent.prototype, \"visible\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPopupComponent.prototype, \"width\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxPopupComponent.prototype, \"wrapperAttr\", null);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"onContentReady\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"onDisposing\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"onHidden\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"onHiding\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"onInitialized\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"onOptionChanged\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"onResize\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"onResizeEnd\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"onResizeStart\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"onShowing\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"onShown\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"onTitleRendered\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"accessKeyChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"animationChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"closeOnOutsideClickChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"containerChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"contentTemplateChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"copyRootClassesToWrapperChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"deferRenderingChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"disabledChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"dragAndResizeAreaChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"dragEnabledChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"dragOutsideBoundaryChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"elementAttrChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"focusStateEnabledChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"fullScreenChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"heightChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"hideOnParentScrollChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"hintChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"hoverStateEnabledChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"maxHeightChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"maxWidthChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"minHeightChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"minWidthChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"positionChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"resizeEnabledChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"restorePositionChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"rtlEnabledChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"shadingChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"shadingColorChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"showCloseButtonChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"showTitleChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"tabIndexChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"titleChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"titleTemplateChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"toolbarItemsChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"visibleChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"widthChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxPopupComponent.prototype, \"wrapperAttrChange\", void 0);\n\n  __decorate([ContentChildren(DxiToolbarItemComponent), __metadata(\"design:type\", QueryList), __metadata(\"design:paramtypes\", [Object])], DxPopupComponent.prototype, \"toolbarItemsChildren\", null);\n\n  DxPopupComponent = __decorate([__param(7, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, TransferState, Object])], DxPopupComponent);\n  return DxPopupComponent;\n})();\nvar DxPopupModule = /*#__PURE__*/(function () {\n  var DxPopupModule = /*#__PURE__*/_createClass(function DxPopupModule() {\n    _classCallCheck(this, DxPopupModule);\n  });\n\n  DxPopupModule.ɵfac = function DxPopupModule_Factory(t) {\n    return new (t || DxPopupModule)();\n  };\n\n  DxPopupModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DxPopupModule\n  });\n  DxPopupModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[DxoAnimationModule, DxoHideModule, DxoFromModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxoToModule, DxoShowModule, DxiToolbarItemModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule], DxoAnimationModule, DxoHideModule, DxoFromModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxoToModule, DxoShowModule, DxiToolbarItemModule, DxTemplateModule]\n  });\n  return DxPopupModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxPopupModule, {\n    declarations: function declarations() {\n      return [DxPopupComponent];\n    },\n    imports: function imports() {\n      return [DxoAnimationModule, DxoHideModule, DxoFromModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxoToModule, DxoShowModule, DxiToolbarItemModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule];\n    },\n    exports: function exports() {\n      return [DxPopupComponent, DxoAnimationModule, DxoHideModule, DxoFromModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxoToModule, DxoShowModule, DxiToolbarItemModule, DxTemplateModule];\n    }\n  });\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { DxPopupComponent, DxPopupModule }; //# sourceMappingURL=devextreme-angular-ui-popup.js.map","map":null,"metadata":{},"sourceType":"module"}