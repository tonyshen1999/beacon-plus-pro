{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\n/**\r\n * DevExtreme (esm/core/memorized_callbacks.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { each } from \"../core/utils/iterator\";\nimport Callbacks from \"./utils/callbacks\";\n\nvar MemorizedCallbacks = /*#__PURE__*/function () {\n  function MemorizedCallbacks() {\n    _classCallCheck(this, MemorizedCallbacks);\n\n    this.memory = [];\n    this.callbacks = Callbacks();\n  }\n\n  _createClass(MemorizedCallbacks, [{\n    key: \"add\",\n    value: function add(fn) {\n      each(this.memory, function (_, item) {\n        return fn.apply(fn, item);\n      });\n      this.callbacks.add(fn);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(fn) {\n      this.callbacks.remove(fn);\n    }\n  }, {\n    key: \"fire\",\n    value: function fire() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this.memory.push(args);\n      this.callbacks.fire.apply(this.callbacks, args);\n    }\n  }]);\n\n  return MemorizedCallbacks;\n}();\n\nexport { MemorizedCallbacks as default };","map":null,"metadata":{},"sourceType":"module"}