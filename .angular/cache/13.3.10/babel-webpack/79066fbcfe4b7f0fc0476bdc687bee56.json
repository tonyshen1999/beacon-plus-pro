{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, ContentChildren, QueryList, Component, NgModule } from '@angular/core';\nimport DxGantt from 'devextreme/ui/gantt';\nimport { DxComponent, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxiColumnComponent, DxiStripLineComponent, DxiColumnModule, DxiButtonModule, DxoHeaderFilterModule, DxoLookupModule, DxoFormatModule, DxoFormItemModule, DxoLabelModule, DxiValidationRuleModule, DxoContextMenuModule, DxiItemModule, DxoDependenciesModule, DxoEditingModule, DxoFilterRowModule, DxoOperationDescriptionsModule, DxoTextsModule, DxoResourceAssignmentsModule, DxoResourcesModule, DxoScaleTypeRangeModule, DxoSortingModule, DxiStripLineModule, DxoTasksModule, DxoToolbarModule, DxoValidationModule } from 'devextreme-angular/ui/nested';\n/*!\r\n * devextreme-angular\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\n\n/**\r\n * The Gantt is a UI component that displays the task flow and dependencies between tasks.\r\n\r\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'devextreme-angular/core';\nimport * as ɵngcc2 from '@angular/platform-browser';\nvar DxGanttComponent = /*#__PURE__*/(function () {\n  var DxGanttComponent = /*#__PURE__*/function (_DxComponent) {\n    _inherits(DxGanttComponent, _DxComponent);\n\n    var _super = _createSuper(DxGanttComponent);\n\n    function DxGanttComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\n      var _this;\n\n      _classCallCheck(this, DxGanttComponent);\n\n      _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\n      _this._watcherHelper = _watcherHelper;\n      _this._idh = _idh;\n\n      _this._createEventEmitters([{\n        subscribe: 'contentReady',\n        emit: 'onContentReady'\n      }, {\n        subscribe: 'contextMenuPreparing',\n        emit: 'onContextMenuPreparing'\n      }, {\n        subscribe: 'customCommand',\n        emit: 'onCustomCommand'\n      }, {\n        subscribe: 'dependencyDeleted',\n        emit: 'onDependencyDeleted'\n      }, {\n        subscribe: 'dependencyDeleting',\n        emit: 'onDependencyDeleting'\n      }, {\n        subscribe: 'dependencyInserted',\n        emit: 'onDependencyInserted'\n      }, {\n        subscribe: 'dependencyInserting',\n        emit: 'onDependencyInserting'\n      }, {\n        subscribe: 'disposing',\n        emit: 'onDisposing'\n      }, {\n        subscribe: 'initialized',\n        emit: 'onInitialized'\n      }, {\n        subscribe: 'optionChanged',\n        emit: 'onOptionChanged'\n      }, {\n        subscribe: 'resourceAssigned',\n        emit: 'onResourceAssigned'\n      }, {\n        subscribe: 'resourceAssigning',\n        emit: 'onResourceAssigning'\n      }, {\n        subscribe: 'resourceDeleted',\n        emit: 'onResourceDeleted'\n      }, {\n        subscribe: 'resourceDeleting',\n        emit: 'onResourceDeleting'\n      }, {\n        subscribe: 'resourceInserted',\n        emit: 'onResourceInserted'\n      }, {\n        subscribe: 'resourceInserting',\n        emit: 'onResourceInserting'\n      }, {\n        subscribe: 'resourceManagerDialogShowing',\n        emit: 'onResourceManagerDialogShowing'\n      }, {\n        subscribe: 'resourceUnassigned',\n        emit: 'onResourceUnassigned'\n      }, {\n        subscribe: 'resourceUnassigning',\n        emit: 'onResourceUnassigning'\n      }, {\n        subscribe: 'selectionChanged',\n        emit: 'onSelectionChanged'\n      }, {\n        subscribe: 'taskClick',\n        emit: 'onTaskClick'\n      }, {\n        subscribe: 'taskDblClick',\n        emit: 'onTaskDblClick'\n      }, {\n        subscribe: 'taskDeleted',\n        emit: 'onTaskDeleted'\n      }, {\n        subscribe: 'taskDeleting',\n        emit: 'onTaskDeleting'\n      }, {\n        subscribe: 'taskEditDialogShowing',\n        emit: 'onTaskEditDialogShowing'\n      }, {\n        subscribe: 'taskInserted',\n        emit: 'onTaskInserted'\n      }, {\n        subscribe: 'taskInserting',\n        emit: 'onTaskInserting'\n      }, {\n        subscribe: 'taskMoving',\n        emit: 'onTaskMoving'\n      }, {\n        subscribe: 'taskUpdated',\n        emit: 'onTaskUpdated'\n      }, {\n        subscribe: 'taskUpdating',\n        emit: 'onTaskUpdating'\n      }, {\n        emit: 'accessKeyChange'\n      }, {\n        emit: 'activeStateEnabledChange'\n      }, {\n        emit: 'allowSelectionChange'\n      }, {\n        emit: 'columnsChange'\n      }, {\n        emit: 'contextMenuChange'\n      }, {\n        emit: 'dependenciesChange'\n      }, {\n        emit: 'disabledChange'\n      }, {\n        emit: 'editingChange'\n      }, {\n        emit: 'elementAttrChange'\n      }, {\n        emit: 'endDateRangeChange'\n      }, {\n        emit: 'filterRowChange'\n      }, {\n        emit: 'firstDayOfWeekChange'\n      }, {\n        emit: 'focusStateEnabledChange'\n      }, {\n        emit: 'headerFilterChange'\n      }, {\n        emit: 'heightChange'\n      }, {\n        emit: 'hintChange'\n      }, {\n        emit: 'hoverStateEnabledChange'\n      }, {\n        emit: 'resourceAssignmentsChange'\n      }, {\n        emit: 'resourcesChange'\n      }, {\n        emit: 'rootValueChange'\n      }, {\n        emit: 'scaleTypeChange'\n      }, {\n        emit: 'scaleTypeRangeChange'\n      }, {\n        emit: 'selectedRowKeyChange'\n      }, {\n        emit: 'showDependenciesChange'\n      }, {\n        emit: 'showResourcesChange'\n      }, {\n        emit: 'showRowLinesChange'\n      }, {\n        emit: 'sortingChange'\n      }, {\n        emit: 'startDateRangeChange'\n      }, {\n        emit: 'stripLinesChange'\n      }, {\n        emit: 'tabIndexChange'\n      }, {\n        emit: 'taskContentTemplateChange'\n      }, {\n        emit: 'taskListWidthChange'\n      }, {\n        emit: 'taskProgressTooltipContentTemplateChange'\n      }, {\n        emit: 'tasksChange'\n      }, {\n        emit: 'taskTimeTooltipContentTemplateChange'\n      }, {\n        emit: 'taskTitlePositionChange'\n      }, {\n        emit: 'taskTooltipContentTemplateChange'\n      }, {\n        emit: 'toolbarChange'\n      }, {\n        emit: 'validationChange'\n      }, {\n        emit: 'visibleChange'\n      }, {\n        emit: 'widthChange'\n      }]);\n\n      _this._idh.setHost(_assertThisInitialized(_this));\n\n      optionHost.setHost(_assertThisInitialized(_this));\n      return _this;\n    }\n    /**\r\n     * Specifies the shortcut key that sets focus on the UI component.\r\n    \r\n     */\n\n\n    _createClass(DxGanttComponent, [{\n      key: \"accessKey\",\n      get: function get() {\n        return this._getOption('accessKey');\n      },\n      set: function set(value) {\n        this._setOption('accessKey', value);\n      }\n      /**\r\n       * Specifies whether or not the UI component changes its state when interacting with a user.\r\n      \r\n       */\n\n    }, {\n      key: \"activeStateEnabled\",\n      get: function get() {\n        return this._getOption('activeStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('activeStateEnabled', value);\n      }\n      /**\r\n       * Specifies whether users can select tasks in the Gantt.\r\n      \r\n       */\n\n    }, {\n      key: \"allowSelection\",\n      get: function get() {\n        return this._getOption('allowSelection');\n      },\n      set: function set(value) {\n        this._setOption('allowSelection', value);\n      }\n      /**\r\n       * An array of columns in the Gantt.\r\n      \r\n       */\n\n    }, {\n      key: \"columns\",\n      get: function get() {\n        return this._getOption('columns');\n      },\n      set: function set(value) {\n        this._setOption('columns', value);\n      }\n      /**\r\n       * Configures the context menu settings.\r\n      \r\n       */\n\n    }, {\n      key: \"contextMenu\",\n      get: function get() {\n        return this._getOption('contextMenu');\n      },\n      set: function set(value) {\n        this._setOption('contextMenu', value);\n      }\n      /**\r\n       * Configures dependencies.\r\n      \r\n       */\n\n    }, {\n      key: \"dependencies\",\n      get: function get() {\n        return this._getOption('dependencies');\n      },\n      set: function set(value) {\n        this._setOption('dependencies', value);\n      }\n      /**\r\n       * Specifies whether the UI component responds to user interaction.\r\n      \r\n       */\n\n    }, {\n      key: \"disabled\",\n      get: function get() {\n        return this._getOption('disabled');\n      },\n      set: function set(value) {\n        this._setOption('disabled', value);\n      }\n      /**\r\n       * Configures edit properties.\r\n      \r\n       */\n\n    }, {\n      key: \"editing\",\n      get: function get() {\n        return this._getOption('editing');\n      },\n      set: function set(value) {\n        this._setOption('editing', value);\n      }\n      /**\r\n       * Specifies the global attributes to be attached to the UI component&apos;s container element.\r\n      \r\n       */\n\n    }, {\n      key: \"elementAttr\",\n      get: function get() {\n        return this._getOption('elementAttr');\n      },\n      set: function set(value) {\n        this._setOption('elementAttr', value);\n      }\n      /**\r\n       * Specifies the end date of the date interval in the Gantt chart.\r\n      \r\n       */\n\n    }, {\n      key: \"endDateRange\",\n      get: function get() {\n        return this._getOption('endDateRange');\n      },\n      set: function set(value) {\n        this._setOption('endDateRange', value);\n      }\n      /**\r\n       * Configures filter row settings.\r\n      \r\n       */\n\n    }, {\n      key: \"filterRow\",\n      get: function get() {\n        return this._getOption('filterRow');\n      },\n      set: function set(value) {\n        this._setOption('filterRow', value);\n      }\n      /**\r\n       * Specifies the first day of a week.\r\n      \r\n       */\n\n    }, {\n      key: \"firstDayOfWeek\",\n      get: function get() {\n        return this._getOption('firstDayOfWeek');\n      },\n      set: function set(value) {\n        this._setOption('firstDayOfWeek', value);\n      }\n      /**\r\n       * Specifies whether the UI component can be focused using keyboard navigation.\r\n      \r\n       */\n\n    }, {\n      key: \"focusStateEnabled\",\n      get: function get() {\n        return this._getOption('focusStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('focusStateEnabled', value);\n      }\n      /**\r\n       * Configures the header filter settings.\r\n      \r\n       */\n\n    }, {\n      key: \"headerFilter\",\n      get: function get() {\n        return this._getOption('headerFilter');\n      },\n      set: function set(value) {\n        this._setOption('headerFilter', value);\n      }\n      /**\r\n       * Specifies the UI component&apos;s height.\r\n      \r\n       */\n\n    }, {\n      key: \"height\",\n      get: function get() {\n        return this._getOption('height');\n      },\n      set: function set(value) {\n        this._setOption('height', value);\n      }\n      /**\r\n       * Specifies text for a hint that appears when a user pauses on the UI component.\r\n      \r\n       */\n\n    }, {\n      key: \"hint\",\n      get: function get() {\n        return this._getOption('hint');\n      },\n      set: function set(value) {\n        this._setOption('hint', value);\n      }\n      /**\r\n       * Specifies whether the UI component changes its state when a user pauses on it.\r\n      \r\n       */\n\n    }, {\n      key: \"hoverStateEnabled\",\n      get: function get() {\n        return this._getOption('hoverStateEnabled');\n      },\n      set: function set(value) {\n        this._setOption('hoverStateEnabled', value);\n      }\n      /**\r\n       * Configures resource assignments.\r\n      \r\n       */\n\n    }, {\n      key: \"resourceAssignments\",\n      get: function get() {\n        return this._getOption('resourceAssignments');\n      },\n      set: function set(value) {\n        this._setOption('resourceAssignments', value);\n      }\n      /**\r\n       * Configures task resources.\r\n      \r\n       */\n\n    }, {\n      key: \"resources\",\n      get: function get() {\n        return this._getOption('resources');\n      },\n      set: function set(value) {\n        this._setOption('resources', value);\n      }\n      /**\r\n       * Specifies the root task&apos;s identifier.\r\n      \r\n       */\n\n    }, {\n      key: \"rootValue\",\n      get: function get() {\n        return this._getOption('rootValue');\n      },\n      set: function set(value) {\n        this._setOption('rootValue', value);\n      }\n      /**\r\n       * Specifies the zoom level of tasks in the Gantt chart.\r\n      \r\n       */\n\n    }, {\n      key: \"scaleType\",\n      get: function get() {\n        return this._getOption('scaleType');\n      },\n      set: function set(value) {\n        this._setOption('scaleType', value);\n      }\n      /**\r\n       * Configures zoom range settings.\r\n      \r\n       */\n\n    }, {\n      key: \"scaleTypeRange\",\n      get: function get() {\n        return this._getOption('scaleTypeRange');\n      },\n      set: function set(value) {\n        this._setOption('scaleTypeRange', value);\n      }\n      /**\r\n       * Allows you to select a row or determine which row is selected.\r\n      \r\n       */\n\n    }, {\n      key: \"selectedRowKey\",\n      get: function get() {\n        return this._getOption('selectedRowKey');\n      },\n      set: function set(value) {\n        this._setOption('selectedRowKey', value);\n      }\n      /**\r\n       * Specifies whether to display dependencies between tasks.\r\n      \r\n       */\n\n    }, {\n      key: \"showDependencies\",\n      get: function get() {\n        return this._getOption('showDependencies');\n      },\n      set: function set(value) {\n        this._setOption('showDependencies', value);\n      }\n      /**\r\n       * Specifies whether to display task resources.\r\n      \r\n       */\n\n    }, {\n      key: \"showResources\",\n      get: function get() {\n        return this._getOption('showResources');\n      },\n      set: function set(value) {\n        this._setOption('showResources', value);\n      }\n      /**\r\n       * Specifies whether to show/hide horizontal faint lines that separate tasks.\r\n      \r\n       */\n\n    }, {\n      key: \"showRowLines\",\n      get: function get() {\n        return this._getOption('showRowLines');\n      },\n      set: function set(value) {\n        this._setOption('showRowLines', value);\n      }\n      /**\r\n       * Configures sort settings.\r\n      \r\n       */\n\n    }, {\n      key: \"sorting\",\n      get: function get() {\n        return this._getOption('sorting');\n      },\n      set: function set(value) {\n        this._setOption('sorting', value);\n      }\n      /**\r\n       * Specifies the start date of the date interval in the Gantt chart.\r\n      \r\n       */\n\n    }, {\n      key: \"startDateRange\",\n      get: function get() {\n        return this._getOption('startDateRange');\n      },\n      set: function set(value) {\n        this._setOption('startDateRange', value);\n      }\n      /**\r\n       * Configures strip lines.\r\n      \r\n       */\n\n    }, {\n      key: \"stripLines\",\n      get: function get() {\n        return this._getOption('stripLines');\n      },\n      set: function set(value) {\n        this._setOption('stripLines', value);\n      }\n      /**\r\n       * Specifies the number of the element when the Tab key is used for navigating.\r\n      \r\n       */\n\n    }, {\n      key: \"tabIndex\",\n      get: function get() {\n        return this._getOption('tabIndex');\n      },\n      set: function set(value) {\n        this._setOption('tabIndex', value);\n      }\n      /**\r\n       * Specifies custom content for the task.\r\n      \r\n       */\n\n    }, {\n      key: \"taskContentTemplate\",\n      get: function get() {\n        return this._getOption('taskContentTemplate');\n      },\n      set: function set(value) {\n        this._setOption('taskContentTemplate', value);\n      }\n      /**\r\n       * Specifies the width of the task list in pixels.\r\n      \r\n       */\n\n    }, {\n      key: \"taskListWidth\",\n      get: function get() {\n        return this._getOption('taskListWidth');\n      },\n      set: function set(value) {\n        this._setOption('taskListWidth', value);\n      }\n      /**\r\n       * Specifies custom content for the tooltip that displays the task&apos;s progress while the progress handler is resized in the UI.\r\n      \r\n       */\n\n    }, {\n      key: \"taskProgressTooltipContentTemplate\",\n      get: function get() {\n        return this._getOption('taskProgressTooltipContentTemplate');\n      },\n      set: function set(value) {\n        this._setOption('taskProgressTooltipContentTemplate', value);\n      }\n      /**\r\n       * Configures tasks.\r\n      \r\n       */\n\n    }, {\n      key: \"tasks\",\n      get: function get() {\n        return this._getOption('tasks');\n      },\n      set: function set(value) {\n        this._setOption('tasks', value);\n      }\n      /**\r\n       * Specifies custom content for the tooltip that displays the task&apos;s start and end time while the task is resized in the UI.\r\n      \r\n       */\n\n    }, {\n      key: \"taskTimeTooltipContentTemplate\",\n      get: function get() {\n        return this._getOption('taskTimeTooltipContentTemplate');\n      },\n      set: function set(value) {\n        this._setOption('taskTimeTooltipContentTemplate', value);\n      }\n      /**\r\n       * Specifies a task&apos;s title position.\r\n      \r\n       */\n\n    }, {\n      key: \"taskTitlePosition\",\n      get: function get() {\n        return this._getOption('taskTitlePosition');\n      },\n      set: function set(value) {\n        this._setOption('taskTitlePosition', value);\n      }\n      /**\r\n       * Specifies custom content for the task tooltip.\r\n      \r\n       */\n\n    }, {\n      key: \"taskTooltipContentTemplate\",\n      get: function get() {\n        return this._getOption('taskTooltipContentTemplate');\n      },\n      set: function set(value) {\n        this._setOption('taskTooltipContentTemplate', value);\n      }\n      /**\r\n       * Configures toolbar settings.\r\n      \r\n       */\n\n    }, {\n      key: \"toolbar\",\n      get: function get() {\n        return this._getOption('toolbar');\n      },\n      set: function set(value) {\n        this._setOption('toolbar', value);\n      }\n      /**\r\n       * Configures validation properties.\r\n      \r\n       */\n\n    }, {\n      key: \"validation\",\n      get: function get() {\n        return this._getOption('validation');\n      },\n      set: function set(value) {\n        this._setOption('validation', value);\n      }\n      /**\r\n       * Specifies whether the UI component is visible.\r\n      \r\n       */\n\n    }, {\n      key: \"visible\",\n      get: function get() {\n        return this._getOption('visible');\n      },\n      set: function set(value) {\n        this._setOption('visible', value);\n      }\n      /**\r\n       * Specifies the UI component&apos;s width.\r\n      \r\n       */\n\n    }, {\n      key: \"width\",\n      get: function get() {\n        return this._getOption('width');\n      },\n      set: function set(value) {\n        this._setOption('width', value);\n      }\n    }, {\n      key: \"columnsChildren\",\n      get: function get() {\n        return this._getOption('columns');\n      },\n      set: function set(value) {\n        this.setChildren('columns', value);\n      }\n    }, {\n      key: \"stripLinesChildren\",\n      get: function get() {\n        return this._getOption('stripLines');\n      },\n      set: function set(value) {\n        this.setChildren('stripLines', value);\n      }\n    }, {\n      key: \"_createInstance\",\n      value: function _createInstance(element, options) {\n        return new DxGantt(element, options);\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._destroyWidget();\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        _get(_getPrototypeOf(DxGanttComponent.prototype), \"ngOnChanges\", this).call(this, changes);\n\n        this.setupChanges('columns', changes);\n        this.setupChanges('stripLines', changes);\n      }\n    }, {\n      key: \"setupChanges\",\n      value: function setupChanges(prop, changes) {\n        if (!(prop in this._optionsToUpdate)) {\n          this._idh.setup(prop, changes);\n        }\n      }\n    }, {\n      key: \"ngDoCheck\",\n      value: function ngDoCheck() {\n        this._idh.doCheck('columns');\n\n        this._idh.doCheck('stripLines');\n\n        this._watcherHelper.checkWatchers();\n\n        _get(_getPrototypeOf(DxGanttComponent.prototype), \"ngDoCheck\", this).call(this);\n\n        _get(_getPrototypeOf(DxGanttComponent.prototype), \"clearChangedOptions\", this).call(this);\n      }\n    }, {\n      key: \"_setOption\",\n      value: function _setOption(name, value) {\n        var isSetup = this._idh.setupSingle(name, value);\n\n        var isChanged = this._idh.getChanges(name, value) !== null;\n\n        if (isSetup || isChanged) {\n          _get(_getPrototypeOf(DxGanttComponent.prototype), \"_setOption\", this).call(this, name, value);\n        }\n      }\n    }]);\n\n    return DxGanttComponent;\n  }(DxComponent);\n\n  DxGanttComponent.ɵfac = function DxGanttComponent_Factory(t) {\n    return new (t || DxGanttComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.WatcherHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IterableDifferHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TransferState), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n\n  DxGanttComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DxGanttComponent,\n    selectors: [[\"dx-gantt\"]],\n    contentQueries: function DxGanttComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DxiColumnComponent, 4);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, DxiStripLineComponent, 4);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnsChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stripLinesChildren = _t);\n      }\n    },\n    inputs: {\n      accessKey: \"accessKey\",\n      activeStateEnabled: \"activeStateEnabled\",\n      allowSelection: \"allowSelection\",\n      columns: \"columns\",\n      contextMenu: \"contextMenu\",\n      dependencies: \"dependencies\",\n      disabled: \"disabled\",\n      editing: \"editing\",\n      elementAttr: \"elementAttr\",\n      endDateRange: \"endDateRange\",\n      filterRow: \"filterRow\",\n      firstDayOfWeek: \"firstDayOfWeek\",\n      focusStateEnabled: \"focusStateEnabled\",\n      headerFilter: \"headerFilter\",\n      height: \"height\",\n      hint: \"hint\",\n      hoverStateEnabled: \"hoverStateEnabled\",\n      resourceAssignments: \"resourceAssignments\",\n      resources: \"resources\",\n      rootValue: \"rootValue\",\n      scaleType: \"scaleType\",\n      scaleTypeRange: \"scaleTypeRange\",\n      selectedRowKey: \"selectedRowKey\",\n      showDependencies: \"showDependencies\",\n      showResources: \"showResources\",\n      showRowLines: \"showRowLines\",\n      sorting: \"sorting\",\n      startDateRange: \"startDateRange\",\n      stripLines: \"stripLines\",\n      tabIndex: \"tabIndex\",\n      taskContentTemplate: \"taskContentTemplate\",\n      taskListWidth: \"taskListWidth\",\n      taskProgressTooltipContentTemplate: \"taskProgressTooltipContentTemplate\",\n      tasks: \"tasks\",\n      taskTimeTooltipContentTemplate: \"taskTimeTooltipContentTemplate\",\n      taskTitlePosition: \"taskTitlePosition\",\n      taskTooltipContentTemplate: \"taskTooltipContentTemplate\",\n      toolbar: \"toolbar\",\n      validation: \"validation\",\n      visible: \"visible\",\n      width: \"width\"\n    },\n    outputs: {\n      onContentReady: \"onContentReady\",\n      onContextMenuPreparing: \"onContextMenuPreparing\",\n      onCustomCommand: \"onCustomCommand\",\n      onDependencyDeleted: \"onDependencyDeleted\",\n      onDependencyDeleting: \"onDependencyDeleting\",\n      onDependencyInserted: \"onDependencyInserted\",\n      onDependencyInserting: \"onDependencyInserting\",\n      onDisposing: \"onDisposing\",\n      onInitialized: \"onInitialized\",\n      onOptionChanged: \"onOptionChanged\",\n      onResourceAssigned: \"onResourceAssigned\",\n      onResourceAssigning: \"onResourceAssigning\",\n      onResourceDeleted: \"onResourceDeleted\",\n      onResourceDeleting: \"onResourceDeleting\",\n      onResourceInserted: \"onResourceInserted\",\n      onResourceInserting: \"onResourceInserting\",\n      onResourceManagerDialogShowing: \"onResourceManagerDialogShowing\",\n      onResourceUnassigned: \"onResourceUnassigned\",\n      onResourceUnassigning: \"onResourceUnassigning\",\n      onSelectionChanged: \"onSelectionChanged\",\n      onTaskClick: \"onTaskClick\",\n      onTaskDblClick: \"onTaskDblClick\",\n      onTaskDeleted: \"onTaskDeleted\",\n      onTaskDeleting: \"onTaskDeleting\",\n      onTaskEditDialogShowing: \"onTaskEditDialogShowing\",\n      onTaskInserted: \"onTaskInserted\",\n      onTaskInserting: \"onTaskInserting\",\n      onTaskMoving: \"onTaskMoving\",\n      onTaskUpdated: \"onTaskUpdated\",\n      onTaskUpdating: \"onTaskUpdating\",\n      accessKeyChange: \"accessKeyChange\",\n      activeStateEnabledChange: \"activeStateEnabledChange\",\n      allowSelectionChange: \"allowSelectionChange\",\n      columnsChange: \"columnsChange\",\n      contextMenuChange: \"contextMenuChange\",\n      dependenciesChange: \"dependenciesChange\",\n      disabledChange: \"disabledChange\",\n      editingChange: \"editingChange\",\n      elementAttrChange: \"elementAttrChange\",\n      endDateRangeChange: \"endDateRangeChange\",\n      filterRowChange: \"filterRowChange\",\n      firstDayOfWeekChange: \"firstDayOfWeekChange\",\n      focusStateEnabledChange: \"focusStateEnabledChange\",\n      headerFilterChange: \"headerFilterChange\",\n      heightChange: \"heightChange\",\n      hintChange: \"hintChange\",\n      hoverStateEnabledChange: \"hoverStateEnabledChange\",\n      resourceAssignmentsChange: \"resourceAssignmentsChange\",\n      resourcesChange: \"resourcesChange\",\n      rootValueChange: \"rootValueChange\",\n      scaleTypeChange: \"scaleTypeChange\",\n      scaleTypeRangeChange: \"scaleTypeRangeChange\",\n      selectedRowKeyChange: \"selectedRowKeyChange\",\n      showDependenciesChange: \"showDependenciesChange\",\n      showResourcesChange: \"showResourcesChange\",\n      showRowLinesChange: \"showRowLinesChange\",\n      sortingChange: \"sortingChange\",\n      startDateRangeChange: \"startDateRangeChange\",\n      stripLinesChange: \"stripLinesChange\",\n      tabIndexChange: \"tabIndexChange\",\n      taskContentTemplateChange: \"taskContentTemplateChange\",\n      taskListWidthChange: \"taskListWidthChange\",\n      taskProgressTooltipContentTemplateChange: \"taskProgressTooltipContentTemplateChange\",\n      tasksChange: \"tasksChange\",\n      taskTimeTooltipContentTemplateChange: \"taskTimeTooltipContentTemplateChange\",\n      taskTitlePositionChange: \"taskTitlePositionChange\",\n      taskTooltipContentTemplateChange: \"taskTooltipContentTemplateChange\",\n      toolbarChange: \"toolbarChange\",\n      validationChange: \"validationChange\",\n      visibleChange: \"visibleChange\",\n      widthChange: \"widthChange\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([DxTemplateHost, WatcherHelper, NestedOptionHost, IterableDifferHelper]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 0,\n    vars: 0,\n    template: function DxGanttComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxGanttComponent.prototype, \"accessKey\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxGanttComponent.prototype, \"activeStateEnabled\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxGanttComponent.prototype, \"allowSelection\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [Array])], DxGanttComponent.prototype, \"columns\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxGanttComponent.prototype, \"contextMenu\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxGanttComponent.prototype, \"dependencies\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxGanttComponent.prototype, \"disabled\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxGanttComponent.prototype, \"editing\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxGanttComponent.prototype, \"elementAttr\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Date), __metadata(\"design:paramtypes\", [Date])], DxGanttComponent.prototype, \"endDateRange\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxGanttComponent.prototype, \"filterRow\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxGanttComponent.prototype, \"firstDayOfWeek\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxGanttComponent.prototype, \"focusStateEnabled\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxGanttComponent.prototype, \"headerFilter\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxGanttComponent.prototype, \"height\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxGanttComponent.prototype, \"hint\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxGanttComponent.prototype, \"hoverStateEnabled\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxGanttComponent.prototype, \"resourceAssignments\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxGanttComponent.prototype, \"resources\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxGanttComponent.prototype, \"rootValue\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxGanttComponent.prototype, \"scaleType\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxGanttComponent.prototype, \"scaleTypeRange\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxGanttComponent.prototype, \"selectedRowKey\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxGanttComponent.prototype, \"showDependencies\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxGanttComponent.prototype, \"showResources\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxGanttComponent.prototype, \"showRowLines\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxGanttComponent.prototype, \"sorting\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Date), __metadata(\"design:paramtypes\", [Date])], DxGanttComponent.prototype, \"startDateRange\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [Array])], DxGanttComponent.prototype, \"stripLines\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], DxGanttComponent.prototype, \"tabIndex\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxGanttComponent.prototype, \"taskContentTemplate\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Number), __metadata(\"design:paramtypes\", [Number])], DxGanttComponent.prototype, \"taskListWidth\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxGanttComponent.prototype, \"taskProgressTooltipContentTemplate\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxGanttComponent.prototype, \"tasks\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxGanttComponent.prototype, \"taskTimeTooltipContentTemplate\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxGanttComponent.prototype, \"taskTitlePosition\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxGanttComponent.prototype, \"taskTooltipContentTemplate\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxGanttComponent.prototype, \"toolbar\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxGanttComponent.prototype, \"validation\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxGanttComponent.prototype, \"visible\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxGanttComponent.prototype, \"width\", null);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onContentReady\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onContextMenuPreparing\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onCustomCommand\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onDependencyDeleted\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onDependencyDeleting\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onDependencyInserted\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onDependencyInserting\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onDisposing\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onInitialized\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onOptionChanged\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onResourceAssigned\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onResourceAssigning\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onResourceDeleted\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onResourceDeleting\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onResourceInserted\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onResourceInserting\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onResourceManagerDialogShowing\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onResourceUnassigned\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onResourceUnassigning\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onSelectionChanged\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onTaskClick\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onTaskDblClick\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onTaskDeleted\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onTaskDeleting\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onTaskEditDialogShowing\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onTaskInserted\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onTaskInserting\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onTaskMoving\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onTaskUpdated\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"onTaskUpdating\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"accessKeyChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"activeStateEnabledChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"allowSelectionChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"columnsChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"contextMenuChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"dependenciesChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"disabledChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"editingChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"elementAttrChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"endDateRangeChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"filterRowChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"firstDayOfWeekChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"focusStateEnabledChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"headerFilterChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"heightChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"hintChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"hoverStateEnabledChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"resourceAssignmentsChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"resourcesChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"rootValueChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"scaleTypeChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"scaleTypeRangeChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"selectedRowKeyChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"showDependenciesChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"showResourcesChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"showRowLinesChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"sortingChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"startDateRangeChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"stripLinesChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"tabIndexChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"taskContentTemplateChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"taskListWidthChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"taskProgressTooltipContentTemplateChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"tasksChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"taskTimeTooltipContentTemplateChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"taskTitlePositionChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"taskTooltipContentTemplateChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"toolbarChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"validationChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"visibleChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxGanttComponent.prototype, \"widthChange\", void 0);\n\n  __decorate([ContentChildren(DxiColumnComponent), __metadata(\"design:type\", QueryList), __metadata(\"design:paramtypes\", [Object])], DxGanttComponent.prototype, \"columnsChildren\", null);\n\n  __decorate([ContentChildren(DxiStripLineComponent), __metadata(\"design:type\", QueryList), __metadata(\"design:paramtypes\", [Object])], DxGanttComponent.prototype, \"stripLinesChildren\", null);\n\n  DxGanttComponent = __decorate([__param(7, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, TransferState, Object])], DxGanttComponent);\n  return DxGanttComponent;\n})();\nvar DxGanttModule = /*#__PURE__*/(function () {\n  var DxGanttModule = /*#__PURE__*/_createClass(function DxGanttModule() {\n    _classCallCheck(this, DxGanttModule);\n  });\n\n  DxGanttModule.ɵfac = function DxGanttModule_Factory(t) {\n    return new (t || DxGanttModule)();\n  };\n\n  DxGanttModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DxGanttModule\n  });\n  DxGanttModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[DxiColumnModule, DxiButtonModule, DxoHeaderFilterModule, DxoLookupModule, DxoFormatModule, DxoFormItemModule, DxoLabelModule, DxiValidationRuleModule, DxoContextMenuModule, DxiItemModule, DxoDependenciesModule, DxoEditingModule, DxoFilterRowModule, DxoOperationDescriptionsModule, DxoTextsModule, DxoResourceAssignmentsModule, DxoResourcesModule, DxoScaleTypeRangeModule, DxoSortingModule, DxiStripLineModule, DxoTasksModule, DxoToolbarModule, DxoValidationModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule], DxiColumnModule, DxiButtonModule, DxoHeaderFilterModule, DxoLookupModule, DxoFormatModule, DxoFormItemModule, DxoLabelModule, DxiValidationRuleModule, DxoContextMenuModule, DxiItemModule, DxoDependenciesModule, DxoEditingModule, DxoFilterRowModule, DxoOperationDescriptionsModule, DxoTextsModule, DxoResourceAssignmentsModule, DxoResourcesModule, DxoScaleTypeRangeModule, DxoSortingModule, DxiStripLineModule, DxoTasksModule, DxoToolbarModule, DxoValidationModule, DxTemplateModule]\n  });\n  return DxGanttModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxGanttModule, {\n    declarations: function declarations() {\n      return [DxGanttComponent];\n    },\n    imports: function imports() {\n      return [DxiColumnModule, DxiButtonModule, DxoHeaderFilterModule, DxoLookupModule, DxoFormatModule, DxoFormItemModule, DxoLabelModule, DxiValidationRuleModule, DxoContextMenuModule, DxiItemModule, DxoDependenciesModule, DxoEditingModule, DxoFilterRowModule, DxoOperationDescriptionsModule, DxoTextsModule, DxoResourceAssignmentsModule, DxoResourcesModule, DxoScaleTypeRangeModule, DxoSortingModule, DxiStripLineModule, DxoTasksModule, DxoToolbarModule, DxoValidationModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule];\n    },\n    exports: function exports() {\n      return [DxGanttComponent, DxiColumnModule, DxiButtonModule, DxoHeaderFilterModule, DxoLookupModule, DxoFormatModule, DxoFormItemModule, DxoLabelModule, DxiValidationRuleModule, DxoContextMenuModule, DxiItemModule, DxoDependenciesModule, DxoEditingModule, DxoFilterRowModule, DxoOperationDescriptionsModule, DxoTextsModule, DxoResourceAssignmentsModule, DxoResourcesModule, DxoScaleTypeRangeModule, DxoSortingModule, DxiStripLineModule, DxoTasksModule, DxoToolbarModule, DxoValidationModule, DxTemplateModule];\n    }\n  });\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { DxGanttComponent, DxGanttModule }; //# sourceMappingURL=devextreme-angular-ui-gantt.js.map","map":null,"metadata":{},"sourceType":"module"}