{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/tree_map/colorizing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { normalizeEnum as _normalizeEnum } from \"../core/utils\";\nimport { noop as _noop } from \"../../core/utils/common\";\nvar colorizers = {};\nvar defaultColorizerName;\n\nfunction wrapLeafColorGetter(getter) {\n  return function (node) {\n    return !node.isNode() ? getter(node) : void 0;\n  };\n}\n\nfunction wrapGroupColorGetter(getter) {\n  return function (node) {\n    var parent = !node.isNode() && node.parent;\n    return parent ? parent._groupColor = parent._groupColor || getter(parent) : void 0;\n  };\n}\n\nexport function getColorizer(options, themeManager, root) {\n  var type = _normalizeEnum(options.type || defaultColorizerName);\n\n  var colorizer = colorizers[type] && colorizers[type](options, themeManager, root);\n  return colorizer ? (options.colorizeGroups ? wrapGroupColorGetter : wrapLeafColorGetter)(colorizer) : _noop;\n}\nexport function addColorizer(name, colorizer) {\n  colorizers[name] = colorizer;\n}\nexport function setDefaultColorizer(name) {\n  defaultColorizerName = name;\n}\n\nfunction getValueAsColorCode(node) {\n  return node.value;\n}\n\nfunction createColorCode(colorCodeField) {\n  return function (node) {\n    return Number(node.data[colorCodeField]);\n  };\n}\n\nexport function createColorCodeGetter(options) {\n  return options.colorCodeField ? createColorCode(options.colorCodeField) : getValueAsColorCode;\n}","map":null,"metadata":{},"sourceType":"module"}