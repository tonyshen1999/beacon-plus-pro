{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/ui/diagram/diagram.options_update.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport DiagramBar from \"./diagram.bar\";\nimport { getDiagram } from \"./diagram.importer\";\n\nvar DiagramOptionsUpdateBar = /*#__PURE__*/function (_DiagramBar) {\n  _inherits(DiagramOptionsUpdateBar, _DiagramBar);\n\n  var _super = _createSuper(DiagramOptionsUpdateBar);\n\n  function DiagramOptionsUpdateBar(owner) {\n    var _this;\n\n    _classCallCheck(this, DiagramOptionsUpdateBar);\n\n    _this = _super.call(this, owner);\n\n    var _getDiagram = getDiagram(),\n        DiagramCommand = _getDiagram.DiagramCommand;\n\n    _this.commandOptions = {};\n    _this.commandOptions[DiagramCommand.Fullscreen] = \"fullScreen\";\n\n    _this.commandOptions[DiagramCommand.ZoomLevel] = function (value) {\n      if (\"object\" === typeof this._getOption(\"zoomLevel\")) {\n        this._setOption(\"zoomLevel.value\", value);\n      } else {\n        this._setOption(\"zoomLevel\", value);\n      }\n    };\n\n    _this.commandOptions[DiagramCommand.SwitchAutoZoom] = function (value) {\n      var _getDiagram2 = getDiagram(),\n          AutoZoomMode = _getDiagram2.AutoZoomMode;\n\n      switch (value) {\n        case AutoZoomMode.FitContent:\n          this._setOption(\"autoZoomMode\", \"fitContent\");\n\n          break;\n\n        case AutoZoomMode.FitToWidth:\n          this._setOption(\"autoZoomMode\", \"fitWidth\");\n\n          break;\n\n        case AutoZoomMode.Disabled:\n          this._setOption(\"autoZoomMode\", \"disabled\");\n\n      }\n    };\n\n    _this.commandOptions[DiagramCommand.ToggleSimpleView] = \"simpleView\";\n    _this.commandOptions[DiagramCommand.ShowGrid] = \"showGrid\";\n    _this.commandOptions[DiagramCommand.SnapToGrid] = \"snapToGrid\";\n\n    _this.commandOptions[DiagramCommand.GridSize] = function (value) {\n      if (\"object\" === typeof this._getOption(\"gridSize\")) {\n        this._setOption(\"gridSize.value\", value);\n      } else {\n        this._setOption(\"gridSize\", value);\n      }\n    };\n\n    _this.commandOptions[DiagramCommand.ViewUnits] = \"viewUnits\";\n\n    _this.commandOptions[DiagramCommand.PageSize] = function (value) {\n      var pageSize = this._getOption(\"pageSize\");\n\n      if (void 0 === pageSize || pageSize.width !== value.width || pageSize.height !== value.height) {\n        this._setOption(\"pageSize\", value);\n      }\n    };\n\n    _this.commandOptions[DiagramCommand.PageLandscape] = function (value) {\n      this._setOption(\"pageOrientation\", value ? \"landscape\" : \"portrait\");\n    };\n\n    _this.commandOptions[DiagramCommand.ViewUnits] = function (value) {\n      var _getDiagram3 = getDiagram(),\n          DiagramUnit = _getDiagram3.DiagramUnit;\n\n      switch (value) {\n        case DiagramUnit.In:\n          this._setOption(\"viewUnits\", \"in\");\n\n          break;\n\n        case DiagramUnit.Cm:\n          this._setOption(\"viewUnits\", \"cm\");\n\n          break;\n\n        case DiagramUnit.Px:\n          this._setOption(\"viewUnits\", \"px\");\n\n      }\n    };\n\n    _this.commandOptions[DiagramCommand.PageColor] = \"pageColor\";\n    _this._updateLock = 0;\n    return _this;\n  }\n\n  _createClass(DiagramOptionsUpdateBar, [{\n    key: \"getCommandKeys\",\n    value: function getCommandKeys() {\n      return Object.keys(this.commandOptions).map(function (key) {\n        return parseInt(key);\n      });\n    }\n  }, {\n    key: \"setItemValue\",\n    value: function setItemValue(key, value) {\n      if (this.isUpdateLocked()) {\n        return;\n      }\n\n      this.beginUpdate();\n\n      try {\n        if (\"function\" === typeof this.commandOptions[key]) {\n          this.commandOptions[key].call(this, value);\n        } else {\n          this._setOption(this.commandOptions[key], value);\n        }\n      } finally {\n        this.endUpdate();\n      }\n    }\n  }, {\n    key: \"beginUpdate\",\n    value: function beginUpdate() {\n      this._updateLock++;\n    }\n  }, {\n    key: \"endUpdate\",\n    value: function endUpdate() {\n      this._updateLock--;\n    }\n  }, {\n    key: \"isUpdateLocked\",\n    value: function isUpdateLocked() {\n      return this._updateLock > 0;\n    }\n  }, {\n    key: \"_getOption\",\n    value: function _getOption(name) {\n      return this._owner.option(name);\n    }\n  }, {\n    key: \"_setOption\",\n    value: function _setOption(name, value) {\n      this._owner.option(name, value);\n    }\n  }]);\n\n  return DiagramOptionsUpdateBar;\n}(DiagramBar);\n\nexport default DiagramOptionsUpdateBar;","map":null,"metadata":{},"sourceType":"module"}