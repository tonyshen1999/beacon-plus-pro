{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as mapsData from \"devextreme/dist/js/vectormap-data/world.js\";\nimport { Service } from \"./vector-map.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./vector-map.service\";\nimport * as i2 from \"devextreme-angular\";\nimport * as i3 from \"devextreme-angular/ui/nested\";\n\nvar _c0 = function _c0(a0, a3) {\n  return [a0, 85, 180, a3];\n};\n\nexport var VectorComponent = /*#__PURE__*/(function () {\n  var VectorComponent = /*#__PURE__*/function () {\n    function VectorComponent(service) {\n      _classCallCheck(this, VectorComponent);\n\n      this.worldMap = mapsData.world;\n      this.countries = service.getCountries();\n      this.customizeTooltip = this.customizeTooltip.bind(this);\n      this.customizeLayers = this.customizeLayers.bind(this);\n      this.click = this.click.bind(this);\n    }\n\n    _createClass(VectorComponent, [{\n      key: \"customizeTooltip\",\n      value: function customizeTooltip(arg) {\n        var name = arg.attribute(\"name\");\n        return {\n          text: name,\n          color: \"#FFFFFF\",\n          fontColor: \"#000\"\n        };\n      }\n    }, {\n      key: \"customizeLayers\",\n      value: function customizeLayers(elements) {\n        var _this = this;\n\n        elements.forEach(function (element) {\n          var country = _this.countries[element.attribute(\"name\")];\n\n          if (country) {\n            element.applySettings({\n              color: country.color,\n              hoveredColor: country.color,\n              selectedColor: country.color\n            });\n          } else {\n            element.applySettings({\n              color: \"#e4e4e4\",\n              hoveredColor: \"#e4e4e4\",\n              selectedColor: \"#e4e4e4\"\n            });\n          }\n        });\n      }\n    }, {\n      key: \"click\",\n      value: function click(e) {\n        var target = e.target;\n\n        if (target && this.countries[target.attribute(\"name\")]) {\n          target.selected(!target.selected());\n        }\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {}\n    }]);\n\n    return VectorComponent;\n  }();\n\n  VectorComponent.ɵfac = function VectorComponent_Factory(t) {\n    return new (t || VectorComponent)(i0.ɵɵdirectiveInject(i1.Service));\n  };\n\n  VectorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: VectorComponent,\n    selectors: [[\"app-vector\"]],\n    features: [i0.ɵɵProvidersFeature([Service])],\n    decls: 17,\n    vars: 11,\n    consts: [[1, \"content\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"card\", \"card-plain\"], [1, \"card-header\"], [1, \"text-center\"], [1, \"card-body\"], [1, \"map\", \"map-big\"], [\"id\", \"vector-map\", 3, \"bounds\", \"onClick\"], [3, \"height\", \"width\"], [3, \"enabled\", \"customizeTooltip\"], [\"color\", \"#fff\"], [3, \"visible\"], [3, \"dataSource\", \"customize\"]],\n    template: function VectorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h4\", 5);\n        i0.ɵɵtext(6, \"World Map \");\n        i0.ɵɵelement(7, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 6)(10, \"div\", 7)(11, \"dx-vector-map\", 8);\n        i0.ɵɵlistener(\"onClick\", function VectorComponent_Template_dx_vector_map_onClick_11_listener($event) {\n          return ctx.click($event);\n        });\n        i0.ɵɵelement(12, \"dxo-size\", 9);\n        i0.ɵɵelementStart(13, \"dxo-tooltip\", 10);\n        i0.ɵɵelement(14, \"dxo-font\", 11)(15, \"dxo-border\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"dxi-layer\", 13);\n        i0.ɵɵelementEnd()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"bounds\", i0.ɵɵpureFunction2(8, _c0, -180, -60));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"height\", 600)(\"width\", 950);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"enabled\", true)(\"customizeTooltip\", ctx.customizeTooltip);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"visible\", false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"dataSource\", ctx.worldMap)(\"customize\", ctx.customizeLayers);\n      }\n    },\n    directives: [i2.DxVectorMapComponent, i3.DxoSizeComponent, i3.DxoTooltipComponent, i3.DxoFontComponent, i3.DxoBorderComponent, i3.DxiLayerComponent],\n    encapsulation: 2\n  });\n  return VectorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}