{"ast":null,"code":"/**\r\n * DevExtreme (esm/animation/translator.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../core/renderer\";\nimport { data as elementData, removeData } from \"../core/element_data\";\nimport { type } from \"../core/utils/type\";\nvar TRANSLATOR_DATA_KEY = \"dxTranslator\";\nvar TRANSFORM_MATRIX_REGEX = /matrix(3d)?\\((.+?)\\)/;\nvar TRANSLATE_REGEX = /translate(?:3d)?\\((.+?)\\)/;\nexport var locate = function locate($element) {\n  $element = $($element);\n  var translate = getTranslate($element);\n  return {\n    left: translate.x,\n    top: translate.y\n  };\n};\n\nfunction isPercentValue(value) {\n  return \"string\" === type(value) && \"%\" === value[value.length - 1];\n}\n\nfunction cacheTranslate($element, translate) {\n  if ($element.length) {\n    elementData($element.get(0), TRANSLATOR_DATA_KEY, translate);\n  }\n}\n\nexport var clearCache = function clearCache($element) {\n  if ($element.length) {\n    removeData($element.get(0), TRANSLATOR_DATA_KEY);\n  }\n};\nexport var getTranslateCss = function getTranslateCss(translate) {\n  translate.x = translate.x || 0;\n  translate.y = translate.y || 0;\n  var xValueString = isPercentValue(translate.x) ? translate.x : translate.x + \"px\";\n  var yValueString = isPercentValue(translate.y) ? translate.y : translate.y + \"px\";\n  return \"translate(\" + xValueString + \", \" + yValueString + \")\";\n};\nexport var getTranslate = function getTranslate($element) {\n  var result = $element.length ? elementData($element.get(0), TRANSLATOR_DATA_KEY) : null;\n\n  if (!result) {\n    var transformValue = $element.css(\"transform\") || getTranslateCss({\n      x: 0,\n      y: 0\n    });\n    var matrix = transformValue.match(TRANSFORM_MATRIX_REGEX);\n    var is3D = matrix && matrix[1];\n\n    if (matrix) {\n      matrix = matrix[2].split(\",\");\n\n      if (\"3d\" === is3D) {\n        matrix = matrix.slice(12, 15);\n      } else {\n        matrix.push(0);\n        matrix = matrix.slice(4, 7);\n      }\n    } else {\n      matrix = [0, 0, 0];\n    }\n\n    result = {\n      x: parseFloat(matrix[0]),\n      y: parseFloat(matrix[1]),\n      z: parseFloat(matrix[2])\n    };\n    cacheTranslate($element, result);\n  }\n\n  return result;\n};\nexport var move = function move($element, position) {\n  $element = $($element);\n  var left = position.left;\n  var top = position.top;\n  var translate;\n\n  if (void 0 === left) {\n    translate = getTranslate($element);\n    translate.y = top || 0;\n  } else if (void 0 === top) {\n    translate = getTranslate($element);\n    translate.x = left || 0;\n  } else {\n    translate = {\n      x: left || 0,\n      y: top || 0,\n      z: 0\n    };\n    cacheTranslate($element, translate);\n  }\n\n  $element.css({\n    transform: getTranslateCss(translate)\n  });\n\n  if (isPercentValue(left) || isPercentValue(top)) {\n    clearCache($element);\n  }\n};\nexport var resetPosition = function resetPosition($element, finishTransition) {\n  $element = $($element);\n  var originalTransition;\n  var stylesConfig = {\n    left: 0,\n    top: 0,\n    transform: \"none\"\n  };\n\n  if (finishTransition) {\n    originalTransition = $element.css(\"transition\");\n    stylesConfig.transition = \"none\";\n  }\n\n  $element.css(stylesConfig);\n  clearCache($element);\n\n  if (finishTransition) {\n    $element.get(0).offsetHeight;\n    $element.css(\"transition\", originalTransition);\n  }\n};\nexport var parseTranslate = function parseTranslate(translateString) {\n  var result = translateString.match(TRANSLATE_REGEX);\n\n  if (!result || !result[1]) {\n    return;\n  }\n\n  result = result[1].split(\",\");\n  result = {\n    x: parseFloat(result[0]),\n    y: parseFloat(result[1]),\n    z: parseFloat(result[2])\n  };\n  return result;\n};","map":null,"metadata":{},"sourceType":"module"}