{"ast":null,"code":"/**\r\n * DevExtreme (esm/renovation/ui/scheduler/view_model/to_test/views/utils/work_week.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport dateUtils from \"../../../../../../../core/utils/date\";\nimport { getViewStartByOptions, setOptionHour } from \"./base\";\nimport { getValidStartDate } from \"./week\";\nvar SATURDAY_INDEX = 6;\nvar SUNDAY_INDEX = 0;\nvar MONDAY_INDEX = 1;\nvar DAYS_IN_WEEK = 7;\nexport var isDataOnWeekend = function isDataOnWeekend(date) {\n  var day = date.getDay();\n  return day === SATURDAY_INDEX || day === SUNDAY_INDEX;\n};\nexport var getWeekendsCount = function getWeekendsCount(days) {\n  return 2 * Math.floor(days / 7);\n};\nexport var calculateStartViewDate = function calculateStartViewDate(currentDate, startDayHour, startDate, intervalDuration, firstDayOfWeek) {\n  var viewStart = getViewStartByOptions(startDate, currentDate, intervalDuration, getValidStartDate(startDate, firstDayOfWeek));\n  var firstViewDate = dateUtils.getFirstWeekDate(viewStart, firstDayOfWeek);\n\n  if (isDataOnWeekend(firstViewDate)) {\n    var currentDay = firstViewDate.getDay();\n    var distance = (MONDAY_INDEX + DAYS_IN_WEEK - currentDay) % 7;\n    firstViewDate.setDate(firstViewDate.getDate() + distance);\n  }\n\n  return setOptionHour(firstViewDate, startDayHour);\n};","map":null,"metadata":{},"sourceType":"module"}