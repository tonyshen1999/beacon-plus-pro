{"ast":null,"code":"import _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport { __decorate, __metadata } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ChangeDetectionStrategy, Input, Output, NgModule } from '@angular/core';\nimport { OnChange } from 'ngx-bootstrap/utils';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nfunction AlertComponent_ng_template_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function AlertComponent_ng_template_0_ng_template_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      var ctx_r2 = i0.ɵɵnextContext(2);\n      return ctx_r2.close();\n    });\n    i0.ɵɵelementStart(1, \"span\", 3);\n    i0.ɵɵtext(2, \"\\xD7\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 4);\n    i0.ɵɵtext(4, \"Close\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction AlertComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, AlertComponent_ng_template_0_ng_template_1_Template, 5, 0, \"ng-template\", 0);\n    i0.ɵɵprojection(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(\"alert alert-\" + ctx_r0.type);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.classes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.dismissible);\n  }\n}\n\nvar _c0 = [\"*\"];\nvar AlertConfig = /*#__PURE__*/(function () {\n  var AlertConfig = /*#__PURE__*/_createClass(function AlertConfig() {\n    _classCallCheck(this, AlertConfig);\n\n    /** default alert type */\n    this.type = 'warning';\n    /** is alerts are dismissible by default */\n\n    this.dismissible = false;\n    /** default time before alert will dismiss */\n\n    this.dismissOnTimeout = undefined;\n  });\n\n  AlertConfig.ɵfac = function AlertConfig_Factory(t) {\n    return new (t || AlertConfig)();\n  };\n\n  AlertConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: AlertConfig,\n    factory: AlertConfig.ɵfac,\n    providedIn: 'root'\n  });\n  return AlertConfig;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar AlertComponent = /*#__PURE__*/(function () {\n  var AlertComponent = /*#__PURE__*/function () {\n    function AlertComponent(_config, changeDetection) {\n      var _this = this;\n\n      _classCallCheck(this, AlertComponent);\n\n      this.changeDetection = changeDetection;\n      /** Alert type.\n       * Provides one of four bootstrap supported contextual classes:\n       * `success`, `info`, `warning` and `danger`\n       */\n\n      this.type = 'warning';\n      /** If set, displays an inline \"Close\" button */\n\n      this.dismissible = false;\n      /** Is alert visible */\n\n      this.isOpen = true;\n      /** This event fires immediately after close instance method is called,\n       * $event is an instance of Alert component.\n       */\n\n      this.onClose = new EventEmitter();\n      /** This event fires when alert closed, $event is an instance of Alert component */\n\n      this.onClosed = new EventEmitter();\n      this.classes = '';\n      this.dismissibleChange = new EventEmitter();\n      Object.assign(this, _config);\n      this.dismissibleChange.subscribe(function\n        /*dismissible: boolean*/\n      () {\n        _this.classes = _this.dismissible ? 'alert-dismissible' : '';\n\n        _this.changeDetection.markForCheck();\n      });\n    }\n\n    _createClass(AlertComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this2 = this;\n\n        if (this.dismissOnTimeout) {\n          // if dismissOnTimeout used as attr without binding, it will be a string\n          setTimeout(function () {\n            return _this2.close();\n          }, parseInt(this.dismissOnTimeout, 10));\n        }\n      } // todo: animation ` If the .fade and .in classes are present on the element,\n      // the alert will fade out before it is removed`\n\n      /**\n       * Closes an alert by removing it from the DOM.\n       */\n\n    }, {\n      key: \"close\",\n      value: function close() {\n        if (!this.isOpen) {\n          return;\n        }\n\n        this.onClose.emit(this);\n        this.isOpen = false;\n        this.changeDetection.markForCheck();\n        this.onClosed.emit(this);\n      }\n    }]);\n\n    return AlertComponent;\n  }();\n\n  AlertComponent.ɵfac = function AlertComponent_Factory(t) {\n    return new (t || AlertComponent)(i0.ɵɵdirectiveInject(AlertConfig), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  AlertComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: AlertComponent,\n    selectors: [[\"alert\"], [\"bs-alert\"]],\n    inputs: {\n      type: \"type\",\n      dismissible: \"dismissible\",\n      dismissOnTimeout: \"dismissOnTimeout\",\n      isOpen: \"isOpen\"\n    },\n    outputs: {\n      onClose: \"onClose\",\n      onClosed: \"onClosed\"\n    },\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ngIf\"], [\"role\", \"alert\", 3, \"ngClass\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", \"btn-close\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"visually-hidden\"], [1, \"sr-only\", \"visually-hidden\"]],\n    template: function AlertComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, AlertComponent_ng_template_0_Template, 3, 4, \"ng-template\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isOpen);\n      }\n    },\n    directives: [i2.NgIf, i2.NgClass],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n\n  __decorate([OnChange(), __metadata(\"design:type\", Object)], AlertComponent.prototype, \"dismissible\", void 0);\n\n  return AlertComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar AlertModule = /*#__PURE__*/(function () {\n  var AlertModule = /*#__PURE__*/function () {\n    function AlertModule() {\n      _classCallCheck(this, AlertModule);\n    }\n\n    _createClass(AlertModule, null, [{\n      key: \"forRoot\",\n      value: function forRoot() {\n        return {\n          ngModule: AlertModule,\n          providers: []\n        };\n      }\n    }]);\n\n    return AlertModule;\n  }();\n\n  AlertModule.ɵfac = function AlertModule_Factory(t) {\n    return new (t || AlertModule)();\n  };\n\n  AlertModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AlertModule\n  });\n  AlertModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return AlertModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AlertComponent, AlertConfig, AlertModule }; //# sourceMappingURL=ngx-bootstrap-alert.mjs.map","map":null,"metadata":{},"sourceType":"module"}