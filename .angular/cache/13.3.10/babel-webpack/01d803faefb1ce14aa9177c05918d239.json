{"ast":null,"code":"import _defineProperty from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/**\r\n * DevExtreme (esm/renovation/ui/scheduler/workspaces/base/date_table/cell.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"allDay\", \"ariaLabel\", \"children\", \"className\", \"contentTemplate\", \"contentTemplateProps\", \"dataCellTemplate\", \"endDate\", \"firstDayOfMonth\", \"groupIndex\", \"groups\", \"index\", \"isFirstGroupCell\", \"isFocused\", \"isLastGroupCell\", \"isSelected\", \"otherMonth\", \"startDate\", \"text\", \"today\"];\nimport { createComponentVNode, normalizeProps } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { CellBase as Cell, CellBaseProps } from \"../cell\";\nimport { combineClasses } from \"../../../../../utils/combine_classes\";\nvar ADD_APPOINTMENT_LABEL = \"Add appointment\";\nexport var viewFunction = function viewFunction(_ref) {\n  var ariaLabel = _ref.ariaLabel,\n      classes = _ref.classes,\n      dataCellTemplateProps = _ref.dataCellTemplateProps,\n      _ref$props = _ref.props,\n      children = _ref$props.children,\n      dataCellTemplate = _ref$props.dataCellTemplate,\n      isFirstGroupCell = _ref$props.isFirstGroupCell,\n      isLastGroupCell = _ref$props.isLastGroupCell;\n  return createComponentVNode(2, Cell, {\n    isFirstGroupCell: isFirstGroupCell,\n    isLastGroupCell: isLastGroupCell,\n    contentTemplate: dataCellTemplate,\n    contentTemplateProps: dataCellTemplateProps,\n    className: classes,\n    ariaLabel: ariaLabel,\n    children: children\n  });\n};\nexport var DateTableCellBaseProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(CellBaseProps), Object.getOwnPropertyDescriptors({\n  otherMonth: false,\n  today: false,\n  firstDayOfMonth: false,\n  isSelected: false,\n  isFocused: false\n})));\n\nvar getTemplate = function getTemplate(TemplateProp) {\n  return TemplateProp && (TemplateProp.defaultProps ? function (props) {\n    return normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props)));\n  } : TemplateProp);\n};\n\nexport var DateTableCellBase = /*#__PURE__*/(function () {\n  var DateTableCellBase = /*#__PURE__*/function (_BaseInfernoComponent) {\n    _inherits(DateTableCellBase, _BaseInfernoComponent);\n\n    var _super = _createSuper(DateTableCellBase);\n\n    function DateTableCellBase(props) {\n      var _this;\n\n      _classCallCheck(this, DateTableCellBase);\n\n      _this = _super.call(this, props);\n      _this.state = {};\n      _this.__getterCache = {};\n      return _this;\n    }\n\n    _createClass(DateTableCellBase, [{\n      key: \"classes\",\n      get: function get() {\n        var _this$props2 = this.props,\n            allDay = _this$props2.allDay,\n            className = _this$props2.className,\n            isFocused = _this$props2.isFocused,\n            isSelected = _this$props2.isSelected;\n        return combineClasses(_defineProperty({\n          \"dx-scheduler-cell-sizes-horizontal\": true,\n          \"dx-scheduler-cell-sizes-vertical\": !allDay,\n          \"dx-scheduler-date-table-cell\": !allDay,\n          \"dx-state-focused\": isSelected,\n          \"dx-scheduler-focused-cell\": isFocused\n        }, className, true));\n      }\n    }, {\n      key: \"dataCellTemplateProps\",\n      get: function get() {\n        var _this2 = this;\n\n        if (void 0 !== this.__getterCache.dataCellTemplateProps) {\n          return this.__getterCache.dataCellTemplateProps;\n        }\n\n        return this.__getterCache.dataCellTemplateProps = function () {\n          var _this2$props = _this2.props,\n              allDay = _this2$props.allDay,\n              contentTemplateProps = _this2$props.contentTemplateProps,\n              endDate = _this2$props.endDate,\n              groupIndex = _this2$props.groupIndex,\n              groups = _this2$props.groups,\n              index = _this2$props.index,\n              startDate = _this2$props.startDate;\n          return {\n            data: _extends({\n              startDate: startDate,\n              endDate: endDate,\n              groups: groups,\n              groupIndex: groups ? groupIndex : void 0,\n              text: \"\",\n              allDay: !!allDay || void 0\n            }, contentTemplateProps.data),\n            index: index\n          };\n        }();\n      }\n    }, {\n      key: \"ariaLabel\",\n      get: function get() {\n        return this.props.isSelected ? ADD_APPOINTMENT_LABEL : void 0;\n      }\n    }, {\n      key: \"restAttributes\",\n      get: function get() {\n        var _this$props = this.props,\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n        return restProps;\n      }\n    }, {\n      key: \"componentWillUpdate\",\n      value: function componentWillUpdate(nextProps, nextState, context) {\n        if (this.props.allDay !== nextProps.allDay || this.props.contentTemplateProps !== nextProps.contentTemplateProps || this.props.endDate !== nextProps.endDate || this.props.groupIndex !== nextProps.groupIndex || this.props.groups !== nextProps.groups || this.props.index !== nextProps.index || this.props.startDate !== nextProps.startDate) {\n          this.__getterCache.dataCellTemplateProps = void 0;\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this.props;\n        return viewFunction({\n          props: _extends({}, props, {\n            dataCellTemplate: getTemplate(props.dataCellTemplate),\n            contentTemplate: getTemplate(props.contentTemplate)\n          }),\n          classes: this.classes,\n          dataCellTemplateProps: this.dataCellTemplateProps,\n          ariaLabel: this.ariaLabel,\n          restAttributes: this.restAttributes\n        });\n      }\n    }]);\n\n    return DateTableCellBase;\n  }(BaseInfernoComponent);\n\n  DateTableCellBase.defaultProps = DateTableCellBaseProps;\n  return DateTableCellBase;\n})();","map":null,"metadata":{},"sourceType":"module"}