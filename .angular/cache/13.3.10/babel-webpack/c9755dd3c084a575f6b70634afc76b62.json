{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { __decorate, __metadata, __param } from 'tslib';\nimport { TransferState, BrowserTransferStateModule } from '@angular/platform-browser';\nimport { ElementRef, NgZone, Inject, PLATFORM_ID, Input, Output, EventEmitter, Component, NgModule } from '@angular/core';\nimport DxSankey from 'devextreme/viz/sankey';\nimport { DxComponent, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxoAdaptiveLayoutModule, DxoExportModule, DxoLabelModule, DxoBorderModule, DxoFontModule, DxoShadowModule, DxoLinkModule, DxoHoverStyleModule, DxoHatchingModule, DxoLoadingIndicatorModule, DxoMarginModule, DxoNodeModule, DxoSizeModule, DxoTitleModule, DxoSubtitleModule, DxoTooltipModule, DxoFormatModule } from 'devextreme-angular/ui/nested';\n/*!\r\n * devextreme-angular\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\n\n/**\r\n * The Sankey is a UI component that visualizes the flow magnitude between value sets. The values being connected are called nodes; the connections - links. The higher the flow magnitude, the wider the link is.\r\n\r\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'devextreme-angular/core';\nimport * as ɵngcc2 from '@angular/platform-browser';\nvar DxSankeyComponent = /*#__PURE__*/(function () {\n  var DxSankeyComponent = /*#__PURE__*/function (_DxComponent) {\n    _inherits(DxSankeyComponent, _DxComponent);\n\n    var _super = _createSuper(DxSankeyComponent);\n\n    function DxSankeyComponent(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\n      var _this;\n\n      _classCallCheck(this, DxSankeyComponent);\n\n      _this = _super.call(this, elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\n      _this._watcherHelper = _watcherHelper;\n      _this._idh = _idh;\n\n      _this._createEventEmitters([{\n        subscribe: 'disposing',\n        emit: 'onDisposing'\n      }, {\n        subscribe: 'drawn',\n        emit: 'onDrawn'\n      }, {\n        subscribe: 'exported',\n        emit: 'onExported'\n      }, {\n        subscribe: 'exporting',\n        emit: 'onExporting'\n      }, {\n        subscribe: 'fileSaving',\n        emit: 'onFileSaving'\n      }, {\n        subscribe: 'incidentOccurred',\n        emit: 'onIncidentOccurred'\n      }, {\n        subscribe: 'initialized',\n        emit: 'onInitialized'\n      }, {\n        subscribe: 'linkClick',\n        emit: 'onLinkClick'\n      }, {\n        subscribe: 'linkHoverChanged',\n        emit: 'onLinkHoverChanged'\n      }, {\n        subscribe: 'nodeClick',\n        emit: 'onNodeClick'\n      }, {\n        subscribe: 'nodeHoverChanged',\n        emit: 'onNodeHoverChanged'\n      }, {\n        subscribe: 'optionChanged',\n        emit: 'onOptionChanged'\n      }, {\n        emit: 'adaptiveLayoutChange'\n      }, {\n        emit: 'alignmentChange'\n      }, {\n        emit: 'dataSourceChange'\n      }, {\n        emit: 'disabledChange'\n      }, {\n        emit: 'elementAttrChange'\n      }, {\n        emit: 'exportChange'\n      }, {\n        emit: 'hoverEnabledChange'\n      }, {\n        emit: 'labelChange'\n      }, {\n        emit: 'linkChange'\n      }, {\n        emit: 'loadingIndicatorChange'\n      }, {\n        emit: 'marginChange'\n      }, {\n        emit: 'nodeChange'\n      }, {\n        emit: 'paletteChange'\n      }, {\n        emit: 'paletteExtensionModeChange'\n      }, {\n        emit: 'pathModifiedChange'\n      }, {\n        emit: 'redrawOnResizeChange'\n      }, {\n        emit: 'rtlEnabledChange'\n      }, {\n        emit: 'sizeChange'\n      }, {\n        emit: 'sortDataChange'\n      }, {\n        emit: 'sourceFieldChange'\n      }, {\n        emit: 'targetFieldChange'\n      }, {\n        emit: 'themeChange'\n      }, {\n        emit: 'titleChange'\n      }, {\n        emit: 'tooltipChange'\n      }, {\n        emit: 'weightFieldChange'\n      }]);\n\n      _this._idh.setHost(_assertThisInitialized(_this));\n\n      optionHost.setHost(_assertThisInitialized(_this));\n      return _this;\n    }\n    /**\r\n     * Specifies adaptive layout properties.\r\n    \r\n     */\n\n\n    _createClass(DxSankeyComponent, [{\n      key: \"adaptiveLayout\",\n      get: function get() {\n        return this._getOption('adaptiveLayout');\n      },\n      set: function set(value) {\n        this._setOption('adaptiveLayout', value);\n      }\n      /**\r\n       * Aligns node columns vertically.\r\n      \r\n       */\n\n    }, {\n      key: \"alignment\",\n      get: function get() {\n        return this._getOption('alignment');\n      },\n      set: function set(value) {\n        this._setOption('alignment', value);\n      }\n      /**\r\n       * Binds the UI component to data.\r\n      \r\n       */\n\n    }, {\n      key: \"dataSource\",\n      get: function get() {\n        return this._getOption('dataSource');\n      },\n      set: function set(value) {\n        this._setOption('dataSource', value);\n      }\n      /**\r\n       * Specifies whether the UI component responds to user interaction.\r\n      \r\n       */\n\n    }, {\n      key: \"disabled\",\n      get: function get() {\n        return this._getOption('disabled');\n      },\n      set: function set(value) {\n        this._setOption('disabled', value);\n      }\n      /**\r\n       * Specifies the global attributes to be attached to the UI component&apos;s container element.\r\n      \r\n       */\n\n    }, {\n      key: \"elementAttr\",\n      get: function get() {\n        return this._getOption('elementAttr');\n      },\n      set: function set(value) {\n        this._setOption('elementAttr', value);\n      }\n      /**\r\n       * Configures the exporting and printing features.\r\n      \r\n       */\n\n    }, {\n      key: \"export\",\n      get: function get() {\n        return this._getOption('export');\n      },\n      set: function set(value) {\n        this._setOption('export', value);\n      }\n      /**\r\n       * Specifies whether nodes and links change their style when they are hovered over or pressed.\r\n      \r\n       */\n\n    }, {\n      key: \"hoverEnabled\",\n      get: function get() {\n        return this._getOption('hoverEnabled');\n      },\n      set: function set(value) {\n        this._setOption('hoverEnabled', value);\n      }\n      /**\r\n       * Configures sankey nodes&apos; labels.\r\n      \r\n       */\n\n    }, {\n      key: \"label\",\n      get: function get() {\n        return this._getOption('label');\n      },\n      set: function set(value) {\n        this._setOption('label', value);\n      }\n      /**\r\n       * Configures sankey links&apos; appearance.\r\n      \r\n       */\n\n    }, {\n      key: \"link\",\n      get: function get() {\n        return this._getOption('link');\n      },\n      set: function set(value) {\n        this._setOption('link', value);\n      }\n      /**\r\n       * Configures the loading indicator.\r\n      \r\n       */\n\n    }, {\n      key: \"loadingIndicator\",\n      get: function get() {\n        return this._getOption('loadingIndicator');\n      },\n      set: function set(value) {\n        this._setOption('loadingIndicator', value);\n      }\n      /**\r\n       * Generates space around the UI component.\r\n      \r\n       */\n\n    }, {\n      key: \"margin\",\n      get: function get() {\n        return this._getOption('margin');\n      },\n      set: function set(value) {\n        this._setOption('margin', value);\n      }\n      /**\r\n       * Configures sankey nodes&apos; appearance.\r\n      \r\n       */\n\n    }, {\n      key: \"node\",\n      get: function get() {\n        return this._getOption('node');\n      },\n      set: function set(value) {\n        this._setOption('node', value);\n      }\n      /**\r\n       * Sets the palette to be used to colorize sankey nodes.\r\n      \r\n       */\n\n    }, {\n      key: \"palette\",\n      get: function get() {\n        return this._getOption('palette');\n      },\n      set: function set(value) {\n        this._setOption('palette', value);\n      }\n      /**\r\n       * Specifies how to extend the palette when it contains less colors than the number of sankey nodes.\r\n      \r\n       */\n\n    }, {\n      key: \"paletteExtensionMode\",\n      get: function get() {\n        return this._getOption('paletteExtensionMode');\n      },\n      set: function set(value) {\n        this._setOption('paletteExtensionMode', value);\n      }\n      /**\r\n       * Notifies the UI component that it is embedded into an HTML page that uses a tag modifying the path.\r\n      \r\n       */\n\n    }, {\n      key: \"pathModified\",\n      get: function get() {\n        return this._getOption('pathModified');\n      },\n      set: function set(value) {\n        this._setOption('pathModified', value);\n      }\n      /**\r\n       * Specifies whether to redraw the UI component when the size of the parent browser window changes or a mobile device rotates.\r\n      \r\n       */\n\n    }, {\n      key: \"redrawOnResize\",\n      get: function get() {\n        return this._getOption('redrawOnResize');\n      },\n      set: function set(value) {\n        this._setOption('redrawOnResize', value);\n      }\n      /**\r\n       * Switches the UI component to a right-to-left representation.\r\n      \r\n       */\n\n    }, {\n      key: \"rtlEnabled\",\n      get: function get() {\n        return this._getOption('rtlEnabled');\n      },\n      set: function set(value) {\n        this._setOption('rtlEnabled', value);\n      }\n      /**\r\n       * Specifies the UI component&apos;s size in pixels.\r\n      \r\n       */\n\n    }, {\n      key: \"size\",\n      get: function get() {\n        return this._getOption('size');\n      },\n      set: function set(value) {\n        this._setOption('size', value);\n      }\n      /**\r\n       * Specifies nodes&apos; sorting order in their columns.\r\n      \r\n       */\n\n    }, {\n      key: \"sortData\",\n      get: function get() {\n        return this._getOption('sortData');\n      },\n      set: function set(value) {\n        this._setOption('sortData', value);\n      }\n      /**\r\n       * Specifies which data source field provides links&apos; source nodes.\r\n      \r\n       */\n\n    }, {\n      key: \"sourceField\",\n      get: function get() {\n        return this._getOption('sourceField');\n      },\n      set: function set(value) {\n        this._setOption('sourceField', value);\n      }\n      /**\r\n       * Specifies which data source field provides links&apos; target nodes.\r\n      \r\n       */\n\n    }, {\n      key: \"targetField\",\n      get: function get() {\n        return this._getOption('targetField');\n      },\n      set: function set(value) {\n        this._setOption('targetField', value);\n      }\n      /**\r\n       * Sets the name of the theme the UI component uses.\r\n      \r\n       */\n\n    }, {\n      key: \"theme\",\n      get: function get() {\n        return this._getOption('theme');\n      },\n      set: function set(value) {\n        this._setOption('theme', value);\n      }\n      /**\r\n       * Configures the UI component&apos;s title.\r\n      \r\n       */\n\n    }, {\n      key: \"title\",\n      get: function get() {\n        return this._getOption('title');\n      },\n      set: function set(value) {\n        this._setOption('title', value);\n      }\n      /**\r\n       * Configures tooltips - small pop-up rectangles that display information about a data-visualizing UI component element being pressed or hovered over with the mouse pointer.\r\n      \r\n       */\n\n    }, {\n      key: \"tooltip\",\n      get: function get() {\n        return this._getOption('tooltip');\n      },\n      set: function set(value) {\n        this._setOption('tooltip', value);\n      }\n      /**\r\n       * Specifies which data source field provides links&apos; weights.\r\n      \r\n       */\n\n    }, {\n      key: \"weightField\",\n      get: function get() {\n        return this._getOption('weightField');\n      },\n      set: function set(value) {\n        this._setOption('weightField', value);\n      }\n    }, {\n      key: \"_createInstance\",\n      value: function _createInstance(element, options) {\n        return new DxSankey(element, options);\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this._destroyWidget();\n      }\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(changes) {\n        _get(_getPrototypeOf(DxSankeyComponent.prototype), \"ngOnChanges\", this).call(this, changes);\n\n        this.setupChanges('alignment', changes);\n        this.setupChanges('dataSource', changes);\n        this.setupChanges('palette', changes);\n      }\n    }, {\n      key: \"setupChanges\",\n      value: function setupChanges(prop, changes) {\n        if (!(prop in this._optionsToUpdate)) {\n          this._idh.setup(prop, changes);\n        }\n      }\n    }, {\n      key: \"ngDoCheck\",\n      value: function ngDoCheck() {\n        this._idh.doCheck('alignment');\n\n        this._idh.doCheck('dataSource');\n\n        this._idh.doCheck('palette');\n\n        this._watcherHelper.checkWatchers();\n\n        _get(_getPrototypeOf(DxSankeyComponent.prototype), \"ngDoCheck\", this).call(this);\n\n        _get(_getPrototypeOf(DxSankeyComponent.prototype), \"clearChangedOptions\", this).call(this);\n      }\n    }, {\n      key: \"_setOption\",\n      value: function _setOption(name, value) {\n        var isSetup = this._idh.setupSingle(name, value);\n\n        var isChanged = this._idh.getChanges(name, value) !== null;\n\n        if (isSetup || isChanged) {\n          _get(_getPrototypeOf(DxSankeyComponent.prototype), \"_setOption\", this).call(this, name, value);\n        }\n      }\n    }]);\n\n    return DxSankeyComponent;\n  }(DxComponent);\n\n  DxSankeyComponent.ɵfac = function DxSankeyComponent_Factory(t) {\n    return new (t || DxSankeyComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DxTemplateHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.WatcherHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.IterableDifferHelper), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NestedOptionHost), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TransferState), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n\n  DxSankeyComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DxSankeyComponent,\n    selectors: [[\"dx-sankey\"]],\n    inputs: {\n      adaptiveLayout: \"adaptiveLayout\",\n      alignment: \"alignment\",\n      dataSource: \"dataSource\",\n      disabled: \"disabled\",\n      elementAttr: \"elementAttr\",\n      export: \"export\",\n      hoverEnabled: \"hoverEnabled\",\n      label: \"label\",\n      link: \"link\",\n      loadingIndicator: \"loadingIndicator\",\n      margin: \"margin\",\n      node: \"node\",\n      palette: \"palette\",\n      paletteExtensionMode: \"paletteExtensionMode\",\n      pathModified: \"pathModified\",\n      redrawOnResize: \"redrawOnResize\",\n      rtlEnabled: \"rtlEnabled\",\n      size: \"size\",\n      sortData: \"sortData\",\n      sourceField: \"sourceField\",\n      targetField: \"targetField\",\n      theme: \"theme\",\n      title: \"title\",\n      tooltip: \"tooltip\",\n      weightField: \"weightField\"\n    },\n    outputs: {\n      onDisposing: \"onDisposing\",\n      onDrawn: \"onDrawn\",\n      onExported: \"onExported\",\n      onExporting: \"onExporting\",\n      onFileSaving: \"onFileSaving\",\n      onIncidentOccurred: \"onIncidentOccurred\",\n      onInitialized: \"onInitialized\",\n      onLinkClick: \"onLinkClick\",\n      onLinkHoverChanged: \"onLinkHoverChanged\",\n      onNodeClick: \"onNodeClick\",\n      onNodeHoverChanged: \"onNodeHoverChanged\",\n      onOptionChanged: \"onOptionChanged\",\n      adaptiveLayoutChange: \"adaptiveLayoutChange\",\n      alignmentChange: \"alignmentChange\",\n      dataSourceChange: \"dataSourceChange\",\n      disabledChange: \"disabledChange\",\n      elementAttrChange: \"elementAttrChange\",\n      exportChange: \"exportChange\",\n      hoverEnabledChange: \"hoverEnabledChange\",\n      labelChange: \"labelChange\",\n      linkChange: \"linkChange\",\n      loadingIndicatorChange: \"loadingIndicatorChange\",\n      marginChange: \"marginChange\",\n      nodeChange: \"nodeChange\",\n      paletteChange: \"paletteChange\",\n      paletteExtensionModeChange: \"paletteExtensionModeChange\",\n      pathModifiedChange: \"pathModifiedChange\",\n      redrawOnResizeChange: \"redrawOnResizeChange\",\n      rtlEnabledChange: \"rtlEnabledChange\",\n      sizeChange: \"sizeChange\",\n      sortDataChange: \"sortDataChange\",\n      sourceFieldChange: \"sourceFieldChange\",\n      targetFieldChange: \"targetFieldChange\",\n      themeChange: \"themeChange\",\n      titleChange: \"titleChange\",\n      tooltipChange: \"tooltipChange\",\n      weightFieldChange: \"weightFieldChange\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([DxTemplateHost, WatcherHelper, NestedOptionHost, IterableDifferHelper]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 0,\n    vars: 0,\n    template: function DxSankeyComponent_Template(rf, ctx) {},\n    styles: [\"[_nghost-%COMP%] {  display: block; }\"]\n  });\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxSankeyComponent.prototype, \"adaptiveLayout\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxSankeyComponent.prototype, \"alignment\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxSankeyComponent.prototype, \"dataSource\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxSankeyComponent.prototype, \"disabled\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxSankeyComponent.prototype, \"elementAttr\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxSankeyComponent.prototype, \"export\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxSankeyComponent.prototype, \"hoverEnabled\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxSankeyComponent.prototype, \"label\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxSankeyComponent.prototype, \"link\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxSankeyComponent.prototype, \"loadingIndicator\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxSankeyComponent.prototype, \"margin\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxSankeyComponent.prototype, \"node\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxSankeyComponent.prototype, \"palette\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxSankeyComponent.prototype, \"paletteExtensionMode\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxSankeyComponent.prototype, \"pathModified\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxSankeyComponent.prototype, \"redrawOnResize\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Boolean), __metadata(\"design:paramtypes\", [Boolean])], DxSankeyComponent.prototype, \"rtlEnabled\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxSankeyComponent.prototype, \"size\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxSankeyComponent.prototype, \"sortData\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxSankeyComponent.prototype, \"sourceField\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxSankeyComponent.prototype, \"targetField\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxSankeyComponent.prototype, \"theme\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxSankeyComponent.prototype, \"title\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", Object), __metadata(\"design:paramtypes\", [Object])], DxSankeyComponent.prototype, \"tooltip\", null);\n\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], DxSankeyComponent.prototype, \"weightField\", null);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"onDisposing\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"onDrawn\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"onExported\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"onExporting\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"onFileSaving\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"onIncidentOccurred\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"onInitialized\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"onLinkClick\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"onLinkHoverChanged\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"onNodeClick\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"onNodeHoverChanged\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"onOptionChanged\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"adaptiveLayoutChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"alignmentChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"dataSourceChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"disabledChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"elementAttrChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"exportChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"hoverEnabledChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"labelChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"linkChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"loadingIndicatorChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"marginChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"nodeChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"paletteChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"paletteExtensionModeChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"pathModifiedChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"redrawOnResizeChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"rtlEnabledChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"sizeChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"sortDataChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"sourceFieldChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"targetFieldChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"themeChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"titleChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"tooltipChange\", void 0);\n\n  __decorate([Output(), __metadata(\"design:type\", EventEmitter)], DxSankeyComponent.prototype, \"weightFieldChange\", void 0);\n\n  DxSankeyComponent = __decorate([__param(7, Inject(PLATFORM_ID)), __metadata(\"design:paramtypes\", [ElementRef, NgZone, DxTemplateHost, WatcherHelper, IterableDifferHelper, NestedOptionHost, TransferState, Object])], DxSankeyComponent);\n  return DxSankeyComponent;\n})();\nvar DxSankeyModule = /*#__PURE__*/(function () {\n  var DxSankeyModule = /*#__PURE__*/_createClass(function DxSankeyModule() {\n    _classCallCheck(this, DxSankeyModule);\n  });\n\n  DxSankeyModule.ɵfac = function DxSankeyModule_Factory(t) {\n    return new (t || DxSankeyModule)();\n  };\n\n  DxSankeyModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DxSankeyModule\n  });\n  DxSankeyModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[DxoAdaptiveLayoutModule, DxoExportModule, DxoLabelModule, DxoBorderModule, DxoFontModule, DxoShadowModule, DxoLinkModule, DxoHoverStyleModule, DxoHatchingModule, DxoLoadingIndicatorModule, DxoMarginModule, DxoNodeModule, DxoSizeModule, DxoTitleModule, DxoSubtitleModule, DxoTooltipModule, DxoFormatModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule], DxoAdaptiveLayoutModule, DxoExportModule, DxoLabelModule, DxoBorderModule, DxoFontModule, DxoShadowModule, DxoLinkModule, DxoHoverStyleModule, DxoHatchingModule, DxoLoadingIndicatorModule, DxoMarginModule, DxoNodeModule, DxoSizeModule, DxoTitleModule, DxoSubtitleModule, DxoTooltipModule, DxoFormatModule, DxTemplateModule]\n  });\n  return DxSankeyModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxSankeyModule, {\n    declarations: function declarations() {\n      return [DxSankeyComponent];\n    },\n    imports: function imports() {\n      return [DxoAdaptiveLayoutModule, DxoExportModule, DxoLabelModule, DxoBorderModule, DxoFontModule, DxoShadowModule, DxoLinkModule, DxoHoverStyleModule, DxoHatchingModule, DxoLoadingIndicatorModule, DxoMarginModule, DxoNodeModule, DxoSizeModule, DxoTitleModule, DxoSubtitleModule, DxoTooltipModule, DxoFormatModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule];\n    },\n    exports: function exports() {\n      return [DxSankeyComponent, DxoAdaptiveLayoutModule, DxoExportModule, DxoLabelModule, DxoBorderModule, DxoFontModule, DxoShadowModule, DxoLinkModule, DxoHoverStyleModule, DxoHatchingModule, DxoLoadingIndicatorModule, DxoMarginModule, DxoNodeModule, DxoSizeModule, DxoTitleModule, DxoSubtitleModule, DxoTooltipModule, DxoFormatModule, DxTemplateModule];\n    }\n  });\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { DxSankeyComponent, DxSankeyModule }; //# sourceMappingURL=devextreme-angular-ui-sankey.js.map","map":null,"metadata":{},"sourceType":"module"}