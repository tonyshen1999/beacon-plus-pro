{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\n/**\r\n * DevExtreme (esm/renovation/ui/scheduler/utils/semaphore/scrollSemaphore.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { Semaphore } from \"./semaphore\";\nexport var ScrollSemaphore = /*#__PURE__*/function () {\n  function ScrollSemaphore() {\n    _classCallCheck(this, ScrollSemaphore);\n\n    this.semaphore = new Semaphore();\n    this.position = {\n      left: -1,\n      top: -1\n    };\n  }\n\n  _createClass(ScrollSemaphore, [{\n    key: \"isFree\",\n    value: function isFree(position) {\n      if (this.isInitialPosition()) {\n        this.setPosition(position);\n        return this.semaphore.isFree();\n      }\n\n      return this.semaphore.isFree() && !this.comparePosition(position);\n    }\n  }, {\n    key: \"take\",\n    value: function take(position) {\n      this.semaphore.take();\n      this.setPosition(position);\n    }\n  }, {\n    key: \"release\",\n    value: function release() {\n      this.semaphore.release();\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(source) {\n      var _source$left, _source$top;\n\n      this.position.left = null !== (_source$left = source.left) && void 0 !== _source$left ? _source$left : -1;\n      this.position.top = null !== (_source$top = source.top) && void 0 !== _source$top ? _source$top : -1;\n    }\n  }, {\n    key: \"isInitialPosition\",\n    value: function isInitialPosition() {\n      return -1 === this.position.left && -1 === this.position.top;\n    }\n  }, {\n    key: \"comparePosition\",\n    value: function comparePosition(target) {\n      var _target$left, _target$top;\n\n      var left = null !== (_target$left = target.left) && void 0 !== _target$left ? _target$left : -1;\n      var top = null !== (_target$top = target.top) && void 0 !== _target$top ? _target$top : -1;\n      return this.position.left === left && this.position.top === top;\n    }\n  }]);\n\n  return ScrollSemaphore;\n}();","map":null,"metadata":{},"sourceType":"module"}