{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/header/dateNavigator.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { isMaterial } from \"../../themes\";\nimport dateUtils from \"../../../core/utils/date\";\nvar trimTime = dateUtils.trimTime;\nvar DATE_NAVIGATOR_CLASS = \"dx-scheduler-navigator\";\nvar PREVIOUS_BUTTON_CLASS = \"dx-scheduler-navigator-previous\";\nvar CALENDAR_BUTTON_CLASS = \"dx-scheduler-navigator-caption\";\nvar NEXT_BUTTON_CLASS = \"dx-scheduler-navigator-next\";\nvar DIRECTION_LEFT = -1;\nvar DIRECTION_RIGHT = 1;\nexport var getDateNavigator = function getDateNavigator(header, item) {\n  var items = [getPreviousButtonOptions(header), getCalendarButtonOptions(header), getNextButtonOptions(header)];\n  var stylingMode = isMaterial() ? \"text\" : \"contained\";\n  return _extends({\n    widget: \"dxButtonGroup\",\n    cssClass: DATE_NAVIGATOR_CLASS,\n    options: {\n      items: items,\n      stylingMode: stylingMode,\n      selectionMode: \"none\",\n      onItemClick: function onItemClick(e) {\n        e.itemData.clickHandler(e);\n      }\n    }\n  }, item);\n};\n\nvar getPreviousButtonOptions = function getPreviousButtonOptions(header) {\n  return {\n    key: \"previous\",\n    icon: \"chevronprev\",\n    elementAttr: {\n      class: PREVIOUS_BUTTON_CLASS\n    },\n    clickHandler: function clickHandler() {\n      return header._updateDateByDirection(DIRECTION_LEFT);\n    },\n    onContentReady: function onContentReady(e) {\n      var previousButton = e.component;\n      previousButton.option(\"disabled\", isPreviousButtonDisabled(header));\n\n      header._addEvent(\"min\", function () {\n        previousButton.option(\"disabled\", isPreviousButtonDisabled(header));\n      });\n\n      header._addEvent(\"currentDate\", function () {\n        previousButton.option(\"disabled\", isPreviousButtonDisabled(header));\n      });\n\n      header._addEvent(\"startViewDate\", function () {\n        previousButton.option(\"disabled\", isPreviousButtonDisabled(header));\n      });\n    }\n  };\n};\n\nvar getCalendarButtonOptions = function getCalendarButtonOptions(header) {\n  return {\n    key: \"calendar\",\n    text: header.captionText,\n    elementAttr: {\n      class: CALENDAR_BUTTON_CLASS\n    },\n    clickHandler: function clickHandler(e) {\n      return header._showCalendar(e);\n    },\n    onContentReady: function onContentReady(e) {\n      var calendarButton = e.component;\n\n      header._addEvent(\"currentView\", function () {\n        calendarButton.option(\"text\", header.captionText);\n      });\n\n      header._addEvent(\"currentDate\", function () {\n        calendarButton.option(\"text\", header.captionText);\n      });\n\n      header._addEvent(\"startViewDate\", function () {\n        calendarButton.option(\"text\", header.captionText);\n      });\n\n      header._addEvent(\"views\", function () {\n        calendarButton.option(\"text\", header.captionText);\n      });\n\n      header._addEvent(\"firstDayOfWeek\", function () {\n        calendarButton.option(\"text\", header.captionText);\n      });\n    }\n  };\n};\n\nvar getNextButtonOptions = function getNextButtonOptions(header) {\n  return {\n    key: \"next\",\n    icon: \"chevronnext\",\n    elementAttr: {\n      class: NEXT_BUTTON_CLASS\n    },\n    clickHandler: function clickHandler() {\n      return header._updateDateByDirection(DIRECTION_RIGHT);\n    },\n    onContentReady: function onContentReady(e) {\n      var nextButton = e.component;\n      nextButton.option(\"disabled\", isNextButtonDisabled(header));\n\n      header._addEvent(\"min\", function () {\n        nextButton.option(\"disabled\", isNextButtonDisabled(header));\n      });\n\n      header._addEvent(\"currentDate\", function () {\n        nextButton.option(\"disabled\", isNextButtonDisabled(header));\n      });\n\n      header._addEvent(\"startViewDate\", function () {\n        nextButton.option(\"disabled\", isNextButtonDisabled(header));\n      });\n    }\n  };\n};\n\nvar isPreviousButtonDisabled = function isPreviousButtonDisabled(header) {\n  var min = header.option(\"min\");\n\n  if (!min) {\n    return false;\n  }\n\n  min = new Date(min);\n\n  var caption = header._getCaption();\n\n  min = trimTime(min);\n\n  var previousDate = header._getNextDate(-1, caption.endDate);\n\n  return previousDate < min;\n};\n\nvar isNextButtonDisabled = function isNextButtonDisabled(header) {\n  var max = header.option(\"max\");\n\n  if (!max) {\n    return false;\n  }\n\n  max = new Date(max);\n\n  var caption = header._getCaption();\n\n  max = max.setHours(23, 59, 59);\n\n  var nextDate = header._getNextDate(1, caption.startDate);\n\n  return nextDate > max;\n};","map":null,"metadata":{},"sourceType":"module"}