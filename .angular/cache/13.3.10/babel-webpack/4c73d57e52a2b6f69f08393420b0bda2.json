{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/list/ui.list.edit.decorator.switchable.button.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getWidth, getOuterWidth } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport fx from \"../../animation/fx\";\nimport Button from \"../button\";\nimport messageLocalization from \"../../localization/message\";\nimport { register as registerDecorator } from \"./ui.list.edit.decorator_registry\";\nimport SwitchableEditDecorator from \"./ui.list.edit.decorator.switchable\";\nvar SWITCHABLE_DELETE_BUTTON_CONTAINER_CLASS = \"dx-list-switchable-delete-button-container\";\nvar SWITCHABLE_DELETE_BUTTON_WRAPPER_CLASS = \"dx-list-switchable-delete-button-wrapper\";\nvar SWITCHABLE_DELETE_BUTTON_INNER_WRAPPER_CLASS = \"dx-list-switchable-delete-button-inner-wrapper\";\nvar SWITCHABLE_DELETE_BUTTON_CLASS = \"dx-list-switchable-delete-button\";\nvar SWITCHABLE_DELETE_BUTTON_ANIMATION_DURATION = 200;\nvar SwitchableButtonEditDecorator = SwitchableEditDecorator.inherit({\n  _init: function _init() {\n    this.callBase.apply(this, arguments);\n    var $buttonContainer = $(\"<div>\").addClass(SWITCHABLE_DELETE_BUTTON_CONTAINER_CLASS);\n    var $buttonWrapper = $(\"<div>\").addClass(SWITCHABLE_DELETE_BUTTON_WRAPPER_CLASS);\n    var $buttonInnerWrapper = $(\"<div>\").addClass(SWITCHABLE_DELETE_BUTTON_INNER_WRAPPER_CLASS);\n    var $button = $(\"<div>\").addClass(SWITCHABLE_DELETE_BUTTON_CLASS);\n\n    this._list._createComponent($button, Button, {\n      text: messageLocalization.format(\"dxListEditDecorator-delete\"),\n      type: \"danger\",\n      onClick: function (e) {\n        this._deleteItem();\n\n        e.event.stopPropagation();\n      }.bind(this),\n      integrationOptions: {}\n    });\n\n    $buttonContainer.append($buttonWrapper);\n    $buttonWrapper.append($buttonInnerWrapper);\n    $buttonInnerWrapper.append($button);\n    this._$buttonContainer = $buttonContainer;\n  },\n  _enablePositioning: function _enablePositioning($itemElement) {\n    this.callBase.apply(this, arguments);\n    fx.stop(this._$buttonContainer, true);\n\n    this._$buttonContainer.appendTo($itemElement);\n  },\n  _disablePositioning: function _disablePositioning() {\n    this.callBase.apply(this, arguments);\n\n    this._$buttonContainer.detach();\n  },\n  _animatePrepareDeleteReady: function _animatePrepareDeleteReady() {\n    var rtl = this._isRtlEnabled();\n\n    var listWidth = getWidth(this._list.$element());\n\n    var buttonWidth = this._buttonWidth();\n\n    var fromValue = rtl ? listWidth : -buttonWidth;\n    var toValue = rtl ? listWidth - buttonWidth : 0;\n    return fx.animate(this._$buttonContainer, {\n      type: \"custom\",\n      duration: SWITCHABLE_DELETE_BUTTON_ANIMATION_DURATION,\n      from: {\n        right: fromValue\n      },\n      to: {\n        right: toValue\n      }\n    });\n  },\n  _animateForgetDeleteReady: function _animateForgetDeleteReady() {\n    var rtl = this._isRtlEnabled();\n\n    var listWidth = getWidth(this._list.$element());\n\n    var buttonWidth = this._buttonWidth();\n\n    var fromValue = rtl ? listWidth - buttonWidth : 0;\n    var toValue = rtl ? listWidth : -buttonWidth;\n    return fx.animate(this._$buttonContainer, {\n      type: \"custom\",\n      duration: SWITCHABLE_DELETE_BUTTON_ANIMATION_DURATION,\n      from: {\n        right: fromValue\n      },\n      to: {\n        right: toValue\n      }\n    });\n  },\n  _buttonWidth: function _buttonWidth() {\n    if (!this._buttonContainerWidth) {\n      this._buttonContainerWidth = getOuterWidth(this._$buttonContainer);\n    }\n\n    return this._buttonContainerWidth;\n  },\n  dispose: function dispose() {\n    if (this._$buttonContainer) {\n      this._$buttonContainer.remove();\n    }\n\n    this.callBase.apply(this, arguments);\n  }\n});\nvar TOGGLE_DELETE_SWITCH_CONTAINER_CLASS = \"dx-list-toggle-delete-switch-container\";\nvar TOGGLE_DELETE_SWITCH_CLASS = \"dx-list-toggle-delete-switch\";\nregisterDecorator(\"delete\", \"toggle\", SwitchableButtonEditDecorator.inherit({\n  beforeBag: function beforeBag(config) {\n    var $itemElement = config.$itemElement;\n    var $container = config.$container;\n    var $toggle = $(\"<div>\").addClass(TOGGLE_DELETE_SWITCH_CLASS);\n\n    this._list._createComponent($toggle, Button, {\n      icon: \"toggle-delete\",\n      onClick: function (e) {\n        fx.stop(this._$buttonContainer, false);\n\n        this._toggleDeleteReady($itemElement);\n\n        e.event.stopPropagation();\n      }.bind(this),\n      integrationOptions: {}\n    });\n\n    $container.addClass(TOGGLE_DELETE_SWITCH_CONTAINER_CLASS);\n    $container.append($toggle);\n  }\n}));\nregisterDecorator(\"delete\", \"slideButton\", SwitchableButtonEditDecorator.inherit({\n  _shouldHandleSwipe: true,\n  _swipeEndHandler: function _swipeEndHandler($itemElement, args) {\n    if (0 !== args.targetOffset) {\n      fx.stop(this._$buttonContainer, false);\n\n      this._toggleDeleteReady($itemElement);\n    }\n\n    return true;\n  }\n}));\nexport default SwitchableButtonEditDecorator;","map":null,"metadata":{},"sourceType":"module"}