{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/diagram/diagram.commands_manager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getDiagram } from \"./diagram.importer\";\nimport { fileSaver } from \"../../exporter/file_saver\";\nimport { isFunction } from \"../../core/utils/type\";\nimport { getWindow } from \"../../core/utils/window\";\nimport { extend } from \"../../core/utils/extend\";\nimport messageLocalization from \"../../localization/message\";\nvar SEPARATOR = \"separator\";\nvar SEPARATOR_COMMAND = {\n  widget: SEPARATOR\n};\nvar CSS_CLASSES = {\n  SMALL_EDITOR_ITEM: \"dx-diagram-sm-edit-item\",\n  MEDIUM_EDITOR_ITEM: \"dx-diagram-md-edit-item\",\n  LARGE_EDITOR_ITEM: \"dx-diagram-lg-edit-item\",\n  IMAGE_DROPDOWN_ITEM: \"dx-diagram-image-dropdown-item\",\n  COLOR_EDITOR_ITEM: \"dx-diagram-color-edit-item\",\n  LARGE_ICON_ITEM: \"dx-diagram-lg-icon-item\"\n};\nvar DiagramCommandsManager = {\n  SHOW_TOOLBOX_COMMAND_NAME: \"toolbox\",\n  SHOW_PROPERTIES_PANEL_COMMAND_NAME: \"propertiesPanel\",\n  getAllCommands: function getAllCommands() {\n    var _this = this;\n\n    var _getDiagram = getDiagram(),\n        DiagramCommand = _getDiagram.DiagramCommand;\n\n    return this._allCommands || (this._allCommands = {\n      separator: SEPARATOR_COMMAND,\n      exportSvg: {\n        command: DiagramCommand.ExportSvg,\n        text: messageLocalization.format(\"dxDiagram-commandExportToSvg\"),\n        getParameter: function getParameter(widget) {\n          return function (dataURI) {\n            return _this._exportTo(widget, dataURI, \"SVG\", \"image/svg+xml\");\n          };\n        }\n      },\n      exportPng: {\n        command: DiagramCommand.ExportPng,\n        text: messageLocalization.format(\"dxDiagram-commandExportToPng\"),\n        getParameter: function getParameter(widget) {\n          return function (dataURI) {\n            return _this._exportTo(widget, dataURI, \"PNG\", \"image/png\");\n          };\n        }\n      },\n      exportJpg: {\n        command: DiagramCommand.ExportJpg,\n        text: messageLocalization.format(\"dxDiagram-commandExportToJpg\"),\n        getParameter: function getParameter(widget) {\n          return function (dataURI) {\n            return _this._exportTo(widget, dataURI, \"JPEG\", \"image/jpeg\");\n          };\n        }\n      },\n      undo: {\n        command: DiagramCommand.Undo,\n        hint: messageLocalization.format(\"dxDiagram-commandUndo\"),\n        text: messageLocalization.format(\"dxDiagram-commandUndo\"),\n        icon: \"undo\",\n        menuIcon: \"undo\"\n      },\n      redo: {\n        command: DiagramCommand.Redo,\n        hint: messageLocalization.format(\"dxDiagram-commandRedo\"),\n        text: messageLocalization.format(\"dxDiagram-commandRedo\"),\n        icon: \"redo\",\n        menuIcon: \"redo\"\n      },\n      cut: {\n        command: DiagramCommand.Cut,\n        hint: messageLocalization.format(\"dxDiagram-commandCut\"),\n        text: messageLocalization.format(\"dxDiagram-commandCut\"),\n        icon: \"cut\",\n        menuIcon: \"cut\"\n      },\n      copy: {\n        command: DiagramCommand.Copy,\n        hint: messageLocalization.format(\"dxDiagram-commandCopy\"),\n        text: messageLocalization.format(\"dxDiagram-commandCopy\"),\n        icon: \"copy\",\n        menuIcon: \"copy\"\n      },\n      paste: {\n        command: DiagramCommand.PasteInPosition,\n        hint: messageLocalization.format(\"dxDiagram-commandPaste\"),\n        text: messageLocalization.format(\"dxDiagram-commandPaste\"),\n        icon: \"paste\",\n        menuIcon: \"paste\"\n      },\n      selectAll: {\n        command: DiagramCommand.SelectAll,\n        hint: messageLocalization.format(\"dxDiagram-commandSelectAll\"),\n        text: messageLocalization.format(\"dxDiagram-commandSelectAll\"),\n        icon: \"dx-diagram-i-button-select-all dx-diagram-i\",\n        menuIcon: \"dx-diagram-i-menu-select-all dx-diagram-i\"\n      },\n      delete: {\n        command: DiagramCommand.Delete,\n        hint: messageLocalization.format(\"dxDiagram-commandDelete\"),\n        text: messageLocalization.format(\"dxDiagram-commandDelete\"),\n        icon: \"remove\",\n        menuIcon: \"remove\"\n      },\n      fontName: {\n        command: DiagramCommand.FontName,\n        hint: messageLocalization.format(\"dxDiagram-commandFontName\"),\n        text: messageLocalization.format(\"dxDiagram-commandFontName\"),\n        widget: \"dxSelectBox\",\n        items: [\"Arial\", \"Arial Black\", \"Helvetica\", \"Times New Roman\", \"Courier New\", \"Courier\", \"Verdana\", \"Georgia\", \"Comic Sans MS\", \"Trebuchet MS\"].map(function (item) {\n          return {\n            text: item,\n            value: item\n          };\n        }),\n        cssClass: CSS_CLASSES.MEDIUM_EDITOR_ITEM\n      },\n      fontSize: {\n        command: DiagramCommand.FontSize,\n        hint: messageLocalization.format(\"dxDiagram-commandFontSize\"),\n        text: messageLocalization.format(\"dxDiagram-commandFontSize\"),\n        widget: \"dxSelectBox\",\n        items: [8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48, 72].map(function (item) {\n          return {\n            text: item + \"pt\",\n            value: item + \"pt\"\n          };\n        }),\n        cssClass: CSS_CLASSES.SMALL_EDITOR_ITEM\n      },\n      bold: {\n        command: DiagramCommand.Bold,\n        hint: messageLocalization.format(\"dxDiagram-commandBold\"),\n        text: messageLocalization.format(\"dxDiagram-commandBold\"),\n        icon: \"bold\",\n        menuIcon: \"bold\"\n      },\n      italic: {\n        command: DiagramCommand.Italic,\n        hint: messageLocalization.format(\"dxDiagram-commandItalic\"),\n        text: messageLocalization.format(\"dxDiagram-commandItalic\"),\n        icon: \"italic\",\n        menuIcon: \"italic\"\n      },\n      underline: {\n        command: DiagramCommand.Underline,\n        hint: messageLocalization.format(\"dxDiagram-commandUnderline\"),\n        text: messageLocalization.format(\"dxDiagram-commandUnderline\"),\n        icon: \"underline\",\n        menuIcon: \"underline\"\n      },\n      fontColor: {\n        command: DiagramCommand.FontColor,\n        text: messageLocalization.format(\"dxDiagram-commandTextColor\"),\n        hint: messageLocalization.format(\"dxDiagram-commandTextColor\"),\n        widget: \"dxColorBox\",\n        icon: \"dx-icon dx-icon-color\",\n        menuIcon: \"dx-icon dx-icon-color\",\n        cssClass: CSS_CLASSES.COLOR_EDITOR_ITEM\n      },\n      lineColor: {\n        command: DiagramCommand.StrokeColor,\n        text: messageLocalization.format(\"dxDiagram-commandLineColor\"),\n        hint: messageLocalization.format(\"dxDiagram-commandLineColor\"),\n        widget: \"dxColorBox\",\n        icon: \"dx-icon dx-icon-background\",\n        menuIcon: \"dx-icon dx-icon-background\",\n        cssClass: CSS_CLASSES.COLOR_EDITOR_ITEM\n      },\n      lineWidth: {\n        command: DiagramCommand.StrokeWidth,\n        text: messageLocalization.format(\"dxDiagram-commandLineWidth\"),\n        hint: messageLocalization.format(\"dxDiagram-commandLineWidth\"),\n        widget: \"dxSelectBox\",\n        items: [1, 2, 3, 4, 5, 6, 7, 8].map(function (item) {\n          return {\n            text: item + \"px\",\n            value: item.toString()\n          };\n        }),\n        cssClass: CSS_CLASSES.SMALL_EDITOR_ITEM\n      },\n      lineStyle: {\n        command: DiagramCommand.StrokeStyle,\n        text: messageLocalization.format(\"dxDiagram-commandLineStyle\"),\n        hint: messageLocalization.format(\"dxDiagram-commandLineStyle\"),\n        widget: \"dxSelectBox\",\n        items: [{\n          value: \"\",\n          menuIcon: \"dx-diagram-i-line-solid dx-diagram-i\",\n          hint: messageLocalization.format(\"dxDiagram-commandLineStyleSolid\")\n        }, {\n          value: \"2,2\",\n          menuIcon: \"dx-diagram-i-line-dotted dx-diagram-i\",\n          hint: messageLocalization.format(\"dxDiagram-commandLineStyleDotted\")\n        }, {\n          value: \"6,2\",\n          menuIcon: \"dx-diagram-i-line-dashed dx-diagram-i\",\n          hint: messageLocalization.format(\"dxDiagram-commandLineStyleDashed\")\n        }],\n        cssClass: CSS_CLASSES.IMAGE_DROPDOWN_ITEM\n      },\n      fillColor: {\n        command: DiagramCommand.FillColor,\n        text: messageLocalization.format(\"dxDiagram-commandFillColor\"),\n        hint: messageLocalization.format(\"dxDiagram-commandFillColor\"),\n        widget: \"dxColorBox\",\n        icon: \"dx-diagram-i dx-diagram-i-button-fill\",\n        menuIcon: \"dx-diagram-i dx-diagram-i-menu-fill\",\n        cssClass: CSS_CLASSES.COLOR_EDITOR_ITEM\n      },\n      textAlignLeft: {\n        command: DiagramCommand.TextLeftAlign,\n        hint: messageLocalization.format(\"dxDiagram-commandAlignLeft\"),\n        text: messageLocalization.format(\"dxDiagram-commandAlignLeft\"),\n        icon: \"alignleft\",\n        menuIcon: \"alignleft\"\n      },\n      textAlignCenter: {\n        command: DiagramCommand.TextCenterAlign,\n        hint: messageLocalization.format(\"dxDiagram-commandAlignCenter\"),\n        text: messageLocalization.format(\"dxDiagram-commandAlignCenter\"),\n        icon: \"aligncenter\",\n        menuIcon: \"aligncenter\"\n      },\n      textAlignRight: {\n        command: DiagramCommand.TextRightAlign,\n        hint: messageLocalization.format(\"dxDiagram-commandAlignRight\"),\n        text: messageLocalization.format(\"dxDiagram-commandAlignRight\"),\n        icon: \"alignright\",\n        menuIcon: \"alignright\"\n      },\n      lock: {\n        command: DiagramCommand.Lock,\n        hint: messageLocalization.format(\"dxDiagram-commandLock\"),\n        text: messageLocalization.format(\"dxDiagram-commandLock\"),\n        icon: \"dx-diagram-i-button-lock dx-diagram-i\",\n        menuIcon: \"dx-diagram-i-menu-lock dx-diagram-i\"\n      },\n      unlock: {\n        command: DiagramCommand.Unlock,\n        hint: messageLocalization.format(\"dxDiagram-commandUnlock\"),\n        text: messageLocalization.format(\"dxDiagram-commandUnlock\"),\n        icon: \"dx-diagram-i-button-unlock dx-diagram-i\",\n        menuIcon: \"dx-diagram-i-menu-unlock dx-diagram-i\"\n      },\n      bringToFront: {\n        command: DiagramCommand.BringToFront,\n        hint: messageLocalization.format(\"dxDiagram-commandBringToFront\"),\n        text: messageLocalization.format(\"dxDiagram-commandBringToFront\"),\n        icon: \"dx-diagram-i-button-bring-to-front dx-diagram-i\",\n        menuIcon: \"dx-diagram-i-menu-bring-to-front dx-diagram-i\"\n      },\n      sendToBack: {\n        command: DiagramCommand.SendToBack,\n        hint: messageLocalization.format(\"dxDiagram-commandSendToBack\"),\n        text: messageLocalization.format(\"dxDiagram-commandSendToBack\"),\n        icon: \"dx-diagram-i-button-send-to-back dx-diagram-i\",\n        menuIcon: \"dx-diagram-i-menu-send-to-back dx-diagram-i\"\n      },\n      insertShapeImage: {\n        command: DiagramCommand.InsertShapeImage,\n        text: messageLocalization.format(\"dxDiagram-commandInsertShapeImage\"),\n        icon: \"dx-diagram-i-button-image-insert dx-diagram-i\",\n        menuIcon: \"dx-diagram-i-menu-image-insert dx-diagram-i\"\n      },\n      editShapeImage: {\n        command: DiagramCommand.EditShapeImage,\n        text: messageLocalization.format(\"dxDiagram-commandEditShapeImage\"),\n        icon: \"dx-diagram-i-button-image-edit dx-diagram-i\",\n        menuIcon: \"dx-diagram-i-menu-image-edit dx-diagram-i\"\n      },\n      deleteShapeImage: {\n        command: DiagramCommand.DeleteShapeImage,\n        text: messageLocalization.format(\"dxDiagram-commandDeleteShapeImage\"),\n        icon: \"dx-diagram-i-button-image-delete dx-diagram-i\",\n        menuIcon: \"dx-diagram-i-menu-image-delete dx-diagram-i\"\n      },\n      connectorLineType: {\n        command: DiagramCommand.ConnectorLineOption,\n        widget: \"dxSelectBox\",\n        hint: messageLocalization.format(\"dxDiagram-commandConnectorLineType\"),\n        text: messageLocalization.format(\"dxDiagram-commandConnectorLineType\"),\n        items: [{\n          value: 0,\n          menuIcon: \"dx-diagram-i-connector-straight dx-diagram-i\",\n          hint: messageLocalization.format(\"dxDiagram-commandConnectorLineStraight\"),\n          text: messageLocalization.format(\"dxDiagram-commandConnectorLineStraight\")\n        }, {\n          value: 1,\n          menuIcon: \"dx-diagram-i-connector-orthogonal dx-diagram-i\",\n          hint: messageLocalization.format(\"dxDiagram-commandConnectorLineOrthogonal\"),\n          text: messageLocalization.format(\"dxDiagram-commandConnectorLineOrthogonal\")\n        }],\n        cssClass: CSS_CLASSES.IMAGE_DROPDOWN_ITEM\n      },\n      connectorLineStart: {\n        command: DiagramCommand.ConnectorStartLineEnding,\n        widget: \"dxSelectBox\",\n        items: [{\n          value: 0,\n          menuIcon: \"dx-diagram-i-connector-begin-none dx-diagram-i\",\n          hint: messageLocalization.format(\"dxDiagram-commandConnectorLineNone\"),\n          text: messageLocalization.format(\"dxDiagram-commandConnectorLineNone\")\n        }, {\n          value: 1,\n          menuIcon: \"dx-diagram-i-connector-begin-arrow dx-diagram-i\",\n          hint: messageLocalization.format(\"dxDiagram-commandConnectorLineArrow\"),\n          text: messageLocalization.format(\"dxDiagram-commandConnectorLineArrow\")\n        }, {\n          value: 2,\n          menuIcon: \"dx-diagram-i-connector-begin-outlined-triangle dx-diagram-i\",\n          hint: messageLocalization.format(\"dxDiagram-commandConnectorLineArrow\"),\n          text: messageLocalization.format(\"dxDiagram-commandConnectorLineArrow\")\n        }, {\n          value: 3,\n          menuIcon: \"dx-diagram-i-connector-begin-filled-triangle dx-diagram-i\",\n          hint: messageLocalization.format(\"dxDiagram-commandConnectorLineArrow\"),\n          text: messageLocalization.format(\"dxDiagram-commandConnectorLineArrow\")\n        }],\n        hint: messageLocalization.format(\"dxDiagram-commandConnectorLineStart\"),\n        text: messageLocalization.format(\"dxDiagram-commandConnectorLineStart\"),\n        cssClass: CSS_CLASSES.IMAGE_DROPDOWN_ITEM\n      },\n      connectorLineEnd: {\n        command: DiagramCommand.ConnectorEndLineEnding,\n        widget: \"dxSelectBox\",\n        items: [{\n          value: 0,\n          menuIcon: \"dx-diagram-i-connector-end-none dx-diagram-i\",\n          hint: messageLocalization.format(\"dxDiagram-commandConnectorLineNone\"),\n          text: messageLocalization.format(\"dxDiagram-commandConnectorLineNone\")\n        }, {\n          value: 1,\n          menuIcon: \"dx-diagram-i-connector-end-arrow dx-diagram-i\",\n          hint: messageLocalization.format(\"dxDiagram-commandConnectorLineArrow\"),\n          text: messageLocalization.format(\"dxDiagram-commandConnectorLineArrow\")\n        }, {\n          value: 2,\n          menuIcon: \"dx-diagram-i-connector-end-outlined-triangle dx-diagram-i\",\n          hint: messageLocalization.format(\"dxDiagram-commandConnectorLineArrow\"),\n          text: messageLocalization.format(\"dxDiagram-commandConnectorLineArrow\")\n        }, {\n          value: 3,\n          menuIcon: \"dx-diagram-i-connector-end-filled-triangle dx-diagram-i\",\n          hint: messageLocalization.format(\"dxDiagram-commandConnectorLineArrow\"),\n          text: messageLocalization.format(\"dxDiagram-commandConnectorLineArrow\")\n        }],\n        hint: messageLocalization.format(\"dxDiagram-commandConnectorLineEnd\"),\n        text: messageLocalization.format(\"dxDiagram-commandConnectorLineEnd\"),\n        cssClass: CSS_CLASSES.IMAGE_DROPDOWN_ITEM\n      },\n      layoutTreeTopToBottom: {\n        command: DiagramCommand.AutoLayoutTreeVertical,\n        text: messageLocalization.format(\"dxDiagram-commandLayoutTopToBottom\"),\n        hint: messageLocalization.format(\"dxDiagram-commandLayoutTopToBottom\"),\n        icon: \"dx-diagram-i-button-layout-tree-tb dx-diagram-i\",\n        cssClass: CSS_CLASSES.LARGE_ICON_ITEM\n      },\n      layoutTreeBottomToTop: {\n        command: DiagramCommand.AutoLayoutTreeVerticalBottomToTop,\n        text: messageLocalization.format(\"dxDiagram-commandLayoutBottomToTop\"),\n        hint: messageLocalization.format(\"dxDiagram-commandLayoutBottomToTop\"),\n        icon: \"dx-diagram-i-button-layout-tree-bt dx-diagram-i\",\n        cssClass: CSS_CLASSES.LARGE_ICON_ITEM\n      },\n      layoutTreeLeftToRight: {\n        command: DiagramCommand.AutoLayoutTreeHorizontal,\n        text: messageLocalization.format(\"dxDiagram-commandLayoutLeftToRight\"),\n        hint: messageLocalization.format(\"dxDiagram-commandLayoutLeftToRight\"),\n        icon: \"dx-diagram-i-button-layout-tree-lr dx-diagram-i\",\n        cssClass: CSS_CLASSES.LARGE_ICON_ITEM\n      },\n      layoutTreeRightToLeft: {\n        command: DiagramCommand.AutoLayoutTreeHorizontalRightToLeft,\n        text: messageLocalization.format(\"dxDiagram-commandLayoutRightToLeft\"),\n        hint: messageLocalization.format(\"dxDiagram-commandLayoutRightToLeft\"),\n        icon: \"dx-diagram-i-button-layout-tree-rl dx-diagram-i\",\n        cssClass: CSS_CLASSES.LARGE_ICON_ITEM\n      },\n      layoutLayeredTopToBottom: {\n        command: DiagramCommand.AutoLayoutLayeredVertical,\n        text: messageLocalization.format(\"dxDiagram-commandLayoutTopToBottom\"),\n        hint: messageLocalization.format(\"dxDiagram-commandLayoutTopToBottom\"),\n        icon: \"dx-diagram-i-button-layout-layered-tb dx-diagram-i\",\n        cssClass: CSS_CLASSES.LARGE_ICON_ITEM\n      },\n      layoutLayeredBottomToTop: {\n        command: DiagramCommand.AutoLayoutLayeredVerticalBottomToTop,\n        text: messageLocalization.format(\"dxDiagram-commandLayoutBottomToTop\"),\n        hint: messageLocalization.format(\"dxDiagram-commandLayoutBottomToTop\"),\n        icon: \"dx-diagram-i-button-layout-layered-bt dx-diagram-i\",\n        cssClass: CSS_CLASSES.LARGE_ICON_ITEM\n      },\n      layoutLayeredLeftToRight: {\n        command: DiagramCommand.AutoLayoutLayeredHorizontal,\n        text: messageLocalization.format(\"dxDiagram-commandLayoutLeftToRight\"),\n        hint: messageLocalization.format(\"dxDiagram-commandLayoutLeftToRight\"),\n        icon: \"dx-diagram-i-button-layout-layered-lr dx-diagram-i\",\n        cssClass: CSS_CLASSES.LARGE_ICON_ITEM\n      },\n      layoutLayeredRightToLeft: {\n        command: DiagramCommand.AutoLayoutLayeredHorizontalRightToLeft,\n        text: messageLocalization.format(\"dxDiagram-commandLayoutRightToLeft\"),\n        hint: messageLocalization.format(\"dxDiagram-commandLayoutRightToLeft\"),\n        icon: \"dx-diagram-i-button-layout-layered-rl dx-diagram-i\",\n        cssClass: CSS_CLASSES.LARGE_ICON_ITEM\n      },\n      fullScreen: {\n        command: DiagramCommand.Fullscreen,\n        hint: messageLocalization.format(\"dxDiagram-commandFullscreen\"),\n        text: messageLocalization.format(\"dxDiagram-commandFullscreen\"),\n        icon: \"dx-diagram-i dx-diagram-i-button-fullscreen\",\n        menuIcon: \"dx-diagram-i dx-diagram-i-menu-fullscreen\",\n        cssClass: CSS_CLASSES.COLOR_EDITOR_ITEM\n      },\n      units: {\n        command: DiagramCommand.ViewUnits,\n        hint: messageLocalization.format(\"dxDiagram-commandUnits\"),\n        text: messageLocalization.format(\"dxDiagram-commandUnits\"),\n        widget: \"dxSelectBox\"\n      },\n      simpleView: {\n        command: DiagramCommand.ToggleSimpleView,\n        hint: messageLocalization.format(\"dxDiagram-commandSimpleView\"),\n        text: messageLocalization.format(\"dxDiagram-commandSimpleView\"),\n        widget: \"dxCheckBox\"\n      },\n      showGrid: {\n        command: DiagramCommand.ShowGrid,\n        hint: messageLocalization.format(\"dxDiagram-commandShowGrid\"),\n        text: messageLocalization.format(\"dxDiagram-commandShowGrid\"),\n        widget: \"dxCheckBox\"\n      },\n      snapToGrid: {\n        command: DiagramCommand.SnapToGrid,\n        hint: messageLocalization.format(\"dxDiagram-commandSnapToGrid\"),\n        text: messageLocalization.format(\"dxDiagram-commandSnapToGrid\"),\n        widget: \"dxCheckBox\"\n      },\n      gridSize: {\n        command: DiagramCommand.GridSize,\n        hint: messageLocalization.format(\"dxDiagram-commandGridSize\"),\n        text: messageLocalization.format(\"dxDiagram-commandGridSize\"),\n        widget: \"dxSelectBox\"\n      },\n      pageSize: {\n        command: DiagramCommand.PageSize,\n        hint: messageLocalization.format(\"dxDiagram-commandPageSize\"),\n        text: messageLocalization.format(\"dxDiagram-commandPageSize\"),\n        widget: \"dxSelectBox\",\n        cssClass: CSS_CLASSES.LARGE_EDITOR_ITEM,\n        getCommandValue: function getCommandValue(v) {\n          return JSON.parse(v);\n        },\n        getEditorValue: function getEditorValue(v) {\n          return JSON.stringify(v);\n        }\n      },\n      pageOrientation: {\n        command: DiagramCommand.PageLandscape,\n        hint: messageLocalization.format(\"dxDiagram-commandPageOrientation\"),\n        text: messageLocalization.format(\"dxDiagram-commandPageOrientation\"),\n        widget: \"dxSelectBox\",\n        items: [{\n          value: true,\n          text: messageLocalization.format(\"dxDiagram-commandPageOrientationLandscape\")\n        }, {\n          value: false,\n          text: messageLocalization.format(\"dxDiagram-commandPageOrientationPortrait\")\n        }],\n        cssClass: CSS_CLASSES.MEDIUM_EDITOR_ITEM\n      },\n      pageColor: {\n        command: DiagramCommand.PageColor,\n        hint: messageLocalization.format(\"dxDiagram-commandPageColor\"),\n        text: messageLocalization.format(\"dxDiagram-commandPageColor\"),\n        widget: \"dxColorBox\",\n        icon: \"dx-diagram-i dx-diagram-i-button-fill\",\n        menuIcon: \"dx-diagram-i dx-diagram-i-menu-fill\",\n        cssClass: CSS_CLASSES.COLOR_EDITOR_ITEM\n      },\n      zoomLevel: {\n        command: DiagramCommand.ZoomLevel,\n        hint: messageLocalization.format(\"dxDiagram-commandZoomLevel\"),\n        text: messageLocalization.format(\"dxDiagram-commandZoomLevel\"),\n        widget: \"dxTextBox\",\n        items: [SEPARATOR_COMMAND, {\n          command: DiagramCommand.FitToScreen,\n          hint: messageLocalization.format(\"dxDiagram-commandFitToContent\"),\n          text: messageLocalization.format(\"dxDiagram-commandFitToContent\")\n        }, {\n          command: DiagramCommand.FitToWidth,\n          hint: messageLocalization.format(\"dxDiagram-commandFitToWidth\"),\n          text: messageLocalization.format(\"dxDiagram-commandFitToWidth\")\n        }, SEPARATOR_COMMAND, {\n          command: DiagramCommand.AutoZoomToContent,\n          hint: messageLocalization.format(\"dxDiagram-commandAutoZoomByContent\"),\n          text: messageLocalization.format(\"dxDiagram-commandAutoZoomByContent\")\n        }, {\n          command: DiagramCommand.AutoZoomToWidth,\n          hint: messageLocalization.format(\"dxDiagram-commandAutoZoomByWidth\"),\n          text: messageLocalization.format(\"dxDiagram-commandAutoZoomByWidth\")\n        }],\n        getEditorDisplayValue: function getEditorDisplayValue(v) {\n          return Math.round(100 * v) + \"%\";\n        },\n        cssClass: CSS_CLASSES.SMALL_EDITOR_ITEM\n      },\n      toolbox: {\n        command: this.SHOW_TOOLBOX_COMMAND_NAME,\n        iconChecked: \"dx-diagram-i dx-diagram-i-button-toolbox-close\",\n        iconUnchecked: \"dx-diagram-i dx-diagram-i-button-toolbox-open\",\n        hint: messageLocalization.format(\"dxDiagram-uiShowToolbox\"),\n        text: messageLocalization.format(\"dxDiagram-uiShowToolbox\")\n      },\n      propertiesPanel: {\n        command: this.SHOW_PROPERTIES_PANEL_COMMAND_NAME,\n        iconChecked: \"close\",\n        iconUnchecked: \"dx-diagram-i dx-diagram-i-button-properties-panel-open\",\n        hint: messageLocalization.format(\"dxDiagram-uiProperties\"),\n        text: messageLocalization.format(\"dxDiagram-uiProperties\")\n      }\n    });\n  },\n  getMainToolbarCommands: function getMainToolbarCommands(commands, excludeCommands) {\n    var allCommands = this.getAllCommands();\n    var mainToolbarCommands = commands ? this._getPreparedCommands(allCommands, commands) : this._getDefaultMainToolbarCommands(allCommands);\n    return this._prepareToolbarCommands(mainToolbarCommands, excludeCommands);\n  },\n  _getDefaultMainToolbarCommands: function _getDefaultMainToolbarCommands(allCommands) {\n    return this._defaultMainToolbarCommands || (this._defaultMainToolbarCommands = [allCommands.undo, allCommands.redo, allCommands.separator, allCommands.fontName, allCommands.fontSize, allCommands.bold, allCommands.italic, allCommands.underline, allCommands.separator, allCommands.lineWidth, allCommands.lineStyle, allCommands.separator, allCommands.fontColor, allCommands.lineColor, allCommands.fillColor, allCommands.separator, allCommands.textAlignLeft, allCommands.textAlignCenter, allCommands.textAlignRight, allCommands.separator, allCommands.connectorLineType, allCommands.connectorLineStart, allCommands.connectorLineEnd, allCommands.separator, {\n      text: messageLocalization.format(\"dxDiagram-uiLayout\"),\n      showText: \"always\",\n      items: [{\n        text: messageLocalization.format(\"dxDiagram-uiLayoutTree\"),\n        items: [allCommands.layoutTreeTopToBottom, allCommands.layoutTreeBottomToTop, allCommands.layoutTreeLeftToRight, allCommands.layoutTreeRightToLeft]\n      }, {\n        text: messageLocalization.format(\"dxDiagram-uiLayoutLayered\"),\n        items: [allCommands.layoutLayeredTopToBottom, allCommands.layoutLayeredBottomToTop, allCommands.layoutLayeredLeftToRight, allCommands.layoutLayeredRightToLeft]\n      }]\n    }]);\n  },\n  getHistoryToolbarCommands: function getHistoryToolbarCommands(commands, excludeCommands) {\n    var allCommands = this.getAllCommands();\n    var historyToolbarCommands = commands ? this._getPreparedCommands(allCommands, commands) : this._getDefaultHistoryToolbarCommands(allCommands);\n    return this._prepareToolbarCommands(historyToolbarCommands, excludeCommands);\n  },\n  _getDefaultHistoryToolbarCommands: function _getDefaultHistoryToolbarCommands(allCommands) {\n    return this._defaultHistoryToolbarCommands || (this._defaultHistoryToolbarCommands = [allCommands.undo, allCommands.redo, allCommands.separator, allCommands.toolbox]);\n  },\n  getViewToolbarCommands: function getViewToolbarCommands(commands, excludeCommands) {\n    var allCommands = this.getAllCommands();\n    var viewToolbarCommands = commands ? this._getPreparedCommands(allCommands, commands) : this._getDefaultViewToolbarCommands(allCommands);\n    return this._prepareToolbarCommands(viewToolbarCommands, excludeCommands);\n  },\n  _getDefaultViewToolbarCommands: function _getDefaultViewToolbarCommands(allCommands) {\n    return this._defaultViewToolbarCommands || (this._defaultViewToolbarCommands = [allCommands.zoomLevel, allCommands.separator, allCommands.fullScreen, allCommands.separator, {\n      widget: \"dxButton\",\n      icon: \"export\",\n      text: messageLocalization.format(\"dxDiagram-uiExport\"),\n      hint: messageLocalization.format(\"dxDiagram-uiExport\"),\n      items: [allCommands.exportSvg, allCommands.exportPng, allCommands.exportJpg]\n    }, {\n      icon: \"preferences\",\n      hint: messageLocalization.format(\"dxDiagram-uiSettings\"),\n      text: messageLocalization.format(\"dxDiagram-uiSettings\"),\n      items: [allCommands.units, allCommands.separator, allCommands.showGrid, allCommands.snapToGrid, allCommands.gridSize, allCommands.separator, allCommands.simpleView, allCommands.toolbox]\n    }]);\n  },\n  getPropertiesToolbarCommands: function getPropertiesToolbarCommands(commands, excludeCommands) {\n    var allCommands = this.getAllCommands();\n    var propertiesCommands = commands ? this._getPreparedCommands(allCommands, commands) : this._getDefaultPropertiesToolbarCommands(allCommands);\n    return this._prepareToolbarCommands(propertiesCommands, excludeCommands);\n  },\n  _getDefaultPropertiesToolbarCommands: function _getDefaultPropertiesToolbarCommands(allCommands) {\n    return this._defaultPropertiesToolbarCommands || (this._defaultPropertiesToolbarCommands = [allCommands.propertiesPanel]);\n  },\n  _getDefaultPropertyPanelCommandGroups: function _getDefaultPropertyPanelCommandGroups() {\n    return this._defaultPropertyPanelCommandGroups || (this._defaultPropertyPanelCommandGroups = [{\n      title: messageLocalization.format(\"dxDiagram-uiStyle\"),\n      groups: [{\n        title: messageLocalization.format(\"dxDiagram-uiText\"),\n        commands: [\"fontName\", \"fontSize\", \"bold\", \"italic\", \"underline\", \"textAlignLeft\", \"textAlignCenter\", \"textAlignRight\", \"fontColor\"]\n      }, {\n        title: messageLocalization.format(\"dxDiagram-uiObject\"),\n        commands: [\"lineStyle\", \"lineWidth\", \"lineColor\", \"fillColor\"]\n      }, {\n        title: messageLocalization.format(\"dxDiagram-uiConnector\"),\n        commands: [\"connectorLineType\", \"connectorLineStart\", \"connectorLineEnd\"]\n      }]\n    }, {\n      title: messageLocalization.format(\"dxDiagram-uiLayout\"),\n      groups: [{\n        title: messageLocalization.format(\"dxDiagram-uiLayoutLayered\"),\n        commands: [\"layoutLayeredTopToBottom\", \"layoutLayeredBottomToTop\", \"layoutLayeredLeftToRight\", \"layoutLayeredRightToLeft\"]\n      }, {\n        title: messageLocalization.format(\"dxDiagram-uiLayoutTree\"),\n        commands: [\"layoutTreeTopToBottom\", \"layoutTreeBottomToTop\", \"layoutTreeLeftToRight\", \"layoutTreeRightToLeft\"]\n      }]\n    }, {\n      title: messageLocalization.format(\"dxDiagram-uiDiagram\"),\n      groups: [{\n        title: messageLocalization.format(\"dxDiagram-uiPage\"),\n        commands: [\"pageSize\", \"pageOrientation\", \"pageColor\"]\n      }]\n    }]);\n  },\n  _preparePropertyPanelGroups: function _preparePropertyPanelGroups(groups) {\n    var _this2 = this;\n\n    var allCommands = this.getAllCommands();\n    var result = [];\n    groups.forEach(function (g) {\n      var commands = g.commands;\n\n      if (commands) {\n        commands = _this2._getPreparedCommands(allCommands, commands);\n        commands = _this2._prepareToolbarCommands(commands);\n      }\n\n      var subGroups;\n\n      if (g.groups) {\n        subGroups = [];\n        g.groups.forEach(function (sg) {\n          var subCommands = sg.commands;\n\n          if (subCommands) {\n            subCommands = _this2._getPreparedCommands(allCommands, subCommands);\n            subCommands = _this2._prepareToolbarCommands(subCommands);\n          }\n\n          subGroups.push({\n            title: sg.title,\n            commands: subCommands\n          });\n        });\n      }\n\n      result.push({\n        title: g.title,\n        commands: commands,\n        groups: subGroups\n      });\n    });\n    return result;\n  },\n  getPropertyPanelCommandTabs: function getPropertyPanelCommandTabs(commandGroups) {\n    commandGroups = commandGroups || this._getDefaultPropertyPanelCommandGroups();\n    return this._preparePropertyPanelGroups(commandGroups);\n  },\n  getContextMenuCommands: function getContextMenuCommands(commands) {\n    var allCommands = this.getAllCommands();\n    var contextMenuCommands = commands ? this._getPreparedCommands(allCommands, commands) : this._getDefaultContextMenuCommands(allCommands);\n    return this._prepareContextMenuCommands(contextMenuCommands);\n  },\n  _getDefaultContextMenuCommands: function _getDefaultContextMenuCommands(allCommands) {\n    return this._defaultContextMenuCommands || (this._defaultContextMenuCommands = [allCommands.cut, allCommands.copy, allCommands.paste, allCommands.delete, allCommands.separator, allCommands.selectAll, allCommands.separator, allCommands.bringToFront, allCommands.sendToBack, allCommands.separator, allCommands.lock, allCommands.unlock, allCommands.separator, allCommands.insertShapeImage, allCommands.editShapeImage, allCommands.deleteShapeImage]);\n  },\n  _getPreparedCommands: function _getPreparedCommands(allCommands, commands) {\n    var _this3 = this;\n\n    return commands.map(function (c) {\n      if (c.widget && c.widget === SEPARATOR) {\n        var command = {\n          command: c,\n          location: c.location\n        };\n        return command;\n      } else if (allCommands[c]) {\n        return allCommands[c];\n      } else if (c.text || c.icon || c.name) {\n        var internalCommand = c.name && allCommands[c.name];\n        var _command = {\n          command: internalCommand && internalCommand.command,\n          name: c.name,\n          location: c.location,\n          text: c.text || internalCommand && internalCommand.text,\n          hint: c.text || internalCommand && internalCommand.hint,\n          icon: c.icon || internalCommand && internalCommand.icon,\n          menuIcon: c.icon || internalCommand && internalCommand.menuIcon,\n          widget: internalCommand && internalCommand.widget,\n          cssClass: internalCommand && internalCommand.cssClass,\n          getParameter: internalCommand && internalCommand.getParameter,\n          getCommandValue: internalCommand && internalCommand.getCommandValue,\n          getEditorValue: internalCommand && internalCommand.getEditorValue,\n          getEditorDisplayValue: internalCommand && internalCommand.getEditorDisplayValue,\n          iconChecked: internalCommand && internalCommand.iconChecked,\n          iconUnchecked: internalCommand && internalCommand.iconUnchecked\n        };\n\n        if (Array.isArray(c.items)) {\n          _command.items = _this3._getPreparedCommands(allCommands, c.items);\n        } else {\n          _command.items = internalCommand && internalCommand.items;\n        }\n\n        return _command;\n      }\n    }).filter(function (c) {\n      return c;\n    });\n  },\n  _prepareContextMenuCommands: function _prepareContextMenuCommands(commands, excludeCommands, rootCommand) {\n    var _this4 = this;\n\n    var beginGroup = false;\n    return commands.map(function (c) {\n      if (!_this4._isValidCommand(c, excludeCommands)) {\n        return;\n      }\n\n      if (c.widget && c.widget === SEPARATOR) {\n        beginGroup = true;\n      } else {\n        var command = _this4._cloneCommand(c, excludeCommands);\n\n        command.icon = command.menuIcon;\n        command.beginGroup = beginGroup;\n        command.rootCommand = !command.command ? rootCommand && rootCommand.command : void 0;\n        beginGroup = false;\n        return command;\n      }\n    }).filter(function (c) {\n      return c;\n    });\n  },\n  _prepareToolbarCommands: function _prepareToolbarCommands(commands, excludeCommands) {\n    var _this5 = this;\n\n    return commands.map(function (c) {\n      if (_this5._isValidCommand(c, excludeCommands)) {\n        return _this5._cloneCommand(c, excludeCommands);\n      }\n    }).filter(function (c) {\n      return c;\n    }).filter(function (c, index, arr) {\n      if (c.widget === SEPARATOR && index === arr.length - 1) {\n        return false;\n      }\n\n      return c;\n    });\n  },\n  _cloneCommand: function _cloneCommand(c, excludeCommands) {\n    var command = extend({}, c);\n\n    if (Array.isArray(c.items)) {\n      command.items = this._prepareContextMenuCommands(c.items, excludeCommands, command);\n    }\n\n    return command;\n  },\n  _isValidCommand: function _isValidCommand(c, excludeCommands) {\n    excludeCommands = excludeCommands || [];\n    return -1 === excludeCommands.indexOf(c.command);\n  },\n  _exportTo: function _exportTo(widget, dataURI, format, mimeString) {\n    var window = getWindow();\n\n    if (window && window.atob && isFunction(window.Blob)) {\n      var blob = this._getBlobByDataURI(window, dataURI, mimeString);\n\n      var options = widget.option(\"export\");\n      fileSaver.saveAs(options.fileName || \"foo\", format, blob, options.proxyURL);\n    }\n  },\n  _getBlobByDataURI: function _getBlobByDataURI(window, dataURI, mimeString) {\n    var byteString = window.atob(dataURI.split(\",\")[1]);\n    var ia = new Uint8Array(byteString.length);\n\n    for (var i = 0; i < byteString.length; i++) {\n      ia[i] = byteString.charCodeAt(i);\n    }\n\n    return new window.Blob([ia.buffer], {\n      type: mimeString\n    });\n  }\n};\nexport default DiagramCommandsManager;","map":null,"metadata":{},"sourceType":"module"}