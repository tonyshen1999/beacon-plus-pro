{"ast":null,"code":"/**\r\n * DevExtreme (esm/events/core/wheel.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport registerEvent from \"./event_registrator\";\nimport { addNamespace, fireEvent } from \"../utils/index\";\nvar EVENT_NAME = \"dxmousewheel\";\nvar EVENT_NAMESPACE = \"dxWheel\";\nvar NATIVE_EVENT_NAME = \"wheel\";\nvar PIXEL_MODE = 0;\nvar DELTA_MUTLIPLIER = 30;\nvar wheel = {\n  setup: function setup(element) {\n    var $element = $(element);\n    eventsEngine.on($element, addNamespace(NATIVE_EVENT_NAME, EVENT_NAMESPACE), wheel._wheelHandler.bind(wheel));\n  },\n  teardown: function teardown(element) {\n    eventsEngine.off(element, \".\".concat(EVENT_NAMESPACE));\n  },\n  _wheelHandler: function _wheelHandler(e) {\n    var _e$originalEvent = e.originalEvent,\n        deltaMode = _e$originalEvent.deltaMode,\n        deltaY = _e$originalEvent.deltaY,\n        deltaX = _e$originalEvent.deltaX,\n        deltaZ = _e$originalEvent.deltaZ;\n    fireEvent({\n      type: EVENT_NAME,\n      originalEvent: e,\n      delta: this._normalizeDelta(deltaY, deltaMode),\n      deltaX: deltaX,\n      deltaY: deltaY,\n      deltaZ: deltaZ,\n      deltaMode: deltaMode,\n      pointerType: \"mouse\"\n    });\n    e.stopPropagation();\n  },\n  _normalizeDelta: function _normalizeDelta(delta) {\n    var deltaMode = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : PIXEL_MODE;\n\n    if (deltaMode === PIXEL_MODE) {\n      return -delta;\n    } else {\n      return -DELTA_MUTLIPLIER * delta;\n    }\n  }\n};\nregisterEvent(EVENT_NAME, wheel);\nexport { EVENT_NAME as name };","map":null,"metadata":{},"sourceType":"module"}