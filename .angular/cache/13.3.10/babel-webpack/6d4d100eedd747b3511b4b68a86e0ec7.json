{"ast":null,"code":"import _classCallCheck from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tonyshen/beacon-pro/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { ToastrService } from \"ngx-toastr\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nimport * as i2 from \"ngx-bootstrap/dropdown\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"jw-bootstrap-switch-ng2\";\nimport * as i5 from \"@angular/forms\";\n\nvar _c0 = function _c0(a0) {\n  return {\n    active: a0\n  };\n};\n\nfunction FixedPluginComponent_ul_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ul\", 5)(1, \"li\", 6);\n    i0.ɵɵtext(2, \"Sidebar Background\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"li\", 7)(4, \"a\", 8)(5, \"div\", 9)(6, \"span\", 10);\n    i0.ɵɵlistener(\"click\", function FixedPluginComponent_ul_4_Template_span_click_6_listener() {\n      i0.ɵɵrestoreView(_r2);\n      var ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.changeSidebarColor(\"primary\");\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"span\", 11);\n    i0.ɵɵlistener(\"click\", function FixedPluginComponent_ul_4_Template_span_click_7_listener() {\n      i0.ɵɵrestoreView(_r2);\n      var ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.changeSidebarColor(\"blue\");\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"span\", 12);\n    i0.ɵɵlistener(\"click\", function FixedPluginComponent_ul_4_Template_span_click_8_listener() {\n      i0.ɵɵrestoreView(_r2);\n      var ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.changeSidebarColor(\"green\");\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"span\", 13);\n    i0.ɵɵlistener(\"click\", function FixedPluginComponent_ul_4_Template_span_click_9_listener() {\n      i0.ɵɵrestoreView(_r2);\n      var ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.changeSidebarColor(\"orange\");\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"span\", 14);\n    i0.ɵɵlistener(\"click\", function FixedPluginComponent_ul_4_Template_span_click_10_listener() {\n      i0.ɵɵrestoreView(_r2);\n      var ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.changeSidebarColor(\"red\");\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(11, \"div\", 15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"li\", 6);\n    i0.ɵɵtext(13, \"Sidebar Mini\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"li\", 7)(15, \"div\", 16)(16, \"span\", 17);\n    i0.ɵɵtext(17, \"OFF\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"bSwitch\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function FixedPluginComponent_ul_4_Template_bSwitch_ngModelChange_18_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      var ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.state = $event;\n    })(\"onChangeState\", function FixedPluginComponent_ul_4_Template_bSwitch_onChangeState_18_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      var ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.onChange($event);\n    })(\"click\", function FixedPluginComponent_ul_4_Template_bSwitch_click_18_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      var ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.onChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"span\", 19);\n    i0.ɵɵtext(20, \"ON\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"li\", 20)(22, \"div\", 16)(23, \"span\", 17);\n    i0.ɵɵtext(24, \" LIGHT MODE \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"bSwitch\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function FixedPluginComponent_ul_4_Template_bSwitch_ngModelChange_25_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      var ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.dashboardColor = $event;\n    })(\"onChangeState\", function FixedPluginComponent_ul_4_Template_bSwitch_onChangeState_25_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      var ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.onChangeDashboardColor($event);\n    })(\"click\", function FixedPluginComponent_ul_4_Template_bSwitch_click_25_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      var ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.onChangeDashboardColor($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"span\", 19);\n    i0.ɵɵtext(27, \" DARK MODE \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(28, \"li\", 21)(29, \"a\", 22);\n    i0.ɵɵtext(30, \" Documentation \");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx_r0.sidebarColor === \"primary\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, ctx_r0.sidebarColor === \"blue\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c0, ctx_r0.sidebarColor === \"green\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(19, _c0, ctx_r0.sidebarColor === \"orange\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(21, _c0, ctx_r0.sidebarColor === \"red\"));\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"switch-on-color\", \"primary\")(\"switch-off-text\", \" \")(\"switch-on-text\", \" \")(\"ngModel\", ctx_r0.state);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"switch-on-color\", \"primary\")(\"switch-off-text\", \" \")(\"switch-on-text\", \" \")(\"ngModel\", ctx_r0.dashboardColor);\n  }\n}\n\nexport var FixedPluginComponent = /*#__PURE__*/(function () {\n  var FixedPluginComponent = /*#__PURE__*/function () {\n    function FixedPluginComponent(toastr) {\n      _classCallCheck(this, FixedPluginComponent);\n\n      this.toastr = toastr;\n      this.sidebarColor = \"red\";\n      this.state = true;\n      this.dashboardColor = true;\n    }\n\n    _createClass(FixedPluginComponent, [{\n      key: \"changeSidebarColor\",\n      value: function changeSidebarColor(color) {\n        var sidebar = document.getElementsByClassName(\"sidebar\")[0];\n        var mainPanel = document.getElementsByClassName(\"main-panel\")[0];\n        this.sidebarColor = color;\n\n        if (sidebar != undefined) {\n          sidebar.setAttribute(\"data\", color);\n        }\n\n        if (mainPanel != undefined) {\n          mainPanel.setAttribute(\"data\", color);\n        }\n      }\n    }, {\n      key: \"changeDashboardColor\",\n      value: function changeDashboardColor(color) {\n        var body = document.getElementsByTagName(\"body\")[0];\n\n        if (body && color === \"white-content\") {\n          body.classList.add(color);\n        } else if (body.classList.contains(\"white-content\")) {\n          body.classList.remove(\"white-content\");\n        }\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {}\n    }, {\n      key: \"onChangeDashboardColor\",\n      value: function onChangeDashboardColor(event) {\n        var body = document.getElementsByTagName(\"body\")[0];\n\n        if (this.dashboardColor === true) {\n          this.changeDashboardColor(\"\");\n        } else {\n          this.changeDashboardColor(\"white-content\");\n        } // we simulate the window Resize so the charts will get updated in realtime.\n\n\n        var simulateWindowResize = setInterval(function () {\n          window.dispatchEvent(new Event(\"resize\"));\n        }, 180); // we stop the simulation of Window Resize after the animations are completed\n\n        setTimeout(function () {\n          clearInterval(simulateWindowResize);\n        }, 1000);\n      }\n    }, {\n      key: \"onChange\",\n      value: function onChange(event) {\n        var body = document.getElementsByTagName(\"body\")[0];\n\n        if (this.state === true) {\n          body.classList.remove(\"sidebar-mini\");\n          this.showSidebarMessage(\"Sidebar mini deactivated...\");\n        } else {\n          body.classList.add(\"sidebar-mini\");\n          this.showSidebarMessage(\"Sidebar mini activated...\");\n        } // we simulate the window Resize so the charts will get updated in realtime.\n\n\n        var simulateWindowResize = setInterval(function () {\n          window.dispatchEvent(new Event(\"resize\"));\n        }, 180); // we stop the simulation of Window Resize after the animations are completed\n\n        setTimeout(function () {\n          clearInterval(simulateWindowResize);\n        }, 1000);\n      }\n    }, {\n      key: \"showSidebarMessage\",\n      value: function showSidebarMessage(message) {\n        this.toastr.show('<span class=\"now-ui-icons ui-1_bell-53\"></span>', message, {\n          timeOut: 4000,\n          closeButton: true,\n          enableHtml: true,\n          toastClass: \"alert alert-danger alert-with-icon\",\n          positionClass: \"toast-top-right\"\n        });\n      }\n    }]);\n\n    return FixedPluginComponent;\n  }();\n\n  FixedPluginComponent.ɵfac = function FixedPluginComponent_Factory(t) {\n    return new (t || FixedPluginComponent)(i0.ɵɵdirectiveInject(i1.ToastrService));\n  };\n\n  FixedPluginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FixedPluginComponent,\n    selectors: [[\"app-fixed-plugin\"]],\n    decls: 5,\n    vars: 1,\n    consts: [[1, \"fixed-plugin\"], [\"dropdown\", \"\", 1, \"show-dropdown\", \"dropdown\", 3, \"insideClick\"], [\"id\", \"button-basic\", \"data-toggle\", \"dropdown\", \"dropdownToggle\", \"\", \"aria-controls\", \"dropdown-basic\", 1, \"dropdown-toggle\"], [1, \"fa\", \"fa-cog\", \"fa-2x\"], [\"id\", \"dropdown-basic\", \"class\", \"dropdown-menu\", \"role\", \"menu\", \"aria-labelledby\", \"button-basic\", 4, \"dropdownMenu\"], [\"id\", \"dropdown-basic\", \"role\", \"menu\", \"aria-labelledby\", \"button-basic\", 1, \"dropdown-menu\"], [1, \"header-title\"], [1, \"adjustments-line\"], [\"href\", \"javascript:void(0)\", 1, \"switch-trigger\", \"background-color\"], [1, \"badge-colors\", \"text-center\"], [1, \"badge\", \"filter\", \"badge-primary\", 3, \"ngClass\", \"click\"], [1, \"badge\", \"filter\", \"badge-info\", 3, \"ngClass\", \"click\"], [1, \"badge\", \"filter\", \"badge-success\", 3, \"ngClass\", \"click\"], [1, \"badge\", \"filter\", \"badge-warning\", 3, \"ngClass\", \"click\"], [1, \"badge\", \"filter\", \"badge-danger\", 3, \"ngClass\", \"click\"], [1, \"clearfix\"], [1, \"togglebutton\", \"switch-sidebar-mini\"], [1, \"label-switch\"], [3, \"switch-on-color\", \"switch-off-text\", \"switch-on-text\", \"ngModel\", \"ngModelChange\", \"onChangeState\", \"click\"], [1, \"label-switch\", \"label-right\"], [1, \"adjustments-line\", \"text-center\", \"color-change\"], [1, \"button-container\", \"mt-4\"], [\"href\", \"http://demos.creative-tim.com/black-dashboard-pro-angular/#/documentation/overview\", 1, \"btn\", \"btn-default\", \"btn-block\", \"btn-round\"]],\n    template: function FixedPluginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"a\", 2);\n        i0.ɵɵelement(3, \"i\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, FixedPluginComponent_ul_4_Template, 31, 23, \"ul\", 4);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"insideClick\", true);\n      }\n    },\n    directives: [i2.BsDropdownDirective, i2.BsDropdownToggleDirective, i2.BsDropdownMenuDirective, i3.NgClass, i4.JwBootstrapSwitchNg2Component, i5.NgControlStatus, i5.NgModel],\n    styles: [\"\"]\n  });\n  return FixedPluginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}