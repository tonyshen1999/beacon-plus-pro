{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/vector_map/gesture_handler.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nvar _ln = Math.log;\nvar _LN2 = Math.LN2;\nexport function GestureHandler(params) {\n  this._projection = params.projection;\n  this._renderer = params.renderer;\n  this._x = this._y = 0;\n\n  this._subscribeToTracker(params.tracker);\n}\nGestureHandler.prototype = {\n  constructor: GestureHandler,\n  dispose: function dispose() {\n    this._offTracker();\n\n    this._offTracker = null;\n  },\n  _subscribeToTracker: function _subscribeToTracker(tracker) {\n    var that = this;\n    var isActive = false;\n    that._offTracker = tracker.on({\n      start: function start(arg) {\n        isActive = \"control-bar\" !== arg.data.name;\n\n        if (isActive) {\n          that._processStart(arg);\n        }\n      },\n      move: function move(arg) {\n        if (isActive) {\n          that._processMove(arg);\n        }\n      },\n      end: function end() {\n        if (isActive) {\n          that._processEnd();\n        }\n      },\n      zoom: function zoom(arg) {\n        that._processZoom(arg);\n      }\n    });\n  },\n  setInteraction: function setInteraction(options) {\n    this._processEnd();\n\n    this._centeringEnabled = options.centeringEnabled;\n    this._zoomingEnabled = options.zoomingEnabled;\n  },\n  _processStart: function _processStart(arg) {\n    if (this._centeringEnabled) {\n      this._x = arg.x;\n      this._y = arg.y;\n\n      this._projection.beginMoveCenter();\n    }\n  },\n  _processMove: function _processMove(arg) {\n    if (this._centeringEnabled) {\n      this._renderer.root.attr({\n        cursor: \"move\"\n      });\n\n      this._projection.moveCenter([this._x - arg.x, this._y - arg.y]);\n\n      this._x = arg.x;\n      this._y = arg.y;\n    }\n  },\n  _processEnd: function _processEnd() {\n    if (this._centeringEnabled) {\n      this._renderer.root.attr({\n        cursor: \"default\"\n      });\n\n      this._projection.endMoveCenter();\n    }\n  },\n  _processZoom: function _processZoom(arg) {\n    var delta;\n    var screenPosition;\n    var coords;\n\n    if (this._zoomingEnabled) {\n      if (arg.delta) {\n        delta = arg.delta;\n      } else if (arg.ratio) {\n        delta = _ln(arg.ratio) / _LN2;\n      }\n\n      if (this._centeringEnabled) {\n        screenPosition = this._renderer.getRootOffset();\n        screenPosition = [arg.x - screenPosition.left, arg.y - screenPosition.top];\n        coords = this._projection.fromScreenPoint(screenPosition);\n      }\n\n      this._projection.changeScaledZoom(delta);\n\n      if (this._centeringEnabled) {\n        this._projection.setCenterByPoint(coords, screenPosition);\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}