{"ast":null,"code":"/**\r\n * DevExtreme (esm/viz/tree_map/tiling.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { isFunction as _isFunction } from \"../../core/utils/type\";\nimport { normalizeEnum as _normalizeEnum } from \"../core/utils\";\nvar _round = Math.round;\nvar algorithms = {};\nvar defaultAlgorithm;\nexport function getAlgorithm(value) {\n  return algorithms[_normalizeEnum(value)] || _isFunction(value) && value || defaultAlgorithm;\n}\nexport function addAlgorithm(name, callback) {\n  algorithms[name] = callback;\n}\nexport function setDefaultAlgorithm(name) {\n  defaultAlgorithm = algorithms[name];\n}\nvar directionToIndexOffsets = {};\ndirectionToIndexOffsets[-1] = [2, 0];\ndirectionToIndexOffsets[1] = [0, 2];\nexport var getStaticSideIndex = function getStaticSideIndex(rect) {\n  return rect[2] - rect[0] < rect[3] - rect[1] ? 0 : 1;\n};\nexport function buildSidesData(rect, directions, _staticSideIndex) {\n  var staticSideIndex = void 0 !== _staticSideIndex ? _staticSideIndex : getStaticSideIndex(rect);\n  var variedSideIndex = 1 - staticSideIndex;\n  var staticSideDirection = directions[staticSideIndex];\n  var variedSideDirection = directions[variedSideIndex];\n  var staticSideIndexOffsets = directionToIndexOffsets[staticSideDirection];\n  var variedSideIndexOffsets = directionToIndexOffsets[variedSideDirection];\n  return {\n    staticSide: rect[2 + staticSideIndex] - rect[staticSideIndex],\n    variedSide: rect[2 + variedSideIndex] - rect[variedSideIndex],\n    static1: staticSideIndex + staticSideIndexOffsets[0],\n    static2: staticSideIndex + staticSideIndexOffsets[1],\n    varied1: variedSideIndex + variedSideIndexOffsets[0],\n    varied2: variedSideIndex + variedSideIndexOffsets[1],\n    staticDir: staticSideDirection,\n    variedDir: variedSideDirection\n  };\n}\nexport function calculateRectangles(nodes, head, totalRect, sidesData, rowData) {\n  var i;\n  var ii;\n  var variedSidePart = [0, 0, 0, 0];\n  var static1 = sidesData.static1;\n  var static2 = sidesData.static2;\n  var position = totalRect[static1];\n  var dir = sidesData.staticDir;\n  var side = sidesData.staticSide;\n  var sum = rowData.sum;\n  var rect;\n  var delta;\n  variedSidePart[sidesData.varied1] = totalRect[sidesData.varied1];\n  variedSidePart[sidesData.varied2] = totalRect[sidesData.varied1] + sidesData.variedDir * rowData.side;\n\n  for (i = head, ii = head + rowData.count; i < ii; ++i) {\n    rect = variedSidePart.slice();\n    rect[static1] = position;\n    delta = _round(side * nodes[i].value / sum) || 0;\n    sum -= nodes[i].value;\n    side -= delta;\n    position += dir * delta;\n    rect[static2] = position;\n    nodes[i].rect = rect;\n  }\n\n  totalRect[sidesData.varied1] = variedSidePart[sidesData.varied2];\n}","map":null,"metadata":{},"sourceType":"module"}